{"ast":null,"code":"// Mostly inlined from within `customize-cra` https://www.npmjs.com/package/customize-cra\nconst getBabelLoader = config => {\n  // Filtering out rules that don't define babel plugins.\n  const babelLoaderFilter = rule => rule.loader && rule.loader.includes(\"babel\") && rule.options && rule.options.plugins; // First, try to find the babel loader inside the oneOf array.\n  // This is where we can find it when working with react-scripts@2.0.3.\n\n\n  let loaders = config.module.rules.find(rule => Array.isArray(rule.oneOf)).oneOf;\n  let babelLoader = loaders.find(babelLoaderFilter); // If the loader was not found, try to find it inside of the \"use\" array, within the rules.\n  // This should work when dealing with react-scripts@2.0.0.next.* versions.\n\n  if (!babelLoader) {\n    loaders = loaders.reduce((ldrs, rule) => ldrs.concat(rule.use || []), []);\n    babelLoader = loaders.find(babelLoaderFilter);\n  }\n\n  return babelLoader;\n}; // Curried function that uses config to search for babel loader and pushes new plugin to options list.\n\n\nconst addBabelPlugin = plugin => config => {\n  getBabelLoader(config).options.plugins.push(plugin);\n  return config;\n};\n\nfunction rewireHotLoader(config, env) {\n  if (env === 'production') {\n    return config;\n  } // Find a rule which contains eslint-loader\n\n\n  const condition = u => typeof u === 'object' && u.loader && u.loader.includes('eslint-loader');\n\n  const rule = config.module.rules.find(rule => rule.use && rule.use.some(condition));\n\n  if (rule) {\n    const use = rule.use.find(condition);\n\n    if (use) {\n      // Inject the option for eslint-loader\n      use.options.emitWarning = true;\n    }\n  } // If in development, add 'react-hot-loader/babel' to babel plugins.\n\n\n  return addBabelPlugin('react-hot-loader/babel')(config);\n}\n\nmodule.exports = rewireHotLoader;","map":{"version":3,"names":["getBabelLoader","config","babelLoaderFilter","rule","loader","includes","options","plugins","loaders","module","rules","find","Array","isArray","oneOf","babelLoader","reduce","ldrs","concat","use","addBabelPlugin","plugin","push","rewireHotLoader","env","condition","u","some","emitWarning","exports"],"sources":["C:/Users/Lenovo/Desktop/New folder (2)/strikingDash/node_modules/react-app-rewire-hot-loader/index.js"],"sourcesContent":["// Mostly inlined from within `customize-cra` https://www.npmjs.com/package/customize-cra\nconst getBabelLoader = config => {\n  // Filtering out rules that don't define babel plugins.\n  const babelLoaderFilter = rule =>\n    rule.loader &&\n    rule.loader.includes(\"babel\") &&\n    rule.options &&\n    rule.options.plugins;\n\n  // First, try to find the babel loader inside the oneOf array.\n  // This is where we can find it when working with react-scripts@2.0.3.\n  let loaders = config.module.rules.find(rule => Array.isArray(rule.oneOf))\n    .oneOf;\n\n  let babelLoader = loaders.find(babelLoaderFilter);\n\n  // If the loader was not found, try to find it inside of the \"use\" array, within the rules.\n  // This should work when dealing with react-scripts@2.0.0.next.* versions.\n  if (!babelLoader) {\n    loaders = loaders.reduce((ldrs, rule) => ldrs.concat(rule.use || []), []);\n    babelLoader = loaders.find(babelLoaderFilter);\n  }\n  return babelLoader;\n}\n\n// Curried function that uses config to search for babel loader and pushes new plugin to options list.\nconst addBabelPlugin = plugin => config => {\n  getBabelLoader(config).options.plugins.push(plugin);\n  return config;\n};\n\nfunction rewireHotLoader(config, env) {\n  if (env === 'production') {\n    return config;\n  }\n\n  // Find a rule which contains eslint-loader\n  const condition = u => typeof u === 'object' && u.loader && u.loader.includes('eslint-loader');\n  const rule = config.module.rules.find(rule => rule.use && rule.use.some(condition));\n\n  if (rule) {\n    const use = rule.use.find(condition);\n\n    if (use) {\n      // Inject the option for eslint-loader\n      use.options.emitWarning = true;\n    }\n  }\n  \n  // If in development, add 'react-hot-loader/babel' to babel plugins.\n  return addBabelPlugin('react-hot-loader/babel')(config);\n}\n\nmodule.exports = rewireHotLoader;\n"],"mappings":"AAAA;AACA,MAAMA,cAAc,GAAGC,MAAM,IAAI;EAC/B;EACA,MAAMC,iBAAiB,GAAGC,IAAI,IAC5BA,IAAI,CAACC,MAAL,IACAD,IAAI,CAACC,MAAL,CAAYC,QAAZ,CAAqB,OAArB,CADA,IAEAF,IAAI,CAACG,OAFL,IAGAH,IAAI,CAACG,OAAL,CAAaC,OAJf,CAF+B,CAQ/B;EACA;;;EACA,IAAIC,OAAO,GAAGP,MAAM,CAACQ,MAAP,CAAcC,KAAd,CAAoBC,IAApB,CAAyBR,IAAI,IAAIS,KAAK,CAACC,OAAN,CAAcV,IAAI,CAACW,KAAnB,CAAjC,EACXA,KADH;EAGA,IAAIC,WAAW,GAAGP,OAAO,CAACG,IAAR,CAAaT,iBAAb,CAAlB,CAb+B,CAe/B;EACA;;EACA,IAAI,CAACa,WAAL,EAAkB;IAChBP,OAAO,GAAGA,OAAO,CAACQ,MAAR,CAAe,CAACC,IAAD,EAAOd,IAAP,KAAgBc,IAAI,CAACC,MAAL,CAAYf,IAAI,CAACgB,GAAL,IAAY,EAAxB,CAA/B,EAA4D,EAA5D,CAAV;IACAJ,WAAW,GAAGP,OAAO,CAACG,IAAR,CAAaT,iBAAb,CAAd;EACD;;EACD,OAAOa,WAAP;AACD,CAtBD,C,CAwBA;;;AACA,MAAMK,cAAc,GAAGC,MAAM,IAAIpB,MAAM,IAAI;EACzCD,cAAc,CAACC,MAAD,CAAd,CAAuBK,OAAvB,CAA+BC,OAA/B,CAAuCe,IAAvC,CAA4CD,MAA5C;EACA,OAAOpB,MAAP;AACD,CAHD;;AAKA,SAASsB,eAAT,CAAyBtB,MAAzB,EAAiCuB,GAAjC,EAAsC;EACpC,IAAIA,GAAG,KAAK,YAAZ,EAA0B;IACxB,OAAOvB,MAAP;EACD,CAHmC,CAKpC;;;EACA,MAAMwB,SAAS,GAAGC,CAAC,IAAI,OAAOA,CAAP,KAAa,QAAb,IAAyBA,CAAC,CAACtB,MAA3B,IAAqCsB,CAAC,CAACtB,MAAF,CAASC,QAAT,CAAkB,eAAlB,CAA5D;;EACA,MAAMF,IAAI,GAAGF,MAAM,CAACQ,MAAP,CAAcC,KAAd,CAAoBC,IAApB,CAAyBR,IAAI,IAAIA,IAAI,CAACgB,GAAL,IAAYhB,IAAI,CAACgB,GAAL,CAASQ,IAAT,CAAcF,SAAd,CAA7C,CAAb;;EAEA,IAAItB,IAAJ,EAAU;IACR,MAAMgB,GAAG,GAAGhB,IAAI,CAACgB,GAAL,CAASR,IAAT,CAAcc,SAAd,CAAZ;;IAEA,IAAIN,GAAJ,EAAS;MACP;MACAA,GAAG,CAACb,OAAJ,CAAYsB,WAAZ,GAA0B,IAA1B;IACD;EACF,CAhBmC,CAkBpC;;;EACA,OAAOR,cAAc,CAAC,wBAAD,CAAd,CAAyCnB,MAAzC,CAAP;AACD;;AAEDQ,MAAM,CAACoB,OAAP,GAAiBN,eAAjB"},"metadata":{},"sourceType":"script"}
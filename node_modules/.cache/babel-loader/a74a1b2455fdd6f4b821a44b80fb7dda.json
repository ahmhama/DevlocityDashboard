{"ast":null,"code":"import \"antd/es/badge/style\";\nimport _Badge from \"antd/es/badge\";\nvar _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\New folder (2)\\\\strikingDash\\\\src\\\\container\\\\chat\\\\overview\\\\AllContacts.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport moment from 'moment';\nimport FeatherIcon from 'feather-icons-react';\nimport PropTypes from 'prop-types';\nimport { BlockSpan, ChatWrapper } from '../style';\nimport { textRefactor } from '../../../components/utilities/utilities';\nimport { filterSinglePage } from '../../../redux/chat/actionCreator';\nimport { Button } from '../../../components/buttons/buttons';\n\nconst AllContacts = _ref => {\n  let {\n    match\n  } = _ref;\n  const dispatch = useDispatch();\n  const chat = useSelector(state => state.chat.data);\n  const [state] = useState({\n    chatData: chat\n  });\n  const {\n    chatData\n  } = state;\n\n  const dataFiltering = e => {\n    dispatch(filterSinglePage(e.currentTarget.getAttribute('data-email')));\n  };\n\n  return /*#__PURE__*/React.createElement(ChatWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"create-action\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"btn-add\",\n    size: \"default\",\n    type: \"default\",\n    shape: \"circle\",\n    block: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FeatherIcon, {\n    icon: \"user-plus\",\n    size: 14,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }), \"Add New Contact\")), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, chatData && chatData.sort((a, b) => {\n    return b.time - a.time;\n  }).map((user, key) => {\n    const {\n      userName,\n      content,\n      email,\n      active,\n      img\n    } = user;\n    const id = content[content.length - 1].time;\n    const same = moment(id).format('MM-DD-YYYY') === moment().format('MM-DD-YYYY');\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: id,\n      className: \"chat-link-signle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      onClick: dataFiltering,\n      \"data-email\": email,\n      to: `${match.path}/${email}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"author-figure\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: require(`../../../static/img/chat-author/${img}`),\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: active ? 'active' : 'inactive',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"author-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(BlockSpan, {\n      className: \"author-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 23\n      }\n    }, userName), /*#__PURE__*/React.createElement(BlockSpan, {\n      className: \"author-chatText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 23\n      }\n    }, textRefactor(content[content.length - 1].content, 5))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"author-chatMeta\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(BlockSpan, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 23\n      }\n    }, same ? moment(id).format('hh:mm A') : moment(id).format('dddd')), key <= 1 && /*#__PURE__*/React.createElement(_Badge, {\n      className: \"badge-success\",\n      count: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 36\n      }\n    }))));\n  })));\n};\n\n__signature__(AllContacts, \"useDispatch{dispatch}\\nuseSelector{chat}\\nuseState{[state]({\\r\\n    chatData: chat,\\r\\n  })}\", () => [useDispatch, useSelector]);\n\nAllContacts.propTypes = {\n  match: PropTypes.object\n};\nconst _default = AllContacts;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(AllContacts, \"AllContacts\", \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\New folder (2)\\\\strikingDash\\\\src\\\\container\\\\chat\\\\overview\\\\AllContacts.js\");\n  reactHotLoader.register(_default, \"default\", \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\New folder (2)\\\\strikingDash\\\\src\\\\container\\\\chat\\\\overview\\\\AllContacts.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"names":["React","useState","useSelector","useDispatch","NavLink","moment","FeatherIcon","PropTypes","BlockSpan","ChatWrapper","textRefactor","filterSinglePage","Button","AllContacts","match","dispatch","chat","state","data","chatData","dataFiltering","e","currentTarget","getAttribute","sort","a","b","time","map","user","key","userName","content","email","active","img","id","length","same","format","path","require","propTypes","object"],"sources":["C:/Users/Lenovo/Desktop/New folder (2)/strikingDash/src/container/chat/overview/AllContacts.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport FeatherIcon from 'feather-icons-react';\r\nimport PropTypes from 'prop-types';\r\nimport { Badge } from 'antd';\r\nimport { BlockSpan, ChatWrapper } from '../style';\r\nimport { textRefactor } from '../../../components/utilities/utilities';\r\nimport { filterSinglePage } from '../../../redux/chat/actionCreator';\r\nimport { Button } from '../../../components/buttons/buttons';\r\n\r\nconst AllContacts = ({ match }) => {\r\n  const dispatch = useDispatch();\r\n  const chat = useSelector(state => state.chat.data);\r\n\r\n  const [state] = useState({\r\n    chatData: chat,\r\n  });\r\n\r\n  const { chatData } = state;\r\n\r\n  const dataFiltering = e => {\r\n    dispatch(filterSinglePage(e.currentTarget.getAttribute('data-email')));\r\n  };\r\n\r\n  return (\r\n    <ChatWrapper>\r\n      <div className=\"create-action\">\r\n        <Button className=\"btn-add\" size=\"default\" type=\"default\" shape=\"circle\" block>\r\n          <FeatherIcon icon=\"user-plus\" size={14} />\r\n          Add New Contact\r\n        </Button>\r\n      </div>\r\n      <ul>\r\n        {chatData &&\r\n          chatData\r\n            .sort((a, b) => {\r\n              return b.time - a.time;\r\n            })\r\n            .map((user, key) => {\r\n              const { userName, content, email, active, img } = user;\r\n              const id = content[content.length - 1].time;\r\n              const same = moment(id).format('MM-DD-YYYY') === moment().format('MM-DD-YYYY');\r\n              return (\r\n                <li key={id} className=\"chat-link-signle\">\r\n                  <NavLink onClick={dataFiltering} data-email={email} to={`${match.path}/${email}`}>\r\n                    <div className=\"author-figure\">\r\n                      <img src={require(`../../../static/img/chat-author/${img}`)} alt=\"\" />\r\n                      <span className={active ? 'active' : 'inactive'} />\r\n                    </div>\r\n                    <div className=\"author-info\">\r\n                      <BlockSpan className=\"author-name\">{userName}</BlockSpan>\r\n\r\n                      <BlockSpan className=\"author-chatText\">\r\n                        {textRefactor(content[content.length - 1].content, 5)}\r\n                      </BlockSpan>\r\n                    </div>\r\n                    <div className=\"author-chatMeta\">\r\n                      <BlockSpan>{same ? moment(id).format('hh:mm A') : moment(id).format('dddd')}</BlockSpan>\r\n                      {key <= 1 && <Badge className=\"badge-success\" count={3} />}\r\n                    </div>\r\n                  </NavLink>\r\n                </li>\r\n              );\r\n            })}\r\n      </ul>\r\n    </ChatWrapper>\r\n  );\r\n};\r\nAllContacts.propTypes = {\r\n  match: PropTypes.object,\r\n};\r\nexport default AllContacts;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
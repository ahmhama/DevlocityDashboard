{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.arrAdd = arrAdd;\nexports.arrDel = arrDel;\nexports.calcDropPosition = calcDropPosition;\nexports.calcSelectedKeys = calcSelectedKeys;\nexports.conductExpandParent = conductExpandParent;\nexports.convertDataToTree = convertDataToTree;\nexports.getDragChildrenKeys = getDragChildrenKeys;\nexports.getPosition = getPosition;\nexports.isFirstChild = isFirstChild;\nexports.isLastChild = isLastChild;\nexports.isTreeNode = isTreeNode;\nexports.parseCheckedKeys = parseCheckedKeys;\nexports.posToArr = posToArr;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _warning = _interopRequireDefault(require(\"rc-util/lib/warning\"));\n\nvar _TreeNode = _interopRequireDefault(require(\"./TreeNode\"));\n\nvar _excluded = [\"children\"];\n\nfunction arrDel(list, value) {\n  if (!list) return [];\n  var clone = list.slice();\n  var index = clone.indexOf(value);\n\n  if (index >= 0) {\n    clone.splice(index, 1);\n  }\n\n  return clone;\n}\n\nfunction arrAdd(list, value) {\n  var clone = (list || []).slice();\n\n  if (clone.indexOf(value) === -1) {\n    clone.push(value);\n  }\n\n  return clone;\n}\n\nfunction posToArr(pos) {\n  return pos.split('-');\n}\n\nfunction getPosition(level, index) {\n  return \"\".concat(level, \"-\").concat(index);\n}\n\nfunction isTreeNode(node) {\n  return node && node.type && node.type.isTreeNode;\n}\n\nfunction getDragChildrenKeys(dragNodeKey, keyEntities) {\n  // not contains self\n  // self for left or right drag\n  var dragChildrenKeys = [];\n  var entity = keyEntities[dragNodeKey];\n\n  function dig() {\n    var list = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    list.forEach(function (_ref) {\n      var key = _ref.key,\n          children = _ref.children;\n      dragChildrenKeys.push(key);\n      dig(children);\n    });\n  }\n\n  dig(entity.children);\n  return dragChildrenKeys;\n}\n\nfunction isLastChild(treeNodeEntity) {\n  if (treeNodeEntity.parent) {\n    var posArr = posToArr(treeNodeEntity.pos);\n    return Number(posArr[posArr.length - 1]) === treeNodeEntity.parent.children.length - 1;\n  }\n\n  return false;\n}\n\nfunction isFirstChild(treeNodeEntity) {\n  var posArr = posToArr(treeNodeEntity.pos);\n  return Number(posArr[posArr.length - 1]) === 0;\n} // Only used when drag, not affect SSR.\n\n\nfunction calcDropPosition(event, dragNode, targetNode, indent, startMousePosition, allowDrop, flattenedNodes, keyEntities, expandKeys, direction) {\n  var _abstractDropNodeEnti;\n\n  var clientX = event.clientX,\n      clientY = event.clientY;\n\n  var _event$target$getBoun = event.target.getBoundingClientRect(),\n      top = _event$target$getBoun.top,\n      height = _event$target$getBoun.height; // optional chain for testing\n\n\n  var horizontalMouseOffset = (direction === 'rtl' ? -1 : 1) * (((startMousePosition === null || startMousePosition === void 0 ? void 0 : startMousePosition.x) || 0) - clientX);\n  var rawDropLevelOffset = (horizontalMouseOffset - 12) / indent; // find abstract drop node by horizontal offset\n\n  var abstractDropNodeEntity = keyEntities[targetNode.props.eventKey];\n\n  if (clientY < top + height / 2) {\n    // first half, set abstract drop node to previous node\n    var nodeIndex = flattenedNodes.findIndex(function (flattenedNode) {\n      return flattenedNode.key === abstractDropNodeEntity.key;\n    });\n    var prevNodeIndex = nodeIndex <= 0 ? 0 : nodeIndex - 1;\n    var prevNodeKey = flattenedNodes[prevNodeIndex].key;\n    abstractDropNodeEntity = keyEntities[prevNodeKey];\n  }\n\n  var initialAbstractDropNodeKey = abstractDropNodeEntity.key;\n  var abstractDragOverEntity = abstractDropNodeEntity;\n  var dragOverNodeKey = abstractDropNodeEntity.key;\n  var dropPosition = 0;\n  var dropLevelOffset = 0; // Only allow cross level drop when dragging on a non-expanded node\n\n  if (!expandKeys.includes(initialAbstractDropNodeKey)) {\n    for (var i = 0; i < rawDropLevelOffset; i += 1) {\n      if (isLastChild(abstractDropNodeEntity)) {\n        abstractDropNodeEntity = abstractDropNodeEntity.parent;\n        dropLevelOffset += 1;\n      } else {\n        break;\n      }\n    }\n  }\n\n  var abstractDragDataNode = dragNode.props.data;\n  var abstractDropDataNode = abstractDropNodeEntity.node;\n  var dropAllowed = true;\n\n  if (isFirstChild(abstractDropNodeEntity) && abstractDropNodeEntity.level === 0 && clientY < top + height / 2 && allowDrop({\n    dragNode: abstractDragDataNode,\n    dropNode: abstractDropDataNode,\n    dropPosition: -1\n  }) && abstractDropNodeEntity.key === targetNode.props.eventKey) {\n    // first half of first node in first level\n    dropPosition = -1;\n  } else if ((abstractDragOverEntity.children || []).length && expandKeys.includes(dragOverNodeKey)) {\n    // drop on expanded node\n    // only allow drop inside\n    if (allowDrop({\n      dragNode: abstractDragDataNode,\n      dropNode: abstractDropDataNode,\n      dropPosition: 0\n    })) {\n      dropPosition = 0;\n    } else {\n      dropAllowed = false;\n    }\n  } else if (dropLevelOffset === 0) {\n    if (rawDropLevelOffset > -1.5) {\n      // | Node     | <- abstractDropNode\n      // | -^-===== | <- mousePosition\n      // 1. try drop after\n      // 2. do not allow drop\n      if (allowDrop({\n        dragNode: abstractDragDataNode,\n        dropNode: abstractDropDataNode,\n        dropPosition: 1\n      })) {\n        dropPosition = 1;\n      } else {\n        dropAllowed = false;\n      }\n    } else {\n      // | Node     | <- abstractDropNode\n      // | ---==^== | <- mousePosition\n      // whether it has children or doesn't has children\n      // always\n      // 1. try drop inside\n      // 2. try drop after\n      // 3. do not allow drop\n      if (allowDrop({\n        dragNode: abstractDragDataNode,\n        dropNode: abstractDropDataNode,\n        dropPosition: 0\n      })) {\n        dropPosition = 0;\n      } else if (allowDrop({\n        dragNode: abstractDragDataNode,\n        dropNode: abstractDropDataNode,\n        dropPosition: 1\n      })) {\n        dropPosition = 1;\n      } else {\n        dropAllowed = false;\n      }\n    }\n  } else {\n    // | Node1 | <- abstractDropNode\n    //      |  Node2  |\n    // --^--|----=====| <- mousePosition\n    // 1. try insert after Node1\n    // 2. do not allow drop\n    if (allowDrop({\n      dragNode: abstractDragDataNode,\n      dropNode: abstractDropDataNode,\n      dropPosition: 1\n    })) {\n      dropPosition = 1;\n    } else {\n      dropAllowed = false;\n    }\n  }\n\n  return {\n    dropPosition: dropPosition,\n    dropLevelOffset: dropLevelOffset,\n    dropTargetKey: abstractDropNodeEntity.key,\n    dropTargetPos: abstractDropNodeEntity.pos,\n    dragOverNodeKey: dragOverNodeKey,\n    dropContainerKey: dropPosition === 0 ? null : ((_abstractDropNodeEnti = abstractDropNodeEntity.parent) === null || _abstractDropNodeEnti === void 0 ? void 0 : _abstractDropNodeEnti.key) || null,\n    dropAllowed: dropAllowed\n  };\n}\n/**\n * Return selectedKeys according with multiple prop\n * @param selectedKeys\n * @param props\n * @returns [string]\n */\n\n\nfunction calcSelectedKeys(selectedKeys, props) {\n  if (!selectedKeys) return undefined;\n  var multiple = props.multiple;\n\n  if (multiple) {\n    return selectedKeys.slice();\n  }\n\n  if (selectedKeys.length) {\n    return [selectedKeys[0]];\n  }\n\n  return selectedKeys;\n}\n\nvar internalProcessProps = function internalProcessProps(props) {\n  return props;\n};\n\nfunction convertDataToTree(treeData, processor) {\n  if (!treeData) return [];\n\n  var _ref2 = processor || {},\n      _ref2$processProps = _ref2.processProps,\n      processProps = _ref2$processProps === void 0 ? internalProcessProps : _ref2$processProps;\n\n  var list = Array.isArray(treeData) ? treeData : [treeData];\n  return list.map(function (_ref3) {\n    var children = _ref3.children,\n        props = (0, _objectWithoutProperties2.default)(_ref3, _excluded);\n    var childrenNodes = convertDataToTree(children, processor);\n    return /*#__PURE__*/_react.default.createElement(_TreeNode.default, (0, _extends2.default)({\n      key: props.key\n    }, processProps(props)), childrenNodes);\n  });\n}\n/**\n * Parse `checkedKeys` to { checkedKeys, halfCheckedKeys } style\n */\n\n\nfunction parseCheckedKeys(keys) {\n  if (!keys) {\n    return null;\n  } // Convert keys to object format\n\n\n  var keyProps;\n\n  if (Array.isArray(keys)) {\n    // [Legacy] Follow the api doc\n    keyProps = {\n      checkedKeys: keys,\n      halfCheckedKeys: undefined\n    };\n  } else if ((0, _typeof2.default)(keys) === 'object') {\n    keyProps = {\n      checkedKeys: keys.checked || undefined,\n      halfCheckedKeys: keys.halfChecked || undefined\n    };\n  } else {\n    (0, _warning.default)(false, '`checkedKeys` is not an array or an object');\n    return null;\n  }\n\n  return keyProps;\n}\n/**\n * If user use `autoExpandParent` we should get the list of parent node\n * @param keyList\n * @param keyEntities\n */\n\n\nfunction conductExpandParent(keyList, keyEntities) {\n  var expandedKeys = new Set();\n\n  function conductUp(key) {\n    if (expandedKeys.has(key)) return;\n    var entity = keyEntities[key];\n    if (!entity) return;\n    expandedKeys.add(key);\n    var parent = entity.parent,\n        node = entity.node;\n    if (node.disabled) return;\n\n    if (parent) {\n      conductUp(parent.key);\n    }\n  }\n\n  (keyList || []).forEach(function (key) {\n    conductUp(key);\n  });\n  return (0, _toConsumableArray2.default)(expandedKeys);\n}","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","arrAdd","arrDel","calcDropPosition","calcSelectedKeys","conductExpandParent","convertDataToTree","getDragChildrenKeys","getPosition","isFirstChild","isLastChild","isTreeNode","parseCheckedKeys","posToArr","_toConsumableArray2","_typeof2","_extends2","_objectWithoutProperties2","_react","_warning","_TreeNode","_excluded","list","clone","slice","index","indexOf","splice","push","pos","split","level","concat","node","type","dragNodeKey","keyEntities","dragChildrenKeys","entity","dig","arguments","length","undefined","forEach","_ref","key","children","treeNodeEntity","parent","posArr","Number","event","dragNode","targetNode","indent","startMousePosition","allowDrop","flattenedNodes","expandKeys","direction","_abstractDropNodeEnti","clientX","clientY","_event$target$getBoun","target","getBoundingClientRect","top","height","horizontalMouseOffset","x","rawDropLevelOffset","abstractDropNodeEntity","props","eventKey","nodeIndex","findIndex","flattenedNode","prevNodeIndex","prevNodeKey","initialAbstractDropNodeKey","abstractDragOverEntity","dragOverNodeKey","dropPosition","dropLevelOffset","includes","i","abstractDragDataNode","data","abstractDropDataNode","dropAllowed","dropNode","dropTargetKey","dropTargetPos","dropContainerKey","selectedKeys","multiple","internalProcessProps","treeData","processor","_ref2","_ref2$processProps","processProps","Array","isArray","map","_ref3","default","childrenNodes","createElement","keys","keyProps","checkedKeys","halfCheckedKeys","checked","halfChecked","keyList","expandedKeys","Set","conductUp","has","add","disabled"],"sources":["C:/Users/Lenovo/Desktop/New folder (2)/strikingDash/node_modules/rc-tree/lib/util.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.arrAdd = arrAdd;\nexports.arrDel = arrDel;\nexports.calcDropPosition = calcDropPosition;\nexports.calcSelectedKeys = calcSelectedKeys;\nexports.conductExpandParent = conductExpandParent;\nexports.convertDataToTree = convertDataToTree;\nexports.getDragChildrenKeys = getDragChildrenKeys;\nexports.getPosition = getPosition;\nexports.isFirstChild = isFirstChild;\nexports.isLastChild = isLastChild;\nexports.isTreeNode = isTreeNode;\nexports.parseCheckedKeys = parseCheckedKeys;\nexports.posToArr = posToArr;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _warning = _interopRequireDefault(require(\"rc-util/lib/warning\"));\n\nvar _TreeNode = _interopRequireDefault(require(\"./TreeNode\"));\n\nvar _excluded = [\"children\"];\n\nfunction arrDel(list, value) {\n  if (!list) return [];\n  var clone = list.slice();\n  var index = clone.indexOf(value);\n\n  if (index >= 0) {\n    clone.splice(index, 1);\n  }\n\n  return clone;\n}\n\nfunction arrAdd(list, value) {\n  var clone = (list || []).slice();\n\n  if (clone.indexOf(value) === -1) {\n    clone.push(value);\n  }\n\n  return clone;\n}\n\nfunction posToArr(pos) {\n  return pos.split('-');\n}\n\nfunction getPosition(level, index) {\n  return \"\".concat(level, \"-\").concat(index);\n}\n\nfunction isTreeNode(node) {\n  return node && node.type && node.type.isTreeNode;\n}\n\nfunction getDragChildrenKeys(dragNodeKey, keyEntities) {\n  // not contains self\n  // self for left or right drag\n  var dragChildrenKeys = [];\n  var entity = keyEntities[dragNodeKey];\n\n  function dig() {\n    var list = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    list.forEach(function (_ref) {\n      var key = _ref.key,\n          children = _ref.children;\n      dragChildrenKeys.push(key);\n      dig(children);\n    });\n  }\n\n  dig(entity.children);\n  return dragChildrenKeys;\n}\n\nfunction isLastChild(treeNodeEntity) {\n  if (treeNodeEntity.parent) {\n    var posArr = posToArr(treeNodeEntity.pos);\n    return Number(posArr[posArr.length - 1]) === treeNodeEntity.parent.children.length - 1;\n  }\n\n  return false;\n}\n\nfunction isFirstChild(treeNodeEntity) {\n  var posArr = posToArr(treeNodeEntity.pos);\n  return Number(posArr[posArr.length - 1]) === 0;\n} // Only used when drag, not affect SSR.\n\n\nfunction calcDropPosition(event, dragNode, targetNode, indent, startMousePosition, allowDrop, flattenedNodes, keyEntities, expandKeys, direction) {\n  var _abstractDropNodeEnti;\n\n  var clientX = event.clientX,\n      clientY = event.clientY;\n\n  var _event$target$getBoun = event.target.getBoundingClientRect(),\n      top = _event$target$getBoun.top,\n      height = _event$target$getBoun.height; // optional chain for testing\n\n\n  var horizontalMouseOffset = (direction === 'rtl' ? -1 : 1) * (((startMousePosition === null || startMousePosition === void 0 ? void 0 : startMousePosition.x) || 0) - clientX);\n  var rawDropLevelOffset = (horizontalMouseOffset - 12) / indent; // find abstract drop node by horizontal offset\n\n  var abstractDropNodeEntity = keyEntities[targetNode.props.eventKey];\n\n  if (clientY < top + height / 2) {\n    // first half, set abstract drop node to previous node\n    var nodeIndex = flattenedNodes.findIndex(function (flattenedNode) {\n      return flattenedNode.key === abstractDropNodeEntity.key;\n    });\n    var prevNodeIndex = nodeIndex <= 0 ? 0 : nodeIndex - 1;\n    var prevNodeKey = flattenedNodes[prevNodeIndex].key;\n    abstractDropNodeEntity = keyEntities[prevNodeKey];\n  }\n\n  var initialAbstractDropNodeKey = abstractDropNodeEntity.key;\n  var abstractDragOverEntity = abstractDropNodeEntity;\n  var dragOverNodeKey = abstractDropNodeEntity.key;\n  var dropPosition = 0;\n  var dropLevelOffset = 0; // Only allow cross level drop when dragging on a non-expanded node\n\n  if (!expandKeys.includes(initialAbstractDropNodeKey)) {\n    for (var i = 0; i < rawDropLevelOffset; i += 1) {\n      if (isLastChild(abstractDropNodeEntity)) {\n        abstractDropNodeEntity = abstractDropNodeEntity.parent;\n        dropLevelOffset += 1;\n      } else {\n        break;\n      }\n    }\n  }\n\n  var abstractDragDataNode = dragNode.props.data;\n  var abstractDropDataNode = abstractDropNodeEntity.node;\n  var dropAllowed = true;\n\n  if (isFirstChild(abstractDropNodeEntity) && abstractDropNodeEntity.level === 0 && clientY < top + height / 2 && allowDrop({\n    dragNode: abstractDragDataNode,\n    dropNode: abstractDropDataNode,\n    dropPosition: -1\n  }) && abstractDropNodeEntity.key === targetNode.props.eventKey) {\n    // first half of first node in first level\n    dropPosition = -1;\n  } else if ((abstractDragOverEntity.children || []).length && expandKeys.includes(dragOverNodeKey)) {\n    // drop on expanded node\n    // only allow drop inside\n    if (allowDrop({\n      dragNode: abstractDragDataNode,\n      dropNode: abstractDropDataNode,\n      dropPosition: 0\n    })) {\n      dropPosition = 0;\n    } else {\n      dropAllowed = false;\n    }\n  } else if (dropLevelOffset === 0) {\n    if (rawDropLevelOffset > -1.5) {\n      // | Node     | <- abstractDropNode\n      // | -^-===== | <- mousePosition\n      // 1. try drop after\n      // 2. do not allow drop\n      if (allowDrop({\n        dragNode: abstractDragDataNode,\n        dropNode: abstractDropDataNode,\n        dropPosition: 1\n      })) {\n        dropPosition = 1;\n      } else {\n        dropAllowed = false;\n      }\n    } else {\n      // | Node     | <- abstractDropNode\n      // | ---==^== | <- mousePosition\n      // whether it has children or doesn't has children\n      // always\n      // 1. try drop inside\n      // 2. try drop after\n      // 3. do not allow drop\n      if (allowDrop({\n        dragNode: abstractDragDataNode,\n        dropNode: abstractDropDataNode,\n        dropPosition: 0\n      })) {\n        dropPosition = 0;\n      } else if (allowDrop({\n        dragNode: abstractDragDataNode,\n        dropNode: abstractDropDataNode,\n        dropPosition: 1\n      })) {\n        dropPosition = 1;\n      } else {\n        dropAllowed = false;\n      }\n    }\n  } else {\n    // | Node1 | <- abstractDropNode\n    //      |  Node2  |\n    // --^--|----=====| <- mousePosition\n    // 1. try insert after Node1\n    // 2. do not allow drop\n    if (allowDrop({\n      dragNode: abstractDragDataNode,\n      dropNode: abstractDropDataNode,\n      dropPosition: 1\n    })) {\n      dropPosition = 1;\n    } else {\n      dropAllowed = false;\n    }\n  }\n\n  return {\n    dropPosition: dropPosition,\n    dropLevelOffset: dropLevelOffset,\n    dropTargetKey: abstractDropNodeEntity.key,\n    dropTargetPos: abstractDropNodeEntity.pos,\n    dragOverNodeKey: dragOverNodeKey,\n    dropContainerKey: dropPosition === 0 ? null : ((_abstractDropNodeEnti = abstractDropNodeEntity.parent) === null || _abstractDropNodeEnti === void 0 ? void 0 : _abstractDropNodeEnti.key) || null,\n    dropAllowed: dropAllowed\n  };\n}\n/**\n * Return selectedKeys according with multiple prop\n * @param selectedKeys\n * @param props\n * @returns [string]\n */\n\n\nfunction calcSelectedKeys(selectedKeys, props) {\n  if (!selectedKeys) return undefined;\n  var multiple = props.multiple;\n\n  if (multiple) {\n    return selectedKeys.slice();\n  }\n\n  if (selectedKeys.length) {\n    return [selectedKeys[0]];\n  }\n\n  return selectedKeys;\n}\n\nvar internalProcessProps = function internalProcessProps(props) {\n  return props;\n};\n\nfunction convertDataToTree(treeData, processor) {\n  if (!treeData) return [];\n\n  var _ref2 = processor || {},\n      _ref2$processProps = _ref2.processProps,\n      processProps = _ref2$processProps === void 0 ? internalProcessProps : _ref2$processProps;\n\n  var list = Array.isArray(treeData) ? treeData : [treeData];\n  return list.map(function (_ref3) {\n    var children = _ref3.children,\n        props = (0, _objectWithoutProperties2.default)(_ref3, _excluded);\n    var childrenNodes = convertDataToTree(children, processor);\n    return /*#__PURE__*/_react.default.createElement(_TreeNode.default, (0, _extends2.default)({\n      key: props.key\n    }, processProps(props)), childrenNodes);\n  });\n}\n/**\n * Parse `checkedKeys` to { checkedKeys, halfCheckedKeys } style\n */\n\n\nfunction parseCheckedKeys(keys) {\n  if (!keys) {\n    return null;\n  } // Convert keys to object format\n\n\n  var keyProps;\n\n  if (Array.isArray(keys)) {\n    // [Legacy] Follow the api doc\n    keyProps = {\n      checkedKeys: keys,\n      halfCheckedKeys: undefined\n    };\n  } else if ((0, _typeof2.default)(keys) === 'object') {\n    keyProps = {\n      checkedKeys: keys.checked || undefined,\n      halfCheckedKeys: keys.halfChecked || undefined\n    };\n  } else {\n    (0, _warning.default)(false, '`checkedKeys` is not an array or an object');\n    return null;\n  }\n\n  return keyProps;\n}\n/**\n * If user use `autoExpandParent` we should get the list of parent node\n * @param keyList\n * @param keyEntities\n */\n\n\nfunction conductExpandParent(keyList, keyEntities) {\n  var expandedKeys = new Set();\n\n  function conductUp(key) {\n    if (expandedKeys.has(key)) return;\n    var entity = keyEntities[key];\n    if (!entity) return;\n    expandedKeys.add(key);\n    var parent = entity.parent,\n        node = entity.node;\n    if (node.disabled) return;\n\n    if (parent) {\n      conductUp(parent.key);\n    }\n  }\n\n  (keyList || []).forEach(function (key) {\n    conductUp(key);\n  });\n  return (0, _toConsumableArray2.default)(expandedKeys);\n}"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEAC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAC3CC,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,MAAR,GAAiBA,MAAjB;AACAF,OAAO,CAACG,MAAR,GAAiBA,MAAjB;AACAH,OAAO,CAACI,gBAAR,GAA2BA,gBAA3B;AACAJ,OAAO,CAACK,gBAAR,GAA2BA,gBAA3B;AACAL,OAAO,CAACM,mBAAR,GAA8BA,mBAA9B;AACAN,OAAO,CAACO,iBAAR,GAA4BA,iBAA5B;AACAP,OAAO,CAACQ,mBAAR,GAA8BA,mBAA9B;AACAR,OAAO,CAACS,WAAR,GAAsBA,WAAtB;AACAT,OAAO,CAACU,YAAR,GAAuBA,YAAvB;AACAV,OAAO,CAACW,WAAR,GAAsBA,WAAtB;AACAX,OAAO,CAACY,UAAR,GAAqBA,UAArB;AACAZ,OAAO,CAACa,gBAAR,GAA2BA,gBAA3B;AACAb,OAAO,CAACc,QAAR,GAAmBA,QAAnB;;AAEA,IAAIC,mBAAmB,GAAGnB,sBAAsB,CAACC,OAAO,CAAC,0CAAD,CAAR,CAAhD;;AAEA,IAAImB,QAAQ,GAAGpB,sBAAsB,CAACC,OAAO,CAAC,+BAAD,CAAR,CAArC;;AAEA,IAAIoB,SAAS,GAAGrB,sBAAsB,CAACC,OAAO,CAAC,gCAAD,CAAR,CAAtC;;AAEA,IAAIqB,yBAAyB,GAAGtB,sBAAsB,CAACC,OAAO,CAAC,gDAAD,CAAR,CAAtD;;AAEA,IAAIsB,MAAM,GAAGvB,sBAAsB,CAACC,OAAO,CAAC,OAAD,CAAR,CAAnC;;AAEA,IAAIuB,QAAQ,GAAGxB,sBAAsB,CAACC,OAAO,CAAC,qBAAD,CAAR,CAArC;;AAEA,IAAIwB,SAAS,GAAGzB,sBAAsB,CAACC,OAAO,CAAC,YAAD,CAAR,CAAtC;;AAEA,IAAIyB,SAAS,GAAG,CAAC,UAAD,CAAhB;;AAEA,SAASnB,MAAT,CAAgBoB,IAAhB,EAAsBtB,KAAtB,EAA6B;EAC3B,IAAI,CAACsB,IAAL,EAAW,OAAO,EAAP;EACX,IAAIC,KAAK,GAAGD,IAAI,CAACE,KAAL,EAAZ;EACA,IAAIC,KAAK,GAAGF,KAAK,CAACG,OAAN,CAAc1B,KAAd,CAAZ;;EAEA,IAAIyB,KAAK,IAAI,CAAb,EAAgB;IACdF,KAAK,CAACI,MAAN,CAAaF,KAAb,EAAoB,CAApB;EACD;;EAED,OAAOF,KAAP;AACD;;AAED,SAAStB,MAAT,CAAgBqB,IAAhB,EAAsBtB,KAAtB,EAA6B;EAC3B,IAAIuB,KAAK,GAAG,CAACD,IAAI,IAAI,EAAT,EAAaE,KAAb,EAAZ;;EAEA,IAAID,KAAK,CAACG,OAAN,CAAc1B,KAAd,MAAyB,CAAC,CAA9B,EAAiC;IAC/BuB,KAAK,CAACK,IAAN,CAAW5B,KAAX;EACD;;EAED,OAAOuB,KAAP;AACD;;AAED,SAASV,QAAT,CAAkBgB,GAAlB,EAAuB;EACrB,OAAOA,GAAG,CAACC,KAAJ,CAAU,GAAV,CAAP;AACD;;AAED,SAAStB,WAAT,CAAqBuB,KAArB,EAA4BN,KAA5B,EAAmC;EACjC,OAAO,GAAGO,MAAH,CAAUD,KAAV,EAAiB,GAAjB,EAAsBC,MAAtB,CAA6BP,KAA7B,CAAP;AACD;;AAED,SAASd,UAAT,CAAoBsB,IAApB,EAA0B;EACxB,OAAOA,IAAI,IAAIA,IAAI,CAACC,IAAb,IAAqBD,IAAI,CAACC,IAAL,CAAUvB,UAAtC;AACD;;AAED,SAASJ,mBAAT,CAA6B4B,WAA7B,EAA0CC,WAA1C,EAAuD;EACrD;EACA;EACA,IAAIC,gBAAgB,GAAG,EAAvB;EACA,IAAIC,MAAM,GAAGF,WAAW,CAACD,WAAD,CAAxB;;EAEA,SAASI,GAAT,GAAe;IACb,IAAIjB,IAAI,GAAGkB,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAA/E;IACAlB,IAAI,CAACqB,OAAL,CAAa,UAAUC,IAAV,EAAgB;MAC3B,IAAIC,GAAG,GAAGD,IAAI,CAACC,GAAf;MAAA,IACIC,QAAQ,GAAGF,IAAI,CAACE,QADpB;MAEAT,gBAAgB,CAACT,IAAjB,CAAsBiB,GAAtB;MACAN,GAAG,CAACO,QAAD,CAAH;IACD,CALD;EAMD;;EAEDP,GAAG,CAACD,MAAM,CAACQ,QAAR,CAAH;EACA,OAAOT,gBAAP;AACD;;AAED,SAAS3B,WAAT,CAAqBqC,cAArB,EAAqC;EACnC,IAAIA,cAAc,CAACC,MAAnB,EAA2B;IACzB,IAAIC,MAAM,GAAGpC,QAAQ,CAACkC,cAAc,CAAClB,GAAhB,CAArB;IACA,OAAOqB,MAAM,CAACD,MAAM,CAACA,MAAM,CAACR,MAAP,GAAgB,CAAjB,CAAP,CAAN,KAAsCM,cAAc,CAACC,MAAf,CAAsBF,QAAtB,CAA+BL,MAA/B,GAAwC,CAArF;EACD;;EAED,OAAO,KAAP;AACD;;AAED,SAAShC,YAAT,CAAsBsC,cAAtB,EAAsC;EACpC,IAAIE,MAAM,GAAGpC,QAAQ,CAACkC,cAAc,CAAClB,GAAhB,CAArB;EACA,OAAOqB,MAAM,CAACD,MAAM,CAACA,MAAM,CAACR,MAAP,GAAgB,CAAjB,CAAP,CAAN,KAAsC,CAA7C;AACD,C,CAAC;;;AAGF,SAAStC,gBAAT,CAA0BgD,KAA1B,EAAiCC,QAAjC,EAA2CC,UAA3C,EAAuDC,MAAvD,EAA+DC,kBAA/D,EAAmFC,SAAnF,EAA8FC,cAA9F,EAA8GrB,WAA9G,EAA2HsB,UAA3H,EAAuIC,SAAvI,EAAkJ;EAChJ,IAAIC,qBAAJ;;EAEA,IAAIC,OAAO,GAAGV,KAAK,CAACU,OAApB;EAAA,IACIC,OAAO,GAAGX,KAAK,CAACW,OADpB;;EAGA,IAAIC,qBAAqB,GAAGZ,KAAK,CAACa,MAAN,CAAaC,qBAAb,EAA5B;EAAA,IACIC,GAAG,GAAGH,qBAAqB,CAACG,GADhC;EAAA,IAEIC,MAAM,GAAGJ,qBAAqB,CAACI,MAFnC,CANgJ,CAQrG;;;EAG3C,IAAIC,qBAAqB,GAAG,CAACT,SAAS,KAAK,KAAd,GAAsB,CAAC,CAAvB,GAA2B,CAA5B,KAAkC,CAAC,CAACJ,kBAAkB,KAAK,IAAvB,IAA+BA,kBAAkB,KAAK,KAAK,CAA3D,GAA+D,KAAK,CAApE,GAAwEA,kBAAkB,CAACc,CAA5F,KAAkG,CAAnG,IAAwGR,OAA1I,CAA5B;EACA,IAAIS,kBAAkB,GAAG,CAACF,qBAAqB,GAAG,EAAzB,IAA+Bd,MAAxD,CAZgJ,CAYhF;;EAEhE,IAAIiB,sBAAsB,GAAGnC,WAAW,CAACiB,UAAU,CAACmB,KAAX,CAAiBC,QAAlB,CAAxC;;EAEA,IAAIX,OAAO,GAAGI,GAAG,GAAGC,MAAM,GAAG,CAA7B,EAAgC;IAC9B;IACA,IAAIO,SAAS,GAAGjB,cAAc,CAACkB,SAAf,CAAyB,UAAUC,aAAV,EAAyB;MAChE,OAAOA,aAAa,CAAC/B,GAAd,KAAsB0B,sBAAsB,CAAC1B,GAApD;IACD,CAFe,CAAhB;IAGA,IAAIgC,aAAa,GAAGH,SAAS,IAAI,CAAb,GAAiB,CAAjB,GAAqBA,SAAS,GAAG,CAArD;IACA,IAAII,WAAW,GAAGrB,cAAc,CAACoB,aAAD,CAAd,CAA8BhC,GAAhD;IACA0B,sBAAsB,GAAGnC,WAAW,CAAC0C,WAAD,CAApC;EACD;;EAED,IAAIC,0BAA0B,GAAGR,sBAAsB,CAAC1B,GAAxD;EACA,IAAImC,sBAAsB,GAAGT,sBAA7B;EACA,IAAIU,eAAe,GAAGV,sBAAsB,CAAC1B,GAA7C;EACA,IAAIqC,YAAY,GAAG,CAAnB;EACA,IAAIC,eAAe,GAAG,CAAtB,CA9BgJ,CA8BvH;;EAEzB,IAAI,CAACzB,UAAU,CAAC0B,QAAX,CAAoBL,0BAApB,CAAL,EAAsD;IACpD,KAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGf,kBAApB,EAAwCe,CAAC,IAAI,CAA7C,EAAgD;MAC9C,IAAI3E,WAAW,CAAC6D,sBAAD,CAAf,EAAyC;QACvCA,sBAAsB,GAAGA,sBAAsB,CAACvB,MAAhD;QACAmC,eAAe,IAAI,CAAnB;MACD,CAHD,MAGO;QACL;MACD;IACF;EACF;;EAED,IAAIG,oBAAoB,GAAGlC,QAAQ,CAACoB,KAAT,CAAee,IAA1C;EACA,IAAIC,oBAAoB,GAAGjB,sBAAsB,CAACtC,IAAlD;EACA,IAAIwD,WAAW,GAAG,IAAlB;;EAEA,IAAIhF,YAAY,CAAC8D,sBAAD,CAAZ,IAAwCA,sBAAsB,CAACxC,KAAvB,KAAiC,CAAzE,IAA8E+B,OAAO,GAAGI,GAAG,GAAGC,MAAM,GAAG,CAAvG,IAA4GX,SAAS,CAAC;IACxHJ,QAAQ,EAAEkC,oBAD8G;IAExHI,QAAQ,EAAEF,oBAF8G;IAGxHN,YAAY,EAAE,CAAC;EAHyG,CAAD,CAArH,IAIEX,sBAAsB,CAAC1B,GAAvB,KAA+BQ,UAAU,CAACmB,KAAX,CAAiBC,QAJtD,EAIgE;IAC9D;IACAS,YAAY,GAAG,CAAC,CAAhB;EACD,CAPD,MAOO,IAAI,CAACF,sBAAsB,CAAClC,QAAvB,IAAmC,EAApC,EAAwCL,MAAxC,IAAkDiB,UAAU,CAAC0B,QAAX,CAAoBH,eAApB,CAAtD,EAA4F;IACjG;IACA;IACA,IAAIzB,SAAS,CAAC;MACZJ,QAAQ,EAAEkC,oBADE;MAEZI,QAAQ,EAAEF,oBAFE;MAGZN,YAAY,EAAE;IAHF,CAAD,CAAb,EAII;MACFA,YAAY,GAAG,CAAf;IACD,CAND,MAMO;MACLO,WAAW,GAAG,KAAd;IACD;EACF,CAZM,MAYA,IAAIN,eAAe,KAAK,CAAxB,EAA2B;IAChC,IAAIb,kBAAkB,GAAG,CAAC,GAA1B,EAA+B;MAC7B;MACA;MACA;MACA;MACA,IAAId,SAAS,CAAC;QACZJ,QAAQ,EAAEkC,oBADE;QAEZI,QAAQ,EAAEF,oBAFE;QAGZN,YAAY,EAAE;MAHF,CAAD,CAAb,EAII;QACFA,YAAY,GAAG,CAAf;MACD,CAND,MAMO;QACLO,WAAW,GAAG,KAAd;MACD;IACF,CAdD,MAcO;MACL;MACA;MACA;MACA;MACA;MACA;MACA;MACA,IAAIjC,SAAS,CAAC;QACZJ,QAAQ,EAAEkC,oBADE;QAEZI,QAAQ,EAAEF,oBAFE;QAGZN,YAAY,EAAE;MAHF,CAAD,CAAb,EAII;QACFA,YAAY,GAAG,CAAf;MACD,CAND,MAMO,IAAI1B,SAAS,CAAC;QACnBJ,QAAQ,EAAEkC,oBADS;QAEnBI,QAAQ,EAAEF,oBAFS;QAGnBN,YAAY,EAAE;MAHK,CAAD,CAAb,EAIH;QACFA,YAAY,GAAG,CAAf;MACD,CANM,MAMA;QACLO,WAAW,GAAG,KAAd;MACD;IACF;EACF,CAvCM,MAuCA;IACL;IACA;IACA;IACA;IACA;IACA,IAAIjC,SAAS,CAAC;MACZJ,QAAQ,EAAEkC,oBADE;MAEZI,QAAQ,EAAEF,oBAFE;MAGZN,YAAY,EAAE;IAHF,CAAD,CAAb,EAII;MACFA,YAAY,GAAG,CAAf;IACD,CAND,MAMO;MACLO,WAAW,GAAG,KAAd;IACD;EACF;;EAED,OAAO;IACLP,YAAY,EAAEA,YADT;IAELC,eAAe,EAAEA,eAFZ;IAGLQ,aAAa,EAAEpB,sBAAsB,CAAC1B,GAHjC;IAIL+C,aAAa,EAAErB,sBAAsB,CAAC1C,GAJjC;IAKLoD,eAAe,EAAEA,eALZ;IAMLY,gBAAgB,EAAEX,YAAY,KAAK,CAAjB,GAAqB,IAArB,GAA4B,CAAC,CAACtB,qBAAqB,GAAGW,sBAAsB,CAACvB,MAAhD,MAA4D,IAA5D,IAAoEY,qBAAqB,KAAK,KAAK,CAAnG,GAAuG,KAAK,CAA5G,GAAgHA,qBAAqB,CAACf,GAAvI,KAA+I,IANxL;IAOL4C,WAAW,EAAEA;EAPR,CAAP;AASD;AACD;AACA;AACA;AACA;AACA;AACA;;;AAGA,SAASrF,gBAAT,CAA0B0F,YAA1B,EAAwCtB,KAAxC,EAA+C;EAC7C,IAAI,CAACsB,YAAL,EAAmB,OAAOpD,SAAP;EACnB,IAAIqD,QAAQ,GAAGvB,KAAK,CAACuB,QAArB;;EAEA,IAAIA,QAAJ,EAAc;IACZ,OAAOD,YAAY,CAACtE,KAAb,EAAP;EACD;;EAED,IAAIsE,YAAY,CAACrD,MAAjB,EAAyB;IACvB,OAAO,CAACqD,YAAY,CAAC,CAAD,CAAb,CAAP;EACD;;EAED,OAAOA,YAAP;AACD;;AAED,IAAIE,oBAAoB,GAAG,SAASA,oBAAT,CAA8BxB,KAA9B,EAAqC;EAC9D,OAAOA,KAAP;AACD,CAFD;;AAIA,SAASlE,iBAAT,CAA2B2F,QAA3B,EAAqCC,SAArC,EAAgD;EAC9C,IAAI,CAACD,QAAL,EAAe,OAAO,EAAP;;EAEf,IAAIE,KAAK,GAAGD,SAAS,IAAI,EAAzB;EAAA,IACIE,kBAAkB,GAAGD,KAAK,CAACE,YAD/B;EAAA,IAEIA,YAAY,GAAGD,kBAAkB,KAAK,KAAK,CAA5B,GAAgCJ,oBAAhC,GAAuDI,kBAF1E;;EAIA,IAAI9E,IAAI,GAAGgF,KAAK,CAACC,OAAN,CAAcN,QAAd,IAA0BA,QAA1B,GAAqC,CAACA,QAAD,CAAhD;EACA,OAAO3E,IAAI,CAACkF,GAAL,CAAS,UAAUC,KAAV,EAAiB;IAC/B,IAAI3D,QAAQ,GAAG2D,KAAK,CAAC3D,QAArB;IAAA,IACI0B,KAAK,GAAG,CAAC,GAAGvD,yBAAyB,CAACyF,OAA9B,EAAuCD,KAAvC,EAA8CpF,SAA9C,CADZ;IAEA,IAAIsF,aAAa,GAAGrG,iBAAiB,CAACwC,QAAD,EAAWoD,SAAX,CAArC;IACA,OAAO,aAAahF,MAAM,CAACwF,OAAP,CAAeE,aAAf,CAA6BxF,SAAS,CAACsF,OAAvC,EAAgD,CAAC,GAAG1F,SAAS,CAAC0F,OAAd,EAAuB;MACzF7D,GAAG,EAAE2B,KAAK,CAAC3B;IAD8E,CAAvB,EAEjEwD,YAAY,CAAC7B,KAAD,CAFqD,CAAhD,EAEKmC,aAFL,CAApB;EAGD,CAPM,CAAP;AAQD;AACD;AACA;AACA;;;AAGA,SAAS/F,gBAAT,CAA0BiG,IAA1B,EAAgC;EAC9B,IAAI,CAACA,IAAL,EAAW;IACT,OAAO,IAAP;EACD,CAH6B,CAG5B;;;EAGF,IAAIC,QAAJ;;EAEA,IAAIR,KAAK,CAACC,OAAN,CAAcM,IAAd,CAAJ,EAAyB;IACvB;IACAC,QAAQ,GAAG;MACTC,WAAW,EAAEF,IADJ;MAETG,eAAe,EAAEtE;IAFR,CAAX;EAID,CAND,MAMO,IAAI,CAAC,GAAG3B,QAAQ,CAAC2F,OAAb,EAAsBG,IAAtB,MAAgC,QAApC,EAA8C;IACnDC,QAAQ,GAAG;MACTC,WAAW,EAAEF,IAAI,CAACI,OAAL,IAAgBvE,SADpB;MAETsE,eAAe,EAAEH,IAAI,CAACK,WAAL,IAAoBxE;IAF5B,CAAX;EAID,CALM,MAKA;IACL,CAAC,GAAGvB,QAAQ,CAACuF,OAAb,EAAsB,KAAtB,EAA6B,4CAA7B;IACA,OAAO,IAAP;EACD;;EAED,OAAOI,QAAP;AACD;AACD;AACA;AACA;AACA;AACA;;;AAGA,SAASzG,mBAAT,CAA6B8G,OAA7B,EAAsC/E,WAAtC,EAAmD;EACjD,IAAIgF,YAAY,GAAG,IAAIC,GAAJ,EAAnB;;EAEA,SAASC,SAAT,CAAmBzE,GAAnB,EAAwB;IACtB,IAAIuE,YAAY,CAACG,GAAb,CAAiB1E,GAAjB,CAAJ,EAA2B;IAC3B,IAAIP,MAAM,GAAGF,WAAW,CAACS,GAAD,CAAxB;IACA,IAAI,CAACP,MAAL,EAAa;IACb8E,YAAY,CAACI,GAAb,CAAiB3E,GAAjB;IACA,IAAIG,MAAM,GAAGV,MAAM,CAACU,MAApB;IAAA,IACIf,IAAI,GAAGK,MAAM,CAACL,IADlB;IAEA,IAAIA,IAAI,CAACwF,QAAT,EAAmB;;IAEnB,IAAIzE,MAAJ,EAAY;MACVsE,SAAS,CAACtE,MAAM,CAACH,GAAR,CAAT;IACD;EACF;;EAED,CAACsE,OAAO,IAAI,EAAZ,EAAgBxE,OAAhB,CAAwB,UAAUE,GAAV,EAAe;IACrCyE,SAAS,CAACzE,GAAD,CAAT;EACD,CAFD;EAGA,OAAO,CAAC,GAAG/B,mBAAmB,CAAC4F,OAAxB,EAAiCU,YAAjC,CAAP;AACD"},"metadata":{},"sourceType":"script"}
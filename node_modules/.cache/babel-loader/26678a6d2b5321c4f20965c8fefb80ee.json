{"ast":null,"code":"import \"antd/es/spin/style\";\nimport _Spin from \"antd/es/spin\";\nvar _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\New folder (2)\\\\strikingDash\\\\src\\\\container\\\\dashboard\\\\overview\\\\crm\\\\EmailSent.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { SentEmailWrapper } from '../../style';\nimport { ChartjsDonut } from '../../../../components/charts/chartjs';\nimport { deviceGetData, deviceFilterData } from '../../../../redux/chartContent/actionCreator';\nimport { Cards } from '../../../../components/cards/frame/cards-frame';\n\nconst EmailSent = () => {\n  const dispatch = useDispatch();\n  const {\n    deviceState,\n    dvIsLoading\n  } = useSelector(state => {\n    return {\n      deviceState: state.chartContent.deviceData,\n      dvIsLoading: state.chartContent.dvLoading\n    };\n  });\n  const [state, setState] = useState({\n    device: 'year'\n  });\n  useEffect(() => {\n    if (deviceGetData) {\n      dispatch(deviceGetData());\n    }\n  }, [dispatch]);\n\n  const handleActiveChangeDevice = value => {\n    setState({ ...state,\n      device: value\n    });\n    dispatch(deviceFilterData(value));\n  };\n\n  const labels = ['Total Sent', 'Opened', 'Not Opened'];\n  const icons = ['Sent', 'Opened', 'NotOpen'];\n  const types = ['success', 'primary', 'warning'];\n  const datasets = [{\n    data: deviceState,\n    backgroundColor: ['#20C997', '#5F63F2', '#FA8B0C']\n  }];\n  return /*#__PURE__*/React.createElement(SentEmailWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, deviceState !== null && /*#__PURE__*/React.createElement(Cards, {\n    isbutton: /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-nav\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      className: state.device === 'today' ? 'active' : 'deactivate',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      onClick: () => handleActiveChangeDevice('today'),\n      to: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 19\n      }\n    }, \"Today\")), /*#__PURE__*/React.createElement(\"li\", {\n      className: state.device === 'week' ? 'active' : 'deactivate',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      onClick: () => handleActiveChangeDevice('week'),\n      to: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 19\n      }\n    }, \"Week\")), /*#__PURE__*/React.createElement(\"li\", {\n      className: state.device === 'month' ? 'active' : 'deactivate',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      onClick: () => handleActiveChangeDevice('month'),\n      to: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 19\n      }\n    }, \"Month\")), /*#__PURE__*/React.createElement(\"li\", {\n      className: state.device === 'year' ? 'active' : 'deactivate',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      onClick: () => handleActiveChangeDevice('year'),\n      to: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 19\n      }\n    }, \"Year\")))),\n    title: \"Email Sent\",\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, dvIsLoading ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sd-spin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(_Spin, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sent-emial-chart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ChartjsDonut, {\n    labels: datasets,\n    datasets: datasets,\n    height: 180,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sent-emial-data\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 15\n    }\n  }, datasets.map((item, key) => {\n    const {\n      data\n    } = item;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sent-emial-box align-center-v\",\n      key: key + 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }\n    }, data.map((value, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"sent-emial-item\",\n        key: value,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: `sent-emial-icon icon-${types[index]}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: require(`../../../../static/img/icon/${icons[index]}.svg`),\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 31\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"sent-emial-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 33\n        }\n      }, value)), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 31\n        }\n      }, labels[index])));\n    }));\n  })))));\n};\n\n__signature__(EmailSent, \"useDispatch{dispatch}\\nuseSelector{{ deviceState, dvIsLoading }}\\nuseState{[state, setState]({\\r\\n    device: 'year',\\r\\n  })}\\nuseEffect{}\", () => [useDispatch, useSelector]);\n\nconst _default = EmailSent;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(EmailSent, \"EmailSent\", \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\New folder (2)\\\\strikingDash\\\\src\\\\container\\\\dashboard\\\\overview\\\\crm\\\\EmailSent.js\");\n  reactHotLoader.register(_default, \"default\", \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\New folder (2)\\\\strikingDash\\\\src\\\\container\\\\dashboard\\\\overview\\\\crm\\\\EmailSent.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"names":["React","useState","useEffect","useSelector","useDispatch","Link","SentEmailWrapper","ChartjsDonut","deviceGetData","deviceFilterData","Cards","EmailSent","dispatch","deviceState","dvIsLoading","state","chartContent","deviceData","dvLoading","setState","device","handleActiveChangeDevice","value","labels","icons","types","datasets","data","backgroundColor","map","item","key","index","require"],"sources":["C:/Users/Lenovo/Desktop/New folder (2)/strikingDash/src/container/dashboard/overview/crm/EmailSent.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Spin } from 'antd';\r\nimport { SentEmailWrapper } from '../../style';\r\nimport { ChartjsDonut } from '../../../../components/charts/chartjs';\r\nimport { deviceGetData, deviceFilterData } from '../../../../redux/chartContent/actionCreator';\r\nimport { Cards } from '../../../../components/cards/frame/cards-frame';\r\n\r\nconst EmailSent = () => {\r\n  const dispatch = useDispatch();\r\n  const { deviceState, dvIsLoading } = useSelector(state => {\r\n    return {\r\n      deviceState: state.chartContent.deviceData,\r\n      dvIsLoading: state.chartContent.dvLoading,\r\n    };\r\n  });\r\n  const [state, setState] = useState({\r\n    device: 'year',\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (deviceGetData) {\r\n      dispatch(deviceGetData());\r\n    }\r\n  }, [dispatch]);\r\n\r\n  const handleActiveChangeDevice = value => {\r\n    setState({\r\n      ...state,\r\n      device: value,\r\n    });\r\n    dispatch(deviceFilterData(value));\r\n  };\r\n\r\n  const labels = ['Total Sent', 'Opened', 'Not Opened'];\r\n  const icons = ['Sent', 'Opened', 'NotOpen'];\r\n  const types = ['success', 'primary', 'warning'];\r\n  const datasets = [\r\n    {\r\n      data: deviceState,\r\n      backgroundColor: ['#20C997', '#5F63F2', '#FA8B0C'],\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <SentEmailWrapper>\r\n      {deviceState !== null && (\r\n        <Cards\r\n          isbutton={\r\n            <div className=\"card-nav\">\r\n              <ul>\r\n                <li className={state.device === 'today' ? 'active' : 'deactivate'}>\r\n                  <Link onClick={() => handleActiveChangeDevice('today')} to=\"#\">\r\n                    Today\r\n                  </Link>\r\n                </li>\r\n                <li className={state.device === 'week' ? 'active' : 'deactivate'}>\r\n                  <Link onClick={() => handleActiveChangeDevice('week')} to=\"#\">\r\n                    Week\r\n                  </Link>\r\n                </li>\r\n                <li className={state.device === 'month' ? 'active' : 'deactivate'}>\r\n                  <Link onClick={() => handleActiveChangeDevice('month')} to=\"#\">\r\n                    Month\r\n                  </Link>\r\n                </li>\r\n                <li className={state.device === 'year' ? 'active' : 'deactivate'}>\r\n                  <Link onClick={() => handleActiveChangeDevice('year')} to=\"#\">\r\n                    Year\r\n                  </Link>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          }\r\n          title=\"Email Sent\"\r\n          size=\"large\"\r\n        >\r\n          {dvIsLoading ? (\r\n            <div className=\"sd-spin\">\r\n              <Spin />\r\n            </div>\r\n          ) : (\r\n            <div className=\"sent-emial-chart\">\r\n              <ChartjsDonut labels={datasets} datasets={datasets} height={180} />\r\n\r\n              <div className=\"sent-emial-data\">\r\n                {datasets.map((item, key) => {\r\n                  const { data } = item;\r\n                  return (\r\n                    <div className=\"sent-emial-box align-center-v\" key={key + 1}>\r\n                      {data.map((value, index) => {\r\n                        return (\r\n                          <div className=\"sent-emial-item\" key={value}>\r\n                            <div className={`sent-emial-icon icon-${types[index]}`}>\r\n                              <img src={require(`../../../../static/img/icon/${icons[index]}.svg`)} alt=\"\" />\r\n                            </div>\r\n                            <div className=\"sent-emial-content\">\r\n                              <h4>\r\n                                <strong>{value}</strong>\r\n                              </h4>\r\n                              <p>{labels[index]}</p>\r\n                            </div>\r\n                          </div>\r\n                        );\r\n                      })}\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </Cards>\r\n      )}\r\n    </SentEmailWrapper>\r\n  );\r\n};\r\n\r\nexport default EmailSent;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\")[\"default\"];\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SELECTION_NONE = exports.SELECTION_INVERT = exports.SELECTION_COLUMN = exports.SELECTION_ALL = void 0;\nexports[\"default\"] = useSelection;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _toArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toArray\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar _DownOutlined = _interopRequireDefault(require(\"@ant-design/icons/DownOutlined\"));\n\nvar _rcTable = require(\"rc-table\");\n\nvar _util = require(\"rc-tree/lib/util\");\n\nvar _conductUtil = require(\"rc-tree/lib/utils/conductUtil\");\n\nvar _treeUtil = require(\"rc-tree/lib/utils/treeUtil\");\n\nvar _useMergedState3 = _interopRequireDefault(require(\"rc-util/lib/hooks/useMergedState\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _checkbox = _interopRequireDefault(require(\"../../checkbox\"));\n\nvar _dropdown = _interopRequireDefault(require(\"../../dropdown\"));\n\nvar _menu = _interopRequireDefault(require(\"../../menu\"));\n\nvar _radio = _interopRequireDefault(require(\"../../radio\"));\n\nvar _warning = _interopRequireDefault(require(\"../../_util/warning\")); // TODO: warning if use ajax!!!\n\n\nvar SELECTION_COLUMN = {};\nexports.SELECTION_COLUMN = SELECTION_COLUMN;\nvar SELECTION_ALL = 'SELECT_ALL';\nexports.SELECTION_ALL = SELECTION_ALL;\nvar SELECTION_INVERT = 'SELECT_INVERT';\nexports.SELECTION_INVERT = SELECTION_INVERT;\nvar SELECTION_NONE = 'SELECT_NONE';\nexports.SELECTION_NONE = SELECTION_NONE;\nvar EMPTY_LIST = [];\n\nfunction flattenData(data, childrenColumnName) {\n  var list = [];\n  (data || []).forEach(function (record) {\n    list.push(record);\n\n    if (record && (0, _typeof2[\"default\"])(record) === 'object' && childrenColumnName in record) {\n      list = [].concat((0, _toConsumableArray2[\"default\"])(list), (0, _toConsumableArray2[\"default\"])(flattenData(record[childrenColumnName], childrenColumnName)));\n    }\n  });\n  return list;\n}\n\nfunction useSelection(rowSelection, config) {\n  var _ref = rowSelection || {},\n      preserveSelectedRowKeys = _ref.preserveSelectedRowKeys,\n      selectedRowKeys = _ref.selectedRowKeys,\n      defaultSelectedRowKeys = _ref.defaultSelectedRowKeys,\n      getCheckboxProps = _ref.getCheckboxProps,\n      onSelectionChange = _ref.onChange,\n      onSelect = _ref.onSelect,\n      onSelectAll = _ref.onSelectAll,\n      onSelectInvert = _ref.onSelectInvert,\n      onSelectNone = _ref.onSelectNone,\n      onSelectMultiple = _ref.onSelectMultiple,\n      selectionColWidth = _ref.columnWidth,\n      selectionType = _ref.type,\n      selections = _ref.selections,\n      fixed = _ref.fixed,\n      customizeRenderCell = _ref.renderCell,\n      hideSelectAll = _ref.hideSelectAll,\n      _ref$checkStrictly = _ref.checkStrictly,\n      checkStrictly = _ref$checkStrictly === void 0 ? true : _ref$checkStrictly;\n\n  var prefixCls = config.prefixCls,\n      data = config.data,\n      pageData = config.pageData,\n      getRecordByKey = config.getRecordByKey,\n      getRowKey = config.getRowKey,\n      expandType = config.expandType,\n      childrenColumnName = config.childrenColumnName,\n      tableLocale = config.locale,\n      getPopupContainer = config.getPopupContainer; // ========================= Keys =========================\n\n  var _useMergedState = (0, _useMergedState3[\"default\"])(selectedRowKeys || defaultSelectedRowKeys || EMPTY_LIST, {\n    value: selectedRowKeys\n  }),\n      _useMergedState2 = (0, _slicedToArray2[\"default\"])(_useMergedState, 2),\n      mergedSelectedKeys = _useMergedState2[0],\n      setMergedSelectedKeys = _useMergedState2[1]; // ======================== Caches ========================\n\n\n  var preserveRecordsRef = React.useRef(new Map());\n  var updatePreserveRecordsCache = (0, React.useCallback)(function (keys) {\n    if (preserveSelectedRowKeys) {\n      var newCache = new Map(); // Keep key if mark as preserveSelectedRowKeys\n\n      keys.forEach(function (key) {\n        var record = getRecordByKey(key);\n\n        if (!record && preserveRecordsRef.current.has(key)) {\n          record = preserveRecordsRef.current.get(key);\n        }\n\n        newCache.set(key, record);\n      }); // Refresh to new cache\n\n      preserveRecordsRef.current = newCache;\n    }\n  }, [getRecordByKey, preserveSelectedRowKeys]); // Update cache with selectedKeys\n\n  React.useEffect(function () {\n    updatePreserveRecordsCache(mergedSelectedKeys);\n  }, [mergedSelectedKeys]);\n\n  var _useMemo = (0, React.useMemo)(function () {\n    return checkStrictly ? {\n      keyEntities: null\n    } : (0, _treeUtil.convertDataToEntities)(data, {\n      externalGetKey: getRowKey,\n      childrenPropName: childrenColumnName\n    });\n  }, [data, getRowKey, checkStrictly, childrenColumnName]),\n      keyEntities = _useMemo.keyEntities; // Get flatten data\n\n\n  var flattedData = (0, React.useMemo)(function () {\n    return flattenData(pageData, childrenColumnName);\n  }, [pageData, childrenColumnName]); // Get all checkbox props\n\n  var checkboxPropsMap = (0, React.useMemo)(function () {\n    var map = new Map();\n    flattedData.forEach(function (record, index) {\n      var key = getRowKey(record, index);\n      var checkboxProps = (getCheckboxProps ? getCheckboxProps(record) : null) || {};\n      map.set(key, checkboxProps);\n      process.env.NODE_ENV !== \"production\" ? (0, _warning[\"default\"])(!('checked' in checkboxProps || 'defaultChecked' in checkboxProps), 'Table', 'Do not set `checked` or `defaultChecked` in `getCheckboxProps`. Please use `selectedRowKeys` instead.') : void 0;\n    });\n    return map;\n  }, [flattedData, getRowKey, getCheckboxProps]);\n  var isCheckboxDisabled = (0, React.useCallback)(function (r) {\n    var _a;\n\n    return !!((_a = checkboxPropsMap.get(getRowKey(r))) === null || _a === void 0 ? void 0 : _a.disabled);\n  }, [checkboxPropsMap, getRowKey]);\n\n  var _useMemo2 = (0, React.useMemo)(function () {\n    if (checkStrictly) {\n      return [mergedSelectedKeys || [], []];\n    }\n\n    var _conductCheck = (0, _conductUtil.conductCheck)(mergedSelectedKeys, true, keyEntities, isCheckboxDisabled),\n        checkedKeys = _conductCheck.checkedKeys,\n        halfCheckedKeys = _conductCheck.halfCheckedKeys;\n\n    return [checkedKeys || [], halfCheckedKeys];\n  }, [mergedSelectedKeys, checkStrictly, keyEntities, isCheckboxDisabled]),\n      _useMemo3 = (0, _slicedToArray2[\"default\"])(_useMemo2, 2),\n      derivedSelectedKeys = _useMemo3[0],\n      derivedHalfSelectedKeys = _useMemo3[1];\n\n  var derivedSelectedKeySet = (0, React.useMemo)(function () {\n    var keys = selectionType === 'radio' ? derivedSelectedKeys.slice(0, 1) : derivedSelectedKeys;\n    return new Set(keys);\n  }, [derivedSelectedKeys, selectionType]);\n  var derivedHalfSelectedKeySet = (0, React.useMemo)(function () {\n    return selectionType === 'radio' ? new Set() : new Set(derivedHalfSelectedKeys);\n  }, [derivedHalfSelectedKeys, selectionType]); // Save last selected key to enable range selection\n\n  var _useState = (0, React.useState)(null),\n      _useState2 = (0, _slicedToArray2[\"default\"])(_useState, 2),\n      lastSelectedKey = _useState2[0],\n      setLastSelectedKey = _useState2[1]; // Reset if rowSelection reset\n\n\n  React.useEffect(function () {\n    if (!rowSelection) {\n      setMergedSelectedKeys(EMPTY_LIST);\n    }\n  }, [!!rowSelection]);\n  var setSelectedKeys = (0, React.useCallback)(function (keys, method) {\n    var availableKeys;\n    var records;\n    updatePreserveRecordsCache(keys);\n\n    if (preserveSelectedRowKeys) {\n      availableKeys = keys;\n      records = keys.map(function (key) {\n        return preserveRecordsRef.current.get(key);\n      });\n    } else {\n      // Filter key which not exist in the `dataSource`\n      availableKeys = [];\n      records = [];\n      keys.forEach(function (key) {\n        var record = getRecordByKey(key);\n\n        if (record !== undefined) {\n          availableKeys.push(key);\n          records.push(record);\n        }\n      });\n    }\n\n    setMergedSelectedKeys(availableKeys);\n    onSelectionChange === null || onSelectionChange === void 0 ? void 0 : onSelectionChange(availableKeys, records, {\n      type: method\n    });\n  }, [setMergedSelectedKeys, getRecordByKey, onSelectionChange, preserveSelectedRowKeys]); // ====================== Selections ======================\n  // Trigger single `onSelect` event\n\n  var triggerSingleSelection = (0, React.useCallback)(function (key, selected, keys, event) {\n    if (onSelect) {\n      var rows = keys.map(function (k) {\n        return getRecordByKey(k);\n      });\n      onSelect(getRecordByKey(key), selected, rows, event);\n    }\n\n    setSelectedKeys(keys, 'single');\n  }, [onSelect, getRecordByKey, setSelectedKeys]);\n  var mergedSelections = (0, React.useMemo)(function () {\n    if (!selections || hideSelectAll) {\n      return null;\n    }\n\n    var selectionList = selections === true ? [SELECTION_ALL, SELECTION_INVERT, SELECTION_NONE] : selections;\n    return selectionList.map(function (selection) {\n      if (selection === SELECTION_ALL) {\n        return {\n          key: 'all',\n          text: tableLocale.selectionAll,\n          onSelect: function onSelect() {\n            setSelectedKeys(data.map(function (record, index) {\n              return getRowKey(record, index);\n            }).filter(function (key) {\n              var checkProps = checkboxPropsMap.get(key);\n              return !(checkProps === null || checkProps === void 0 ? void 0 : checkProps.disabled) || derivedSelectedKeySet.has(key);\n            }), 'all');\n          }\n        };\n      }\n\n      if (selection === SELECTION_INVERT) {\n        return {\n          key: 'invert',\n          text: tableLocale.selectInvert,\n          onSelect: function onSelect() {\n            var keySet = new Set(derivedSelectedKeySet);\n            pageData.forEach(function (record, index) {\n              var key = getRowKey(record, index);\n              var checkProps = checkboxPropsMap.get(key);\n\n              if (!(checkProps === null || checkProps === void 0 ? void 0 : checkProps.disabled)) {\n                if (keySet.has(key)) {\n                  keySet[\"delete\"](key);\n                } else {\n                  keySet.add(key);\n                }\n              }\n            });\n            var keys = Array.from(keySet);\n\n            if (onSelectInvert) {\n              process.env.NODE_ENV !== \"production\" ? (0, _warning[\"default\"])(false, 'Table', '`onSelectInvert` will be removed in future. Please use `onChange` instead.') : void 0;\n              onSelectInvert(keys);\n            }\n\n            setSelectedKeys(keys, 'invert');\n          }\n        };\n      }\n\n      if (selection === SELECTION_NONE) {\n        return {\n          key: 'none',\n          text: tableLocale.selectNone,\n          onSelect: function onSelect() {\n            onSelectNone === null || onSelectNone === void 0 ? void 0 : onSelectNone();\n            setSelectedKeys(Array.from(derivedSelectedKeySet).filter(function (key) {\n              var checkProps = checkboxPropsMap.get(key);\n              return checkProps === null || checkProps === void 0 ? void 0 : checkProps.disabled;\n            }), 'none');\n          }\n        };\n      }\n\n      return selection;\n    }).map(function (selection) {\n      return (0, _extends2[\"default\"])((0, _extends2[\"default\"])({}, selection), {\n        onSelect: function onSelect() {\n          var _a2;\n\n          var _a;\n\n          for (var _len = arguments.length, rest = new Array(_len), _key = 0; _key < _len; _key++) {\n            rest[_key] = arguments[_key];\n          }\n\n          (_a = selection.onSelect) === null || _a === void 0 ? void 0 : (_a2 = _a).call.apply(_a2, [selection].concat(rest));\n          setLastSelectedKey(null);\n        }\n      });\n    });\n  }, [selections, derivedSelectedKeySet, pageData, getRowKey, onSelectInvert, setSelectedKeys]); // ======================= Columns ========================\n\n  var transformColumns = (0, React.useCallback)(function (columns) {\n    var _a; // >>>>>>>>>>> Skip if not exists `rowSelection`\n\n\n    if (!rowSelection) {\n      process.env.NODE_ENV !== \"production\" ? (0, _warning[\"default\"])(!columns.includes(SELECTION_COLUMN), 'Table', '`rowSelection` is not config but `SELECTION_COLUMN` exists in the `columns`.') : void 0;\n      return columns.filter(function (col) {\n        return col !== SELECTION_COLUMN;\n      });\n    } // >>>>>>>>>>> Support selection\n\n\n    var cloneColumns = (0, _toConsumableArray2[\"default\"])(columns);\n    var keySet = new Set(derivedSelectedKeySet); // Record key only need check with enabled\n\n    var recordKeys = flattedData.map(getRowKey).filter(function (key) {\n      return !checkboxPropsMap.get(key).disabled;\n    });\n    var checkedCurrentAll = recordKeys.every(function (key) {\n      return keySet.has(key);\n    });\n    var checkedCurrentSome = recordKeys.some(function (key) {\n      return keySet.has(key);\n    });\n\n    var onSelectAllChange = function onSelectAllChange() {\n      var changeKeys = [];\n\n      if (checkedCurrentAll) {\n        recordKeys.forEach(function (key) {\n          keySet[\"delete\"](key);\n          changeKeys.push(key);\n        });\n      } else {\n        recordKeys.forEach(function (key) {\n          if (!keySet.has(key)) {\n            keySet.add(key);\n            changeKeys.push(key);\n          }\n        });\n      }\n\n      var keys = Array.from(keySet);\n      onSelectAll === null || onSelectAll === void 0 ? void 0 : onSelectAll(!checkedCurrentAll, keys.map(function (k) {\n        return getRecordByKey(k);\n      }), changeKeys.map(function (k) {\n        return getRecordByKey(k);\n      }));\n      setSelectedKeys(keys, 'all');\n      setLastSelectedKey(null);\n    }; // ===================== Render =====================\n    // Title Cell\n\n\n    var title;\n\n    if (selectionType !== 'radio') {\n      var customizeSelections;\n\n      if (mergedSelections) {\n        var menu = /*#__PURE__*/React.createElement(_menu[\"default\"], {\n          getPopupContainer: getPopupContainer,\n          items: mergedSelections.map(function (selection, index) {\n            var key = selection.key,\n                text = selection.text,\n                onSelectionClick = selection.onSelect;\n            return {\n              key: key || index,\n              onClick: function onClick() {\n                onSelectionClick === null || onSelectionClick === void 0 ? void 0 : onSelectionClick(recordKeys);\n              },\n              label: text\n            };\n          })\n        });\n        customizeSelections = /*#__PURE__*/React.createElement(\"div\", {\n          className: \"\".concat(prefixCls, \"-selection-extra\")\n        }, /*#__PURE__*/React.createElement(_dropdown[\"default\"], {\n          overlay: menu,\n          getPopupContainer: getPopupContainer\n        }, /*#__PURE__*/React.createElement(\"span\", null, /*#__PURE__*/React.createElement(_DownOutlined[\"default\"], null))));\n      }\n\n      var allDisabledData = flattedData.map(function (record, index) {\n        var key = getRowKey(record, index);\n        var checkboxProps = checkboxPropsMap.get(key) || {};\n        return (0, _extends2[\"default\"])({\n          checked: keySet.has(key)\n        }, checkboxProps);\n      }).filter(function (_ref2) {\n        var disabled = _ref2.disabled;\n        return disabled;\n      });\n      var allDisabled = !!allDisabledData.length && allDisabledData.length === flattedData.length;\n      var allDisabledAndChecked = allDisabled && allDisabledData.every(function (_ref3) {\n        var checked = _ref3.checked;\n        return checked;\n      });\n      var allDisabledSomeChecked = allDisabled && allDisabledData.some(function (_ref4) {\n        var checked = _ref4.checked;\n        return checked;\n      });\n      title = !hideSelectAll && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-selection\")\n      }, /*#__PURE__*/React.createElement(_checkbox[\"default\"], {\n        checked: !allDisabled ? !!flattedData.length && checkedCurrentAll : allDisabledAndChecked,\n        indeterminate: !allDisabled ? !checkedCurrentAll && checkedCurrentSome : !allDisabledAndChecked && allDisabledSomeChecked,\n        onChange: onSelectAllChange,\n        disabled: flattedData.length === 0 || allDisabled,\n        skipGroup: true\n      }), customizeSelections);\n    } // Body Cell\n\n\n    var renderCell;\n\n    if (selectionType === 'radio') {\n      renderCell = function renderCell(_, record, index) {\n        var key = getRowKey(record, index);\n        var checked = keySet.has(key);\n        return {\n          node: /*#__PURE__*/React.createElement(_radio[\"default\"], (0, _extends2[\"default\"])({}, checkboxPropsMap.get(key), {\n            checked: checked,\n            onClick: function onClick(e) {\n              return e.stopPropagation();\n            },\n            onChange: function onChange(event) {\n              if (!keySet.has(key)) {\n                triggerSingleSelection(key, true, [key], event.nativeEvent);\n              }\n            }\n          })),\n          checked: checked\n        };\n      };\n    } else {\n      renderCell = function renderCell(_, record, index) {\n        var _a;\n\n        var key = getRowKey(record, index);\n        var checked = keySet.has(key);\n        var indeterminate = derivedHalfSelectedKeySet.has(key);\n        var checkboxProps = checkboxPropsMap.get(key);\n        var mergedIndeterminate;\n\n        if (expandType === 'nest') {\n          mergedIndeterminate = indeterminate;\n          process.env.NODE_ENV !== \"production\" ? (0, _warning[\"default\"])(typeof (checkboxProps === null || checkboxProps === void 0 ? void 0 : checkboxProps.indeterminate) !== 'boolean', 'Table', 'set `indeterminate` using `rowSelection.getCheckboxProps` is not allowed with tree structured dataSource.') : void 0;\n        } else {\n          mergedIndeterminate = (_a = checkboxProps === null || checkboxProps === void 0 ? void 0 : checkboxProps.indeterminate) !== null && _a !== void 0 ? _a : indeterminate;\n        } // Record checked\n\n\n        return {\n          node: /*#__PURE__*/React.createElement(_checkbox[\"default\"], (0, _extends2[\"default\"])({}, checkboxProps, {\n            indeterminate: mergedIndeterminate,\n            checked: checked,\n            skipGroup: true,\n            onClick: function onClick(e) {\n              return e.stopPropagation();\n            },\n            onChange: function onChange(_ref5) {\n              var nativeEvent = _ref5.nativeEvent;\n              var shiftKey = nativeEvent.shiftKey;\n              var startIndex = -1;\n              var endIndex = -1; // Get range of this\n\n              if (shiftKey && checkStrictly) {\n                var pointKeys = new Set([lastSelectedKey, key]);\n                recordKeys.some(function (recordKey, recordIndex) {\n                  if (pointKeys.has(recordKey)) {\n                    if (startIndex === -1) {\n                      startIndex = recordIndex;\n                    } else {\n                      endIndex = recordIndex;\n                      return true;\n                    }\n                  }\n\n                  return false;\n                });\n              }\n\n              if (endIndex !== -1 && startIndex !== endIndex && checkStrictly) {\n                // Batch update selections\n                var rangeKeys = recordKeys.slice(startIndex, endIndex + 1);\n                var changedKeys = [];\n\n                if (checked) {\n                  rangeKeys.forEach(function (recordKey) {\n                    if (keySet.has(recordKey)) {\n                      changedKeys.push(recordKey);\n                      keySet[\"delete\"](recordKey);\n                    }\n                  });\n                } else {\n                  rangeKeys.forEach(function (recordKey) {\n                    if (!keySet.has(recordKey)) {\n                      changedKeys.push(recordKey);\n                      keySet.add(recordKey);\n                    }\n                  });\n                }\n\n                var keys = Array.from(keySet);\n                onSelectMultiple === null || onSelectMultiple === void 0 ? void 0 : onSelectMultiple(!checked, keys.map(function (recordKey) {\n                  return getRecordByKey(recordKey);\n                }), changedKeys.map(function (recordKey) {\n                  return getRecordByKey(recordKey);\n                }));\n                setSelectedKeys(keys, 'multiple');\n              } else {\n                // Single record selected\n                var originCheckedKeys = derivedSelectedKeys;\n\n                if (checkStrictly) {\n                  var checkedKeys = checked ? (0, _util.arrDel)(originCheckedKeys, key) : (0, _util.arrAdd)(originCheckedKeys, key);\n                  triggerSingleSelection(key, !checked, checkedKeys, nativeEvent);\n                } else {\n                  // Always fill first\n                  var result = (0, _conductUtil.conductCheck)([].concat((0, _toConsumableArray2[\"default\"])(originCheckedKeys), [key]), true, keyEntities, isCheckboxDisabled);\n                  var _checkedKeys = result.checkedKeys,\n                      halfCheckedKeys = result.halfCheckedKeys;\n                  var nextCheckedKeys = _checkedKeys; // If remove, we do it again to correction\n\n                  if (checked) {\n                    var tempKeySet = new Set(_checkedKeys);\n                    tempKeySet[\"delete\"](key);\n                    nextCheckedKeys = (0, _conductUtil.conductCheck)(Array.from(tempKeySet), {\n                      checked: false,\n                      halfCheckedKeys: halfCheckedKeys\n                    }, keyEntities, isCheckboxDisabled).checkedKeys;\n                  }\n\n                  triggerSingleSelection(key, !checked, nextCheckedKeys, nativeEvent);\n                }\n              }\n\n              if (checked) {\n                setLastSelectedKey(null);\n              } else {\n                setLastSelectedKey(key);\n              }\n            }\n          })),\n          checked: checked\n        };\n      };\n    }\n\n    var renderSelectionCell = function renderSelectionCell(_, record, index) {\n      var _renderCell = renderCell(_, record, index),\n          node = _renderCell.node,\n          checked = _renderCell.checked;\n\n      if (customizeRenderCell) {\n        return customizeRenderCell(checked, record, index, node);\n      }\n\n      return node;\n    }; // Insert selection column if not exist\n\n\n    if (!cloneColumns.includes(SELECTION_COLUMN)) {\n      // Always after expand icon\n      if (cloneColumns.findIndex(function (col) {\n        var _a;\n\n        return ((_a = col[_rcTable.INTERNAL_COL_DEFINE]) === null || _a === void 0 ? void 0 : _a.columnType) === 'EXPAND_COLUMN';\n      }) === 0) {\n        var _cloneColumns = cloneColumns,\n            _cloneColumns2 = (0, _toArray2[\"default\"])(_cloneColumns),\n            expandColumn = _cloneColumns2[0],\n            restColumns = _cloneColumns2.slice(1);\n\n        cloneColumns = [expandColumn, SELECTION_COLUMN].concat((0, _toConsumableArray2[\"default\"])(restColumns));\n      } else {\n        // Normal insert at first column\n        cloneColumns = [SELECTION_COLUMN].concat((0, _toConsumableArray2[\"default\"])(cloneColumns));\n      }\n    } // Deduplicate selection column\n\n\n    var selectionColumnIndex = cloneColumns.indexOf(SELECTION_COLUMN);\n    process.env.NODE_ENV !== \"production\" ? (0, _warning[\"default\"])(cloneColumns.filter(function (col) {\n      return col === SELECTION_COLUMN;\n    }).length <= 1, 'Table', 'Multiple `SELECTION_COLUMN` exist in `columns`.') : void 0;\n    cloneColumns = cloneColumns.filter(function (column, index) {\n      return column !== SELECTION_COLUMN || index === selectionColumnIndex;\n    }); // Fixed column logic\n\n    var prevCol = cloneColumns[selectionColumnIndex - 1];\n    var nextCol = cloneColumns[selectionColumnIndex + 1];\n    var mergedFixed = fixed;\n\n    if (mergedFixed === undefined) {\n      if ((nextCol === null || nextCol === void 0 ? void 0 : nextCol.fixed) !== undefined) {\n        mergedFixed = nextCol.fixed;\n      } else if ((prevCol === null || prevCol === void 0 ? void 0 : prevCol.fixed) !== undefined) {\n        mergedFixed = prevCol.fixed;\n      }\n    }\n\n    if (mergedFixed && prevCol && ((_a = prevCol[_rcTable.INTERNAL_COL_DEFINE]) === null || _a === void 0 ? void 0 : _a.columnType) === 'EXPAND_COLUMN' && prevCol.fixed === undefined) {\n      prevCol.fixed = mergedFixed;\n    } // Replace with real selection column\n\n\n    var selectionColumn = (0, _defineProperty2[\"default\"])({\n      fixed: mergedFixed,\n      width: selectionColWidth,\n      className: \"\".concat(prefixCls, \"-selection-column\"),\n      title: rowSelection.columnTitle || title,\n      render: renderSelectionCell\n    }, _rcTable.INTERNAL_COL_DEFINE, {\n      className: \"\".concat(prefixCls, \"-selection-col\")\n    });\n    return cloneColumns.map(function (col) {\n      return col === SELECTION_COLUMN ? selectionColumn : col;\n    });\n  }, [getRowKey, flattedData, rowSelection, derivedSelectedKeys, derivedSelectedKeySet, derivedHalfSelectedKeySet, selectionColWidth, mergedSelections, expandType, lastSelectedKey, checkboxPropsMap, onSelectMultiple, triggerSingleSelection, isCheckboxDisabled]);\n  return [transformColumns, derivedSelectedKeySet];\n}","map":{"version":3,"names":["_interopRequireWildcard","require","_interopRequireDefault","Object","defineProperty","exports","value","SELECTION_NONE","SELECTION_INVERT","SELECTION_COLUMN","SELECTION_ALL","useSelection","_defineProperty2","_toArray2","_extends2","_slicedToArray2","_toConsumableArray2","_typeof2","_DownOutlined","_rcTable","_util","_conductUtil","_treeUtil","_useMergedState3","React","_checkbox","_dropdown","_menu","_radio","_warning","EMPTY_LIST","flattenData","data","childrenColumnName","list","forEach","record","push","concat","rowSelection","config","_ref","preserveSelectedRowKeys","selectedRowKeys","defaultSelectedRowKeys","getCheckboxProps","onSelectionChange","onChange","onSelect","onSelectAll","onSelectInvert","onSelectNone","onSelectMultiple","selectionColWidth","columnWidth","selectionType","type","selections","fixed","customizeRenderCell","renderCell","hideSelectAll","_ref$checkStrictly","checkStrictly","prefixCls","pageData","getRecordByKey","getRowKey","expandType","tableLocale","locale","getPopupContainer","_useMergedState","_useMergedState2","mergedSelectedKeys","setMergedSelectedKeys","preserveRecordsRef","useRef","Map","updatePreserveRecordsCache","useCallback","keys","newCache","key","current","has","get","set","useEffect","_useMemo","useMemo","keyEntities","convertDataToEntities","externalGetKey","childrenPropName","flattedData","checkboxPropsMap","map","index","checkboxProps","process","env","NODE_ENV","isCheckboxDisabled","r","_a","disabled","_useMemo2","_conductCheck","conductCheck","checkedKeys","halfCheckedKeys","_useMemo3","derivedSelectedKeys","derivedHalfSelectedKeys","derivedSelectedKeySet","slice","Set","derivedHalfSelectedKeySet","_useState","useState","_useState2","lastSelectedKey","setLastSelectedKey","setSelectedKeys","method","availableKeys","records","undefined","triggerSingleSelection","selected","event","rows","k","mergedSelections","selectionList","selection","text","selectionAll","filter","checkProps","selectInvert","keySet","add","Array","from","selectNone","_a2","_len","arguments","length","rest","_key","call","apply","transformColumns","columns","includes","col","cloneColumns","recordKeys","checkedCurrentAll","every","checkedCurrentSome","some","onSelectAllChange","changeKeys","title","customizeSelections","menu","createElement","items","onSelectionClick","onClick","label","className","overlay","allDisabledData","checked","_ref2","allDisabled","allDisabledAndChecked","_ref3","allDisabledSomeChecked","_ref4","indeterminate","skipGroup","_","node","e","stopPropagation","nativeEvent","mergedIndeterminate","_ref5","shiftKey","startIndex","endIndex","pointKeys","recordKey","recordIndex","rangeKeys","changedKeys","originCheckedKeys","arrDel","arrAdd","result","_checkedKeys","nextCheckedKeys","tempKeySet","renderSelectionCell","_renderCell","findIndex","INTERNAL_COL_DEFINE","columnType","_cloneColumns","_cloneColumns2","expandColumn","restColumns","selectionColumnIndex","indexOf","column","prevCol","nextCol","mergedFixed","selectionColumn","width","columnTitle","render"],"sources":["C:/Users/Lenovo/Desktop/New folder (2)/strikingDash/node_modules/antd/lib/table/hooks/useSelection.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\")[\"default\"];\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SELECTION_NONE = exports.SELECTION_INVERT = exports.SELECTION_COLUMN = exports.SELECTION_ALL = void 0;\nexports[\"default\"] = useSelection;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _toArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toArray\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar _DownOutlined = _interopRequireDefault(require(\"@ant-design/icons/DownOutlined\"));\n\nvar _rcTable = require(\"rc-table\");\n\nvar _util = require(\"rc-tree/lib/util\");\n\nvar _conductUtil = require(\"rc-tree/lib/utils/conductUtil\");\n\nvar _treeUtil = require(\"rc-tree/lib/utils/treeUtil\");\n\nvar _useMergedState3 = _interopRequireDefault(require(\"rc-util/lib/hooks/useMergedState\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _checkbox = _interopRequireDefault(require(\"../../checkbox\"));\n\nvar _dropdown = _interopRequireDefault(require(\"../../dropdown\"));\n\nvar _menu = _interopRequireDefault(require(\"../../menu\"));\n\nvar _radio = _interopRequireDefault(require(\"../../radio\"));\n\nvar _warning = _interopRequireDefault(require(\"../../_util/warning\"));\n\n// TODO: warning if use ajax!!!\nvar SELECTION_COLUMN = {};\nexports.SELECTION_COLUMN = SELECTION_COLUMN;\nvar SELECTION_ALL = 'SELECT_ALL';\nexports.SELECTION_ALL = SELECTION_ALL;\nvar SELECTION_INVERT = 'SELECT_INVERT';\nexports.SELECTION_INVERT = SELECTION_INVERT;\nvar SELECTION_NONE = 'SELECT_NONE';\nexports.SELECTION_NONE = SELECTION_NONE;\nvar EMPTY_LIST = [];\n\nfunction flattenData(data, childrenColumnName) {\n  var list = [];\n  (data || []).forEach(function (record) {\n    list.push(record);\n\n    if (record && (0, _typeof2[\"default\"])(record) === 'object' && childrenColumnName in record) {\n      list = [].concat((0, _toConsumableArray2[\"default\"])(list), (0, _toConsumableArray2[\"default\"])(flattenData(record[childrenColumnName], childrenColumnName)));\n    }\n  });\n  return list;\n}\n\nfunction useSelection(rowSelection, config) {\n  var _ref = rowSelection || {},\n      preserveSelectedRowKeys = _ref.preserveSelectedRowKeys,\n      selectedRowKeys = _ref.selectedRowKeys,\n      defaultSelectedRowKeys = _ref.defaultSelectedRowKeys,\n      getCheckboxProps = _ref.getCheckboxProps,\n      onSelectionChange = _ref.onChange,\n      onSelect = _ref.onSelect,\n      onSelectAll = _ref.onSelectAll,\n      onSelectInvert = _ref.onSelectInvert,\n      onSelectNone = _ref.onSelectNone,\n      onSelectMultiple = _ref.onSelectMultiple,\n      selectionColWidth = _ref.columnWidth,\n      selectionType = _ref.type,\n      selections = _ref.selections,\n      fixed = _ref.fixed,\n      customizeRenderCell = _ref.renderCell,\n      hideSelectAll = _ref.hideSelectAll,\n      _ref$checkStrictly = _ref.checkStrictly,\n      checkStrictly = _ref$checkStrictly === void 0 ? true : _ref$checkStrictly;\n\n  var prefixCls = config.prefixCls,\n      data = config.data,\n      pageData = config.pageData,\n      getRecordByKey = config.getRecordByKey,\n      getRowKey = config.getRowKey,\n      expandType = config.expandType,\n      childrenColumnName = config.childrenColumnName,\n      tableLocale = config.locale,\n      getPopupContainer = config.getPopupContainer; // ========================= Keys =========================\n\n  var _useMergedState = (0, _useMergedState3[\"default\"])(selectedRowKeys || defaultSelectedRowKeys || EMPTY_LIST, {\n    value: selectedRowKeys\n  }),\n      _useMergedState2 = (0, _slicedToArray2[\"default\"])(_useMergedState, 2),\n      mergedSelectedKeys = _useMergedState2[0],\n      setMergedSelectedKeys = _useMergedState2[1]; // ======================== Caches ========================\n\n\n  var preserveRecordsRef = React.useRef(new Map());\n  var updatePreserveRecordsCache = (0, React.useCallback)(function (keys) {\n    if (preserveSelectedRowKeys) {\n      var newCache = new Map(); // Keep key if mark as preserveSelectedRowKeys\n\n      keys.forEach(function (key) {\n        var record = getRecordByKey(key);\n\n        if (!record && preserveRecordsRef.current.has(key)) {\n          record = preserveRecordsRef.current.get(key);\n        }\n\n        newCache.set(key, record);\n      }); // Refresh to new cache\n\n      preserveRecordsRef.current = newCache;\n    }\n  }, [getRecordByKey, preserveSelectedRowKeys]); // Update cache with selectedKeys\n\n  React.useEffect(function () {\n    updatePreserveRecordsCache(mergedSelectedKeys);\n  }, [mergedSelectedKeys]);\n\n  var _useMemo = (0, React.useMemo)(function () {\n    return checkStrictly ? {\n      keyEntities: null\n    } : (0, _treeUtil.convertDataToEntities)(data, {\n      externalGetKey: getRowKey,\n      childrenPropName: childrenColumnName\n    });\n  }, [data, getRowKey, checkStrictly, childrenColumnName]),\n      keyEntities = _useMemo.keyEntities; // Get flatten data\n\n\n  var flattedData = (0, React.useMemo)(function () {\n    return flattenData(pageData, childrenColumnName);\n  }, [pageData, childrenColumnName]); // Get all checkbox props\n\n  var checkboxPropsMap = (0, React.useMemo)(function () {\n    var map = new Map();\n    flattedData.forEach(function (record, index) {\n      var key = getRowKey(record, index);\n      var checkboxProps = (getCheckboxProps ? getCheckboxProps(record) : null) || {};\n      map.set(key, checkboxProps);\n      process.env.NODE_ENV !== \"production\" ? (0, _warning[\"default\"])(!('checked' in checkboxProps || 'defaultChecked' in checkboxProps), 'Table', 'Do not set `checked` or `defaultChecked` in `getCheckboxProps`. Please use `selectedRowKeys` instead.') : void 0;\n    });\n    return map;\n  }, [flattedData, getRowKey, getCheckboxProps]);\n  var isCheckboxDisabled = (0, React.useCallback)(function (r) {\n    var _a;\n\n    return !!((_a = checkboxPropsMap.get(getRowKey(r))) === null || _a === void 0 ? void 0 : _a.disabled);\n  }, [checkboxPropsMap, getRowKey]);\n\n  var _useMemo2 = (0, React.useMemo)(function () {\n    if (checkStrictly) {\n      return [mergedSelectedKeys || [], []];\n    }\n\n    var _conductCheck = (0, _conductUtil.conductCheck)(mergedSelectedKeys, true, keyEntities, isCheckboxDisabled),\n        checkedKeys = _conductCheck.checkedKeys,\n        halfCheckedKeys = _conductCheck.halfCheckedKeys;\n\n    return [checkedKeys || [], halfCheckedKeys];\n  }, [mergedSelectedKeys, checkStrictly, keyEntities, isCheckboxDisabled]),\n      _useMemo3 = (0, _slicedToArray2[\"default\"])(_useMemo2, 2),\n      derivedSelectedKeys = _useMemo3[0],\n      derivedHalfSelectedKeys = _useMemo3[1];\n\n  var derivedSelectedKeySet = (0, React.useMemo)(function () {\n    var keys = selectionType === 'radio' ? derivedSelectedKeys.slice(0, 1) : derivedSelectedKeys;\n    return new Set(keys);\n  }, [derivedSelectedKeys, selectionType]);\n  var derivedHalfSelectedKeySet = (0, React.useMemo)(function () {\n    return selectionType === 'radio' ? new Set() : new Set(derivedHalfSelectedKeys);\n  }, [derivedHalfSelectedKeys, selectionType]); // Save last selected key to enable range selection\n\n  var _useState = (0, React.useState)(null),\n      _useState2 = (0, _slicedToArray2[\"default\"])(_useState, 2),\n      lastSelectedKey = _useState2[0],\n      setLastSelectedKey = _useState2[1]; // Reset if rowSelection reset\n\n\n  React.useEffect(function () {\n    if (!rowSelection) {\n      setMergedSelectedKeys(EMPTY_LIST);\n    }\n  }, [!!rowSelection]);\n  var setSelectedKeys = (0, React.useCallback)(function (keys, method) {\n    var availableKeys;\n    var records;\n    updatePreserveRecordsCache(keys);\n\n    if (preserveSelectedRowKeys) {\n      availableKeys = keys;\n      records = keys.map(function (key) {\n        return preserveRecordsRef.current.get(key);\n      });\n    } else {\n      // Filter key which not exist in the `dataSource`\n      availableKeys = [];\n      records = [];\n      keys.forEach(function (key) {\n        var record = getRecordByKey(key);\n\n        if (record !== undefined) {\n          availableKeys.push(key);\n          records.push(record);\n        }\n      });\n    }\n\n    setMergedSelectedKeys(availableKeys);\n    onSelectionChange === null || onSelectionChange === void 0 ? void 0 : onSelectionChange(availableKeys, records, {\n      type: method\n    });\n  }, [setMergedSelectedKeys, getRecordByKey, onSelectionChange, preserveSelectedRowKeys]); // ====================== Selections ======================\n  // Trigger single `onSelect` event\n\n  var triggerSingleSelection = (0, React.useCallback)(function (key, selected, keys, event) {\n    if (onSelect) {\n      var rows = keys.map(function (k) {\n        return getRecordByKey(k);\n      });\n      onSelect(getRecordByKey(key), selected, rows, event);\n    }\n\n    setSelectedKeys(keys, 'single');\n  }, [onSelect, getRecordByKey, setSelectedKeys]);\n  var mergedSelections = (0, React.useMemo)(function () {\n    if (!selections || hideSelectAll) {\n      return null;\n    }\n\n    var selectionList = selections === true ? [SELECTION_ALL, SELECTION_INVERT, SELECTION_NONE] : selections;\n    return selectionList.map(function (selection) {\n      if (selection === SELECTION_ALL) {\n        return {\n          key: 'all',\n          text: tableLocale.selectionAll,\n          onSelect: function onSelect() {\n            setSelectedKeys(data.map(function (record, index) {\n              return getRowKey(record, index);\n            }).filter(function (key) {\n              var checkProps = checkboxPropsMap.get(key);\n              return !(checkProps === null || checkProps === void 0 ? void 0 : checkProps.disabled) || derivedSelectedKeySet.has(key);\n            }), 'all');\n          }\n        };\n      }\n\n      if (selection === SELECTION_INVERT) {\n        return {\n          key: 'invert',\n          text: tableLocale.selectInvert,\n          onSelect: function onSelect() {\n            var keySet = new Set(derivedSelectedKeySet);\n            pageData.forEach(function (record, index) {\n              var key = getRowKey(record, index);\n              var checkProps = checkboxPropsMap.get(key);\n\n              if (!(checkProps === null || checkProps === void 0 ? void 0 : checkProps.disabled)) {\n                if (keySet.has(key)) {\n                  keySet[\"delete\"](key);\n                } else {\n                  keySet.add(key);\n                }\n              }\n            });\n            var keys = Array.from(keySet);\n\n            if (onSelectInvert) {\n              process.env.NODE_ENV !== \"production\" ? (0, _warning[\"default\"])(false, 'Table', '`onSelectInvert` will be removed in future. Please use `onChange` instead.') : void 0;\n              onSelectInvert(keys);\n            }\n\n            setSelectedKeys(keys, 'invert');\n          }\n        };\n      }\n\n      if (selection === SELECTION_NONE) {\n        return {\n          key: 'none',\n          text: tableLocale.selectNone,\n          onSelect: function onSelect() {\n            onSelectNone === null || onSelectNone === void 0 ? void 0 : onSelectNone();\n            setSelectedKeys(Array.from(derivedSelectedKeySet).filter(function (key) {\n              var checkProps = checkboxPropsMap.get(key);\n              return checkProps === null || checkProps === void 0 ? void 0 : checkProps.disabled;\n            }), 'none');\n          }\n        };\n      }\n\n      return selection;\n    }).map(function (selection) {\n      return (0, _extends2[\"default\"])((0, _extends2[\"default\"])({}, selection), {\n        onSelect: function onSelect() {\n          var _a2;\n\n          var _a;\n\n          for (var _len = arguments.length, rest = new Array(_len), _key = 0; _key < _len; _key++) {\n            rest[_key] = arguments[_key];\n          }\n\n          (_a = selection.onSelect) === null || _a === void 0 ? void 0 : (_a2 = _a).call.apply(_a2, [selection].concat(rest));\n          setLastSelectedKey(null);\n        }\n      });\n    });\n  }, [selections, derivedSelectedKeySet, pageData, getRowKey, onSelectInvert, setSelectedKeys]); // ======================= Columns ========================\n\n  var transformColumns = (0, React.useCallback)(function (columns) {\n    var _a; // >>>>>>>>>>> Skip if not exists `rowSelection`\n\n\n    if (!rowSelection) {\n      process.env.NODE_ENV !== \"production\" ? (0, _warning[\"default\"])(!columns.includes(SELECTION_COLUMN), 'Table', '`rowSelection` is not config but `SELECTION_COLUMN` exists in the `columns`.') : void 0;\n      return columns.filter(function (col) {\n        return col !== SELECTION_COLUMN;\n      });\n    } // >>>>>>>>>>> Support selection\n\n\n    var cloneColumns = (0, _toConsumableArray2[\"default\"])(columns);\n    var keySet = new Set(derivedSelectedKeySet); // Record key only need check with enabled\n\n    var recordKeys = flattedData.map(getRowKey).filter(function (key) {\n      return !checkboxPropsMap.get(key).disabled;\n    });\n    var checkedCurrentAll = recordKeys.every(function (key) {\n      return keySet.has(key);\n    });\n    var checkedCurrentSome = recordKeys.some(function (key) {\n      return keySet.has(key);\n    });\n\n    var onSelectAllChange = function onSelectAllChange() {\n      var changeKeys = [];\n\n      if (checkedCurrentAll) {\n        recordKeys.forEach(function (key) {\n          keySet[\"delete\"](key);\n          changeKeys.push(key);\n        });\n      } else {\n        recordKeys.forEach(function (key) {\n          if (!keySet.has(key)) {\n            keySet.add(key);\n            changeKeys.push(key);\n          }\n        });\n      }\n\n      var keys = Array.from(keySet);\n      onSelectAll === null || onSelectAll === void 0 ? void 0 : onSelectAll(!checkedCurrentAll, keys.map(function (k) {\n        return getRecordByKey(k);\n      }), changeKeys.map(function (k) {\n        return getRecordByKey(k);\n      }));\n      setSelectedKeys(keys, 'all');\n      setLastSelectedKey(null);\n    }; // ===================== Render =====================\n    // Title Cell\n\n\n    var title;\n\n    if (selectionType !== 'radio') {\n      var customizeSelections;\n\n      if (mergedSelections) {\n        var menu = /*#__PURE__*/React.createElement(_menu[\"default\"], {\n          getPopupContainer: getPopupContainer,\n          items: mergedSelections.map(function (selection, index) {\n            var key = selection.key,\n                text = selection.text,\n                onSelectionClick = selection.onSelect;\n            return {\n              key: key || index,\n              onClick: function onClick() {\n                onSelectionClick === null || onSelectionClick === void 0 ? void 0 : onSelectionClick(recordKeys);\n              },\n              label: text\n            };\n          })\n        });\n        customizeSelections = /*#__PURE__*/React.createElement(\"div\", {\n          className: \"\".concat(prefixCls, \"-selection-extra\")\n        }, /*#__PURE__*/React.createElement(_dropdown[\"default\"], {\n          overlay: menu,\n          getPopupContainer: getPopupContainer\n        }, /*#__PURE__*/React.createElement(\"span\", null, /*#__PURE__*/React.createElement(_DownOutlined[\"default\"], null))));\n      }\n\n      var allDisabledData = flattedData.map(function (record, index) {\n        var key = getRowKey(record, index);\n        var checkboxProps = checkboxPropsMap.get(key) || {};\n        return (0, _extends2[\"default\"])({\n          checked: keySet.has(key)\n        }, checkboxProps);\n      }).filter(function (_ref2) {\n        var disabled = _ref2.disabled;\n        return disabled;\n      });\n      var allDisabled = !!allDisabledData.length && allDisabledData.length === flattedData.length;\n      var allDisabledAndChecked = allDisabled && allDisabledData.every(function (_ref3) {\n        var checked = _ref3.checked;\n        return checked;\n      });\n      var allDisabledSomeChecked = allDisabled && allDisabledData.some(function (_ref4) {\n        var checked = _ref4.checked;\n        return checked;\n      });\n      title = !hideSelectAll && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-selection\")\n      }, /*#__PURE__*/React.createElement(_checkbox[\"default\"], {\n        checked: !allDisabled ? !!flattedData.length && checkedCurrentAll : allDisabledAndChecked,\n        indeterminate: !allDisabled ? !checkedCurrentAll && checkedCurrentSome : !allDisabledAndChecked && allDisabledSomeChecked,\n        onChange: onSelectAllChange,\n        disabled: flattedData.length === 0 || allDisabled,\n        skipGroup: true\n      }), customizeSelections);\n    } // Body Cell\n\n\n    var renderCell;\n\n    if (selectionType === 'radio') {\n      renderCell = function renderCell(_, record, index) {\n        var key = getRowKey(record, index);\n        var checked = keySet.has(key);\n        return {\n          node: /*#__PURE__*/React.createElement(_radio[\"default\"], (0, _extends2[\"default\"])({}, checkboxPropsMap.get(key), {\n            checked: checked,\n            onClick: function onClick(e) {\n              return e.stopPropagation();\n            },\n            onChange: function onChange(event) {\n              if (!keySet.has(key)) {\n                triggerSingleSelection(key, true, [key], event.nativeEvent);\n              }\n            }\n          })),\n          checked: checked\n        };\n      };\n    } else {\n      renderCell = function renderCell(_, record, index) {\n        var _a;\n\n        var key = getRowKey(record, index);\n        var checked = keySet.has(key);\n        var indeterminate = derivedHalfSelectedKeySet.has(key);\n        var checkboxProps = checkboxPropsMap.get(key);\n        var mergedIndeterminate;\n\n        if (expandType === 'nest') {\n          mergedIndeterminate = indeterminate;\n          process.env.NODE_ENV !== \"production\" ? (0, _warning[\"default\"])(typeof (checkboxProps === null || checkboxProps === void 0 ? void 0 : checkboxProps.indeterminate) !== 'boolean', 'Table', 'set `indeterminate` using `rowSelection.getCheckboxProps` is not allowed with tree structured dataSource.') : void 0;\n        } else {\n          mergedIndeterminate = (_a = checkboxProps === null || checkboxProps === void 0 ? void 0 : checkboxProps.indeterminate) !== null && _a !== void 0 ? _a : indeterminate;\n        } // Record checked\n\n\n        return {\n          node: /*#__PURE__*/React.createElement(_checkbox[\"default\"], (0, _extends2[\"default\"])({}, checkboxProps, {\n            indeterminate: mergedIndeterminate,\n            checked: checked,\n            skipGroup: true,\n            onClick: function onClick(e) {\n              return e.stopPropagation();\n            },\n            onChange: function onChange(_ref5) {\n              var nativeEvent = _ref5.nativeEvent;\n              var shiftKey = nativeEvent.shiftKey;\n              var startIndex = -1;\n              var endIndex = -1; // Get range of this\n\n              if (shiftKey && checkStrictly) {\n                var pointKeys = new Set([lastSelectedKey, key]);\n                recordKeys.some(function (recordKey, recordIndex) {\n                  if (pointKeys.has(recordKey)) {\n                    if (startIndex === -1) {\n                      startIndex = recordIndex;\n                    } else {\n                      endIndex = recordIndex;\n                      return true;\n                    }\n                  }\n\n                  return false;\n                });\n              }\n\n              if (endIndex !== -1 && startIndex !== endIndex && checkStrictly) {\n                // Batch update selections\n                var rangeKeys = recordKeys.slice(startIndex, endIndex + 1);\n                var changedKeys = [];\n\n                if (checked) {\n                  rangeKeys.forEach(function (recordKey) {\n                    if (keySet.has(recordKey)) {\n                      changedKeys.push(recordKey);\n                      keySet[\"delete\"](recordKey);\n                    }\n                  });\n                } else {\n                  rangeKeys.forEach(function (recordKey) {\n                    if (!keySet.has(recordKey)) {\n                      changedKeys.push(recordKey);\n                      keySet.add(recordKey);\n                    }\n                  });\n                }\n\n                var keys = Array.from(keySet);\n                onSelectMultiple === null || onSelectMultiple === void 0 ? void 0 : onSelectMultiple(!checked, keys.map(function (recordKey) {\n                  return getRecordByKey(recordKey);\n                }), changedKeys.map(function (recordKey) {\n                  return getRecordByKey(recordKey);\n                }));\n                setSelectedKeys(keys, 'multiple');\n              } else {\n                // Single record selected\n                var originCheckedKeys = derivedSelectedKeys;\n\n                if (checkStrictly) {\n                  var checkedKeys = checked ? (0, _util.arrDel)(originCheckedKeys, key) : (0, _util.arrAdd)(originCheckedKeys, key);\n                  triggerSingleSelection(key, !checked, checkedKeys, nativeEvent);\n                } else {\n                  // Always fill first\n                  var result = (0, _conductUtil.conductCheck)([].concat((0, _toConsumableArray2[\"default\"])(originCheckedKeys), [key]), true, keyEntities, isCheckboxDisabled);\n                  var _checkedKeys = result.checkedKeys,\n                      halfCheckedKeys = result.halfCheckedKeys;\n                  var nextCheckedKeys = _checkedKeys; // If remove, we do it again to correction\n\n                  if (checked) {\n                    var tempKeySet = new Set(_checkedKeys);\n                    tempKeySet[\"delete\"](key);\n                    nextCheckedKeys = (0, _conductUtil.conductCheck)(Array.from(tempKeySet), {\n                      checked: false,\n                      halfCheckedKeys: halfCheckedKeys\n                    }, keyEntities, isCheckboxDisabled).checkedKeys;\n                  }\n\n                  triggerSingleSelection(key, !checked, nextCheckedKeys, nativeEvent);\n                }\n              }\n\n              if (checked) {\n                setLastSelectedKey(null);\n              } else {\n                setLastSelectedKey(key);\n              }\n            }\n          })),\n          checked: checked\n        };\n      };\n    }\n\n    var renderSelectionCell = function renderSelectionCell(_, record, index) {\n      var _renderCell = renderCell(_, record, index),\n          node = _renderCell.node,\n          checked = _renderCell.checked;\n\n      if (customizeRenderCell) {\n        return customizeRenderCell(checked, record, index, node);\n      }\n\n      return node;\n    }; // Insert selection column if not exist\n\n\n    if (!cloneColumns.includes(SELECTION_COLUMN)) {\n      // Always after expand icon\n      if (cloneColumns.findIndex(function (col) {\n        var _a;\n\n        return ((_a = col[_rcTable.INTERNAL_COL_DEFINE]) === null || _a === void 0 ? void 0 : _a.columnType) === 'EXPAND_COLUMN';\n      }) === 0) {\n        var _cloneColumns = cloneColumns,\n            _cloneColumns2 = (0, _toArray2[\"default\"])(_cloneColumns),\n            expandColumn = _cloneColumns2[0],\n            restColumns = _cloneColumns2.slice(1);\n\n        cloneColumns = [expandColumn, SELECTION_COLUMN].concat((0, _toConsumableArray2[\"default\"])(restColumns));\n      } else {\n        // Normal insert at first column\n        cloneColumns = [SELECTION_COLUMN].concat((0, _toConsumableArray2[\"default\"])(cloneColumns));\n      }\n    } // Deduplicate selection column\n\n\n    var selectionColumnIndex = cloneColumns.indexOf(SELECTION_COLUMN);\n    process.env.NODE_ENV !== \"production\" ? (0, _warning[\"default\"])(cloneColumns.filter(function (col) {\n      return col === SELECTION_COLUMN;\n    }).length <= 1, 'Table', 'Multiple `SELECTION_COLUMN` exist in `columns`.') : void 0;\n    cloneColumns = cloneColumns.filter(function (column, index) {\n      return column !== SELECTION_COLUMN || index === selectionColumnIndex;\n    }); // Fixed column logic\n\n    var prevCol = cloneColumns[selectionColumnIndex - 1];\n    var nextCol = cloneColumns[selectionColumnIndex + 1];\n    var mergedFixed = fixed;\n\n    if (mergedFixed === undefined) {\n      if ((nextCol === null || nextCol === void 0 ? void 0 : nextCol.fixed) !== undefined) {\n        mergedFixed = nextCol.fixed;\n      } else if ((prevCol === null || prevCol === void 0 ? void 0 : prevCol.fixed) !== undefined) {\n        mergedFixed = prevCol.fixed;\n      }\n    }\n\n    if (mergedFixed && prevCol && ((_a = prevCol[_rcTable.INTERNAL_COL_DEFINE]) === null || _a === void 0 ? void 0 : _a.columnType) === 'EXPAND_COLUMN' && prevCol.fixed === undefined) {\n      prevCol.fixed = mergedFixed;\n    } // Replace with real selection column\n\n\n    var selectionColumn = (0, _defineProperty2[\"default\"])({\n      fixed: mergedFixed,\n      width: selectionColWidth,\n      className: \"\".concat(prefixCls, \"-selection-column\"),\n      title: rowSelection.columnTitle || title,\n      render: renderSelectionCell\n    }, _rcTable.INTERNAL_COL_DEFINE, {\n      className: \"\".concat(prefixCls, \"-selection-col\")\n    });\n    return cloneColumns.map(function (col) {\n      return col === SELECTION_COLUMN ? selectionColumn : col;\n    });\n  }, [getRowKey, flattedData, rowSelection, derivedSelectedKeys, derivedSelectedKeySet, derivedHalfSelectedKeySet, selectionColWidth, mergedSelections, expandType, lastSelectedKey, checkboxPropsMap, onSelectMultiple, triggerSingleSelection, isCheckboxDisabled]);\n  return [transformColumns, derivedSelectedKeySet];\n}"],"mappings":"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"},"metadata":{},"sourceType":"script"}
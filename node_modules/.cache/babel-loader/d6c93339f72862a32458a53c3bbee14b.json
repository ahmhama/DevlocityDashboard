{"ast":null,"code":"import _extends from '@babel/runtime/helpers/extends';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/objectWithoutPropertiesLoose';\nimport _inheritsLoose from '@babel/runtime/helpers/inheritsLoose';\nimport { SVGInjector } from '@tanem/svg-injector';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react'; // Hat-tip: https://github.com/developit/preact-compat/blob/master/src/index.js#L402.\n\nvar shallowDiffers = function shallowDiffers(a, b) {\n  for (var i in a) {\n    if (!(i in b)) {\n      return true;\n    }\n  }\n\n  for (var _i in b) {\n    if (a[_i] !== b[_i]) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nvar _excluded = [\"afterInjection\", \"beforeInjection\", \"evalScripts\", \"fallback\", \"httpRequestWithCredentials\", \"loading\", \"renumerateIRIElements\", \"src\", \"useRequestCache\", \"wrapper\"];\nvar svgNamespace = 'http://www.w3.org/2000/svg';\nvar xlinkNamespace = 'http://www.w3.org/1999/xlink';\n\nvar ReactSVG = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(ReactSVG, _React$Component);\n\n  function ReactSVG() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.initialState = {\n      hasError: false,\n      isLoading: true\n    };\n    _this.state = _this.initialState;\n    _this._isMounted = false;\n    _this.reactWrapper = void 0;\n    _this.nonReactWrapper = void 0;\n\n    _this.refCallback = function (reactWrapper) {\n      _this.reactWrapper = reactWrapper;\n    };\n\n    return _this;\n  }\n\n  var _proto = ReactSVG.prototype;\n\n  _proto.renderSVG = function renderSVG() {\n    var _this2 = this;\n    /* istanbul ignore else */\n\n\n    if (this.reactWrapper instanceof Node) {\n      var _this$props = this.props,\n          beforeInjection = _this$props.beforeInjection,\n          evalScripts = _this$props.evalScripts,\n          httpRequestWithCredentials = _this$props.httpRequestWithCredentials,\n          renumerateIRIElements = _this$props.renumerateIRIElements,\n          src = _this$props.src,\n          useRequestCache = _this$props.useRequestCache;\n      /* eslint-disable @typescript-eslint/no-non-null-assertion */\n\n      var afterInjection = this.props.afterInjection;\n      var wrapper = this.props.wrapper;\n      /* eslint-enable @typescript-eslint/no-non-null-assertion */\n\n      var nonReactWrapper;\n      var nonReactTarget;\n\n      if (wrapper === 'svg') {\n        nonReactWrapper = document.createElementNS(svgNamespace, wrapper);\n        nonReactWrapper.setAttribute('xmlns', svgNamespace);\n        nonReactWrapper.setAttribute('xmlns:xlink', xlinkNamespace);\n        nonReactTarget = document.createElementNS(svgNamespace, wrapper);\n      } else {\n        nonReactWrapper = document.createElement(wrapper);\n        nonReactTarget = document.createElement(wrapper);\n      }\n\n      nonReactWrapper.appendChild(nonReactTarget);\n      nonReactTarget.dataset.src = src;\n      this.nonReactWrapper = this.reactWrapper.appendChild(nonReactWrapper);\n\n      var afterEach = function afterEach(error, svg) {\n        if (error) {\n          _this2.removeSVG();\n\n          if (!_this2._isMounted) {\n            afterInjection(error);\n            return;\n          }\n        } // TODO (Tane): It'd be better to cleanly unsubscribe from SVGInjector\n        // callbacks instead of tracking a property like this.\n\n\n        if (_this2._isMounted) {\n          _this2.setState(function () {\n            return {\n              hasError: !!error,\n              isLoading: false\n            };\n          }, function () {\n            afterInjection(error, svg);\n          });\n        }\n      };\n\n      SVGInjector(nonReactTarget, {\n        afterEach: afterEach,\n        beforeEach: beforeInjection,\n        cacheRequests: useRequestCache,\n        evalScripts: evalScripts,\n        httpRequestWithCredentials: httpRequestWithCredentials,\n        renumerateIRIElements: renumerateIRIElements\n      });\n    }\n  };\n\n  _proto.removeSVG = function removeSVG() {\n    var _this$nonReactWrapper;\n\n    if ((_this$nonReactWrapper = this.nonReactWrapper) != null && _this$nonReactWrapper.parentNode) {\n      this.nonReactWrapper.parentNode.removeChild(this.nonReactWrapper);\n      this.nonReactWrapper = null;\n    }\n  };\n\n  _proto.componentDidMount = function componentDidMount() {\n    this._isMounted = true;\n    this.renderSVG();\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var _this3 = this;\n\n    if (shallowDiffers(prevProps, this.props)) {\n      this.setState(function () {\n        return _this3.initialState;\n      }, function () {\n        _this3.removeSVG();\n\n        _this3.renderSVG();\n      });\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this._isMounted = false;\n    this.removeSVG();\n  };\n\n  _proto.render = function render() {\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    var _this$props2 = this.props;\n    _this$props2.afterInjection;\n    _this$props2.beforeInjection;\n    _this$props2.evalScripts;\n    var Fallback = _this$props2.fallback;\n    _this$props2.httpRequestWithCredentials;\n    var Loading = _this$props2.loading;\n    _this$props2.renumerateIRIElements;\n    _this$props2.src;\n    _this$props2.useRequestCache;\n\n    var wrapper = _this$props2.wrapper,\n        rest = _objectWithoutPropertiesLoose(_this$props2, _excluded);\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n\n    var Wrapper = wrapper;\n    return /*#__PURE__*/React.createElement(Wrapper, _extends({}, rest, {\n      ref: this.refCallback\n    }, wrapper === 'svg' ? {\n      xmlns: svgNamespace,\n      xmlnsXlink: xlinkNamespace\n    } : {}), this.state.isLoading && Loading && /*#__PURE__*/React.createElement(Loading, null), this.state.hasError && Fallback && /*#__PURE__*/React.createElement(Fallback, null));\n  };\n\n  return ReactSVG;\n}(React.Component);\n\nReactSVG.defaultProps = {\n  afterInjection: function afterInjection() {\n    return undefined;\n  },\n  beforeInjection: function beforeInjection() {\n    return undefined;\n  },\n  evalScripts: 'never',\n  fallback: null,\n  httpRequestWithCredentials: false,\n  loading: null,\n  renumerateIRIElements: true,\n  useRequestCache: true,\n  wrapper: 'div'\n};\nReactSVG.propTypes = {\n  afterInjection: PropTypes.func,\n  beforeInjection: PropTypes.func,\n  evalScripts: PropTypes.oneOf(['always', 'once', 'never']),\n  fallback: PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.string]),\n  httpRequestWithCredentials: PropTypes.bool,\n  loading: PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.string]),\n  renumerateIRIElements: PropTypes.bool,\n  src: PropTypes.string.isRequired,\n  useRequestCache: PropTypes.bool,\n  wrapper: PropTypes.oneOf(['div', 'span', 'svg'])\n};\nexport { ReactSVG };","map":{"version":3,"sources":["../compiled/shallow-differs.js","../compiled/ReactSVG.js"],"names":["shallowDiffers","i","a","b","svgNamespace","xlinkNamespace","ReactSVG","React","defaultProps","afterInjection","beforeInjection","evalScripts","fallback","httpRequestWithCredentials","loading","renumerateIRIElements","useRequestCache","wrapper","propTypes","PropTypes","src","hasError","isLoading","state","_isMounted","reactWrapper","renderSVG","nonReactWrapper","document","nonReactTarget","afterEach","SVGInjector","beforeEach","cacheRequests","removeSVG","componentDidMount","componentDidUpdate","prevProps","componentWillUnmount","render","Fallback","Loading","rest","Wrapper","ref","refCallback","xmlns","xmlnsXlink"],"mappings":"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","sourcesContent":["// Hat-tip: https://github.com/developit/preact-compat/blob/master/src/index.js#L402.\nconst shallowDiffers = (a, b) => {\n    for (const i in a) {\n        if (!(i in b)) {\n            return true;\n        }\n    }\n    for (const i in b) {\n        if (a[i] !== b[i]) {\n            return true;\n        }\n    }\n    return false;\n};\nexport default shallowDiffers;\n","import { SVGInjector } from '@tanem/svg-injector';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport shallowDiffers from './shallow-differs';\nconst svgNamespace = 'http://www.w3.org/2000/svg';\nconst xlinkNamespace = 'http://www.w3.org/1999/xlink';\nexport class ReactSVG extends React.Component {\n    static defaultProps = {\n        afterInjection: () => undefined,\n        beforeInjection: () => undefined,\n        evalScripts: 'never',\n        fallback: null,\n        httpRequestWithCredentials: false,\n        loading: null,\n        renumerateIRIElements: true,\n        useRequestCache: true,\n        wrapper: 'div',\n    };\n    static propTypes = {\n        afterInjection: PropTypes.func,\n        beforeInjection: PropTypes.func,\n        evalScripts: PropTypes.oneOf(['always', 'once', 'never']),\n        fallback: PropTypes.oneOfType([\n            PropTypes.func,\n            PropTypes.object,\n            PropTypes.string,\n        ]),\n        httpRequestWithCredentials: PropTypes.bool,\n        loading: PropTypes.oneOfType([\n            PropTypes.func,\n            PropTypes.object,\n            PropTypes.string,\n        ]),\n        renumerateIRIElements: PropTypes.bool,\n        src: PropTypes.string.isRequired,\n        useRequestCache: PropTypes.bool,\n        wrapper: PropTypes.oneOf(['div', 'span', 'svg']),\n    };\n    initialState = {\n        hasError: false,\n        isLoading: true,\n    };\n    state = this.initialState;\n    _isMounted = false;\n    reactWrapper;\n    nonReactWrapper;\n    refCallback = (reactWrapper) => {\n        this.reactWrapper = reactWrapper;\n    };\n    renderSVG() {\n        /* istanbul ignore else */\n        if (this.reactWrapper instanceof Node) {\n            const { beforeInjection, evalScripts, httpRequestWithCredentials, renumerateIRIElements, src, useRequestCache, } = this.props;\n            /* eslint-disable @typescript-eslint/no-non-null-assertion */\n            const afterInjection = this.props.afterInjection;\n            const wrapper = this.props.wrapper;\n            /* eslint-enable @typescript-eslint/no-non-null-assertion */\n            let nonReactWrapper;\n            let nonReactTarget;\n            if (wrapper === 'svg') {\n                nonReactWrapper = document.createElementNS(svgNamespace, wrapper);\n                nonReactWrapper.setAttribute('xmlns', svgNamespace);\n                nonReactWrapper.setAttribute('xmlns:xlink', xlinkNamespace);\n                nonReactTarget = document.createElementNS(svgNamespace, wrapper);\n            }\n            else {\n                nonReactWrapper = document.createElement(wrapper);\n                nonReactTarget = document.createElement(wrapper);\n            }\n            nonReactWrapper.appendChild(nonReactTarget);\n            nonReactTarget.dataset.src = src;\n            this.nonReactWrapper = this.reactWrapper.appendChild(nonReactWrapper);\n            const afterEach = (error, svg) => {\n                if (error) {\n                    this.removeSVG();\n                    if (!this._isMounted) {\n                        afterInjection(error);\n                        return;\n                    }\n                }\n                // TODO (Tane): It'd be better to cleanly unsubscribe from SVGInjector\n                // callbacks instead of tracking a property like this.\n                if (this._isMounted) {\n                    this.setState(() => ({\n                        hasError: !!error,\n                        isLoading: false,\n                    }), () => {\n                        afterInjection(error, svg);\n                    });\n                }\n            };\n            SVGInjector(nonReactTarget, {\n                afterEach,\n                beforeEach: beforeInjection,\n                cacheRequests: useRequestCache,\n                evalScripts,\n                httpRequestWithCredentials,\n                renumerateIRIElements,\n            });\n        }\n    }\n    removeSVG() {\n        if (this.nonReactWrapper?.parentNode) {\n            this.nonReactWrapper.parentNode.removeChild(this.nonReactWrapper);\n            this.nonReactWrapper = null;\n        }\n    }\n    componentDidMount() {\n        this._isMounted = true;\n        this.renderSVG();\n    }\n    componentDidUpdate(prevProps) {\n        if (shallowDiffers(prevProps, this.props)) {\n            this.setState(() => this.initialState, () => {\n                this.removeSVG();\n                this.renderSVG();\n            });\n        }\n    }\n    componentWillUnmount() {\n        this._isMounted = false;\n        this.removeSVG();\n    }\n    render() {\n        /* eslint-disable @typescript-eslint/no-unused-vars */\n        const { afterInjection, beforeInjection, evalScripts, fallback: Fallback, httpRequestWithCredentials, loading: Loading, renumerateIRIElements, src, useRequestCache, wrapper, ...rest } = this.props;\n        /* eslint-enable @typescript-eslint/no-unused-vars */\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const Wrapper = wrapper;\n        return (React.createElement(Wrapper, { ...rest, ref: this.refCallback, ...(wrapper === 'svg'\n                ? {\n                    xmlns: svgNamespace,\n                    xmlnsXlink: xlinkNamespace,\n                }\n                : {}) },\n            this.state.isLoading && Loading && React.createElement(Loading, null),\n            this.state.hasError && Fallback && React.createElement(Fallback, null)));\n    }\n}\n"]},"metadata":{},"sourceType":"module"}
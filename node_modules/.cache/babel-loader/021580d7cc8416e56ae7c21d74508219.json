{"ast":null,"code":"import \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nvar _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\New folder (2)\\\\strikingDash\\\\src\\\\components\\\\autoComplete\\\\autoComplete.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { SearchOutlined } from '@ant-design/icons';\nimport { AutoCompleteStyled } from './style';\n\nconst AutoComplete = _ref => {\n  let {\n    width,\n    onSearch,\n    placeholder\n  } = _ref;\n  const [search, setSearch] = React.useState('');\n\n  const onSearching = searchText => {\n    setSearch(searchText);\n    onSearch(searchText);\n  };\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      onSearching(search);\n    }, 500);\n    return () => clearTimeout(timer);\n  }, [search]);\n  return /*#__PURE__*/React.createElement(AutoCompleteStyled, {\n    className: \"certain-category-search\",\n    dropdownClassName: \"certain-category-search-dropdown\",\n    dropdownMatchSelectWidth: false,\n    dropdownStyle: {\n      width: 300\n    },\n    style: {\n      width\n    },\n    placeholder: placeholder,\n    onSearch: true,\n    value: search,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(_Input, {\n    suffix: /*#__PURE__*/React.createElement(SearchOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 22\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }));\n};\n\n__signature__(AutoComplete, \"useState{[search, setSearch]('')}\\nuseEffect{}\");\n\nAutoComplete.defaultProps = {\n  width: '350px',\n  placeholder: 'Input here'\n};\nAutoComplete.propTypes = {\n  width: PropTypes.string,\n  onSearch: PropTypes.func,\n  placeholder: PropTypes.string\n};\nexport { AutoComplete };\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(AutoComplete, \"AutoComplete\", \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\New folder (2)\\\\strikingDash\\\\src\\\\components\\\\autoComplete\\\\autoComplete.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"names":["React","useEffect","PropTypes","SearchOutlined","AutoCompleteStyled","AutoComplete","width","onSearch","placeholder","search","setSearch","useState","onSearching","searchText","timer","setTimeout","clearTimeout","defaultProps","propTypes","string","func"],"sources":["C:/Users/Lenovo/Desktop/New folder (2)/strikingDash/src/components/autoComplete/autoComplete.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { Input } from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport { SearchOutlined } from '@ant-design/icons';\r\nimport { AutoCompleteStyled } from './style';\r\n\r\nconst AutoComplete = ({ width, onSearch, placeholder }) => {\r\n  const [search, setSearch] = React.useState('');\r\n\r\n  const onSearching = searchText => {\r\n    setSearch(searchText);\r\n    onSearch(searchText);\r\n  };\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      onSearching(search);\r\n    }, 500);\r\n    return () => clearTimeout(timer);\r\n  }, [search]);\r\n\r\n  return (\r\n    <AutoCompleteStyled\r\n      className=\"certain-category-search\"\r\n      dropdownClassName=\"certain-category-search-dropdown\"\r\n      dropdownMatchSelectWidth={false}\r\n      dropdownStyle={{ width: 300 }}\r\n      style={{ width }}\r\n      placeholder={placeholder}\r\n      onSearch\r\n      value={search}\r\n    >\r\n      <Input suffix={<SearchOutlined />} />\r\n    </AutoCompleteStyled>\r\n  );\r\n};\r\n\r\nAutoComplete.defaultProps = {\r\n  width: '350px',\r\n  placeholder: 'Input here',\r\n};\r\n\r\nAutoComplete.propTypes = {\r\n  width: PropTypes.string,\r\n  onSearch: PropTypes.func,\r\n  placeholder: PropTypes.string,\r\n};\r\n\r\nexport { AutoComplete };\r\n"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,cAAT,QAA+B,mBAA/B;AACA,SAASC,kBAAT,QAAmC,SAAnC;;AAEA,MAAMC,YAAY,GAAG,QAAsC;EAAA,IAArC;IAAEC,KAAF;IAASC,QAAT;IAAmBC;EAAnB,CAAqC;EACzD,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBV,KAAK,CAACW,QAAN,CAAe,EAAf,CAA5B;;EAEA,MAAMC,WAAW,GAAGC,UAAU,IAAI;IAChCH,SAAS,CAACG,UAAD,CAAT;IACAN,QAAQ,CAACM,UAAD,CAAR;EACD,CAHD;;EAIAZ,SAAS,CAAC,MAAM;IACd,MAAMa,KAAK,GAAGC,UAAU,CAAC,MAAM;MAC7BH,WAAW,CAACH,MAAD,CAAX;IACD,CAFuB,EAErB,GAFqB,CAAxB;IAGA,OAAO,MAAMO,YAAY,CAACF,KAAD,CAAzB;EACD,CALQ,EAKN,CAACL,MAAD,CALM,CAAT;EAOA,oBACE,oBAAC,kBAAD;IACE,SAAS,EAAC,yBADZ;IAEE,iBAAiB,EAAC,kCAFpB;IAGE,wBAAwB,EAAE,KAH5B;IAIE,aAAa,EAAE;MAAEH,KAAK,EAAE;IAAT,CAJjB;IAKE,KAAK,EAAE;MAAEA;IAAF,CALT;IAME,WAAW,EAAEE,WANf;IAOE,QAAQ,MAPV;IAQE,KAAK,EAAEC,MART;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAUE;IAAO,MAAM,eAAE,oBAAC,cAAD;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAVF,CADF;AAcD,CA5BD;;cAAMJ,Y;;AA8BNA,YAAY,CAACY,YAAb,GAA4B;EAC1BX,KAAK,EAAE,OADmB;EAE1BE,WAAW,EAAE;AAFa,CAA5B;AAKAH,YAAY,CAACa,SAAb,GAAyB;EACvBZ,KAAK,EAAEJ,SAAS,CAACiB,MADM;EAEvBZ,QAAQ,EAAEL,SAAS,CAACkB,IAFG;EAGvBZ,WAAW,EAAEN,SAAS,CAACiB;AAHA,CAAzB;AAMA,SAASd,YAAT;;;;;;;;;;0BAzCMA,Y"},"metadata":{},"sourceType":"module"}
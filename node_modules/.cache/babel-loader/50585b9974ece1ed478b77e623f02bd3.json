{"ast":null,"code":"var _ = require('../helper');\n/* A rule should contain explain and rule methods */\n// TODO explain explain\n// TODO explain missing\n// TODO explain assert\n\n\nfunction assert(options, password) {\n  return !!password && options.minLength <= password.length;\n}\n\nfunction explain(options) {\n  if (options.minLength === 1) {\n    return {\n      message: 'Non-empty password required',\n      code: 'nonEmpty'\n    };\n  }\n\n  return {\n    message: 'At least %d characters in length',\n    format: [options.minLength],\n    code: 'lengthAtLeast'\n  };\n}\n\nmodule.exports = {\n  validate: function (options) {\n    if (!_.isObject(options)) {\n      throw new Error('options should be an object');\n    }\n\n    if (!_.isNumber(options.minLength) || _.isNaN(options.minLength)) {\n      throw new Error('length expects minLength to be a non-zero number');\n    }\n\n    return true;\n  },\n  explain: explain,\n  missing: function (options, password) {\n    var explained = explain(options);\n    explained.verified = !!assert(options, password);\n    return explained;\n  },\n  assert: assert\n};","map":{"version":3,"names":["_","require","assert","options","password","minLength","length","explain","message","code","format","module","exports","validate","isObject","Error","isNumber","isNaN","missing","explained","verified"],"sources":["C:/Users/Lenovo/Desktop/New folder (2)/strikingDash/node_modules/password-sheriff/lib/rules/length.js"],"sourcesContent":["var _ = require('../helper');\n\n/* A rule should contain explain and rule methods */\n// TODO explain explain\n// TODO explain missing\n// TODO explain assert\n\nfunction assert (options, password) {\n  return !!password && options.minLength <= password.length;\n}\n\nfunction explain(options) {\n  if (options.minLength === 1) {\n    return {\n      message: 'Non-empty password required',\n      code: 'nonEmpty'\n    };\n  }\n\n  return {\n    message: 'At least %d characters in length',\n    format: [options.minLength],\n    code: 'lengthAtLeast'\n  };\n}\n\nmodule.exports = {\n  validate: function (options) {\n    if (!_.isObject(options)) {\n      throw new Error('options should be an object');\n    }\n\n    if (!_.isNumber(options.minLength) || _.isNaN(options.minLength)) {\n      throw new Error('length expects minLength to be a non-zero number');\n    }\n\n    return true;\n  },\n  explain: explain,\n  missing: function (options, password) {\n    var explained = explain(options);\n    explained.verified = !!assert(options, password);\n    return explained;\n  },\n  assert: assert\n};\n"],"mappings":"AAAA,IAAIA,CAAC,GAAGC,OAAO,CAAC,WAAD,CAAf;AAEA;AACA;AACA;AACA;;;AAEA,SAASC,MAAT,CAAiBC,OAAjB,EAA0BC,QAA1B,EAAoC;EAClC,OAAO,CAAC,CAACA,QAAF,IAAcD,OAAO,CAACE,SAAR,IAAqBD,QAAQ,CAACE,MAAnD;AACD;;AAED,SAASC,OAAT,CAAiBJ,OAAjB,EAA0B;EACxB,IAAIA,OAAO,CAACE,SAAR,KAAsB,CAA1B,EAA6B;IAC3B,OAAO;MACLG,OAAO,EAAE,6BADJ;MAELC,IAAI,EAAE;IAFD,CAAP;EAID;;EAED,OAAO;IACLD,OAAO,EAAE,kCADJ;IAELE,MAAM,EAAE,CAACP,OAAO,CAACE,SAAT,CAFH;IAGLI,IAAI,EAAE;EAHD,CAAP;AAKD;;AAEDE,MAAM,CAACC,OAAP,GAAiB;EACfC,QAAQ,EAAE,UAAUV,OAAV,EAAmB;IAC3B,IAAI,CAACH,CAAC,CAACc,QAAF,CAAWX,OAAX,CAAL,EAA0B;MACxB,MAAM,IAAIY,KAAJ,CAAU,6BAAV,CAAN;IACD;;IAED,IAAI,CAACf,CAAC,CAACgB,QAAF,CAAWb,OAAO,CAACE,SAAnB,CAAD,IAAkCL,CAAC,CAACiB,KAAF,CAAQd,OAAO,CAACE,SAAhB,CAAtC,EAAkE;MAChE,MAAM,IAAIU,KAAJ,CAAU,kDAAV,CAAN;IACD;;IAED,OAAO,IAAP;EACD,CAXc;EAYfR,OAAO,EAAEA,OAZM;EAafW,OAAO,EAAE,UAAUf,OAAV,EAAmBC,QAAnB,EAA6B;IACpC,IAAIe,SAAS,GAAGZ,OAAO,CAACJ,OAAD,CAAvB;IACAgB,SAAS,CAACC,QAAV,GAAqB,CAAC,CAAClB,MAAM,CAACC,OAAD,EAAUC,QAAV,CAA7B;IACA,OAAOe,SAAP;EACD,CAjBc;EAkBfjB,MAAM,EAAEA;AAlBO,CAAjB"},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport Styled from 'styled-components';\nconst Span = Styled.span`\n    &.active{\n        color: ${_ref => {\n  let {\n    theme\n  } = _ref;\n  return theme['primary-color'];\n}};\n        text-decoration: line-through;\n    }\n`;\nconst TodoStyleWrapper = Styled.div`\n    .ant-card-body{\n        padding: 15px 0 25px !important\n    }\n    .ant-table{\n        thead{\n            display: none;\n        }\n        tbody{\n            tr{\n                position: relative;\n                &:hover{\n                    box-shadow: 0 15px 50px ${_ref2 => {\n  let {\n    theme\n  } = _ref2;\n  return theme['light-color'];\n}}20;\n                    .ant-table-cell{\n                        background-color: #fff;\n                    }\n                }\n                td{\n                    font-size: 14px;\n                    color: ${_ref3 => {\n  let {\n    theme\n  } = _ref3;\n  return theme['gray-color'];\n}}\n                    line-height: .75;\n                    &:first-child{\n                        padding-left: 25px;\n                    }\n                    &:last-child{\n                        padding-right: 25px;\n                    }\n                    .ant-checkbox-wrapper{\n                        padding-top: 3px;\n                        &:hover{\n                            &:after{\n                                border-color: ${_ref4 => {\n  let {\n    theme\n  } = _ref4;\n  return theme['success-color'];\n}};\n                            }\n                            .ant-checkbox-inner{\n                                border-color: ${_ref5 => {\n  let {\n    theme\n  } = _ref5;\n  return theme['success-color'];\n}};\n                            }\n                        }\n                    }\n                    .ant-checkbox-checked{\n                        &:after{\n                            border-color: ${_ref6 => {\n  let {\n    theme\n  } = _ref6;\n  return theme['success-color'];\n}};\n                        }\n                    }\n                    .ant-checkbox-checked .ant-checkbox-inner{\n                        background-color: ${_ref7 => {\n  let {\n    theme\n  } = _ref7;\n  return theme['success-color'];\n}};\n                        border-color: ${_ref8 => {\n  let {\n    theme\n  } = _ref8;\n  return theme['success-color'];\n}};\n                    }\n                    .todo-title{\n                        min-width: 150px;\n                        line-height: 1.5;\n                    }\n                }\n            }\n            .todos-action{\n                min-width: 100px;\n                text-align: right;\n                svg,\n                i,\n                span{\n                    color: #D8DCEB !important;\n                }\n                svg.feather-trash-2{\n                    color: ${_ref9 => {\n  let {\n    theme\n  } = _ref9;\n  return theme['gray-color'];\n}}\n                }\n                .star{\n                    margin: 0 20px;\n                    &.active{\n                        svg,\n                        i{\n                            color: ${_ref10 => {\n  let {\n    theme\n  } = _ref10;\n  return theme['warning-color'];\n}} !important;\n                        }\n                    }\n                }\n            }\n            \n        }\n    }\n    \n    .new-todo-wrap{\n        padding: 16px 25px 0;\n        .btn-toDoAdd{\n            font-size: 12px;\n            font-weight: 500;\n            height: 50px;\n            padding: 0px 23.23px;\n        }\n    }\n`;\nexport { Span, TodoStyleWrapper };\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(Span, \"Span\", \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\New folder (2)\\\\strikingDash\\\\src\\\\container\\\\toDo\\\\style.js\");\n  reactHotLoader.register(TodoStyleWrapper, \"TodoStyleWrapper\", \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\New folder (2)\\\\strikingDash\\\\src\\\\container\\\\toDo\\\\style.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"names":["Styled","Span","span","theme","TodoStyleWrapper","div"],"sources":["C:/Users/Lenovo/Desktop/New folder (2)/strikingDash/src/container/toDo/style.js"],"sourcesContent":["import Styled from 'styled-components';\r\n\r\nconst Span = Styled.span`\r\n    &.active{\r\n        color: ${({ theme }) => theme['primary-color']};\r\n        text-decoration: line-through;\r\n    }\r\n`;\r\n\r\nconst TodoStyleWrapper = Styled.div`\r\n    .ant-card-body{\r\n        padding: 15px 0 25px !important\r\n    }\r\n    .ant-table{\r\n        thead{\r\n            display: none;\r\n        }\r\n        tbody{\r\n            tr{\r\n                position: relative;\r\n                &:hover{\r\n                    box-shadow: 0 15px 50px ${({ theme }) => theme['light-color']}20;\r\n                    .ant-table-cell{\r\n                        background-color: #fff;\r\n                    }\r\n                }\r\n                td{\r\n                    font-size: 14px;\r\n                    color: ${({ theme }) => theme['gray-color']}\r\n                    line-height: .75;\r\n                    &:first-child{\r\n                        padding-left: 25px;\r\n                    }\r\n                    &:last-child{\r\n                        padding-right: 25px;\r\n                    }\r\n                    .ant-checkbox-wrapper{\r\n                        padding-top: 3px;\r\n                        &:hover{\r\n                            &:after{\r\n                                border-color: ${({ theme }) => theme['success-color']};\r\n                            }\r\n                            .ant-checkbox-inner{\r\n                                border-color: ${({ theme }) => theme['success-color']};\r\n                            }\r\n                        }\r\n                    }\r\n                    .ant-checkbox-checked{\r\n                        &:after{\r\n                            border-color: ${({ theme }) => theme['success-color']};\r\n                        }\r\n                    }\r\n                    .ant-checkbox-checked .ant-checkbox-inner{\r\n                        background-color: ${({ theme }) => theme['success-color']};\r\n                        border-color: ${({ theme }) => theme['success-color']};\r\n                    }\r\n                    .todo-title{\r\n                        min-width: 150px;\r\n                        line-height: 1.5;\r\n                    }\r\n                }\r\n            }\r\n            .todos-action{\r\n                min-width: 100px;\r\n                text-align: right;\r\n                svg,\r\n                i,\r\n                span{\r\n                    color: #D8DCEB !important;\r\n                }\r\n                svg.feather-trash-2{\r\n                    color: ${({ theme }) => theme['gray-color']}\r\n                }\r\n                .star{\r\n                    margin: 0 20px;\r\n                    &.active{\r\n                        svg,\r\n                        i{\r\n                            color: ${({ theme }) => theme['warning-color']} !important;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            \r\n        }\r\n    }\r\n    \r\n    .new-todo-wrap{\r\n        padding: 16px 25px 0;\r\n        .btn-toDoAdd{\r\n            font-size: 12px;\r\n            font-weight: 500;\r\n            height: 50px;\r\n            padding: 0px 23.23px;\r\n        }\r\n    }\r\n`;\r\nexport { Span, TodoStyleWrapper };\r\n"],"mappings":";;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,IAAI,GAAGD,MAAM,CAACE,IAAK;AACzB;AACA,iBAAiB;EAAA,IAAC;IAAEC;EAAF,CAAD;EAAA,OAAeA,KAAK,CAAC,eAAD,CAApB;AAAA,CAAsC;AACvD;AACA;AACA,CALA;AAOA,MAAMC,gBAAgB,GAAGJ,MAAM,CAACK,GAAI;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;EAAA,IAAC;IAAEF;EAAF,CAAD;EAAA,OAAeA,KAAK,CAAC,aAAD,CAApB;AAAA,CAAoC;AAClF;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;EAAA,IAAC;IAAEA;EAAF,CAAD;EAAA,OAAeA,KAAK,CAAC,YAAD,CAApB;AAAA,CAAmC;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;EAAA,IAAC;IAAEA;EAAF,CAAD;EAAA,OAAeA,KAAK,CAAC,eAAD,CAApB;AAAA,CAAsC;AACtF;AACA;AACA,gDAAgD;EAAA,IAAC;IAAEA;EAAF,CAAD;EAAA,OAAeA,KAAK,CAAC,eAAD,CAApB;AAAA,CAAsC;AACtF;AACA;AACA;AACA;AACA;AACA,4CAA4C;EAAA,IAAC;IAAEA;EAAF,CAAD;EAAA,OAAeA,KAAK,CAAC,eAAD,CAApB;AAAA,CAAsC;AAClF;AACA;AACA;AACA,4CAA4C;EAAA,IAAC;IAAEA;EAAF,CAAD;EAAA,OAAeA,KAAK,CAAC,eAAD,CAApB;AAAA,CAAsC;AAClF,wCAAwC;EAAA,IAAC;IAAEA;EAAF,CAAD;EAAA,OAAeA,KAAK,CAAC,eAAD,CAApB;AAAA,CAAsC;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;EAAA,IAAC;IAAEA;EAAF,CAAD;EAAA,OAAeA,KAAK,CAAC,YAAD,CAApB;AAAA,CAAmC;AAChE;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;EAAA,IAAC;IAAEA;EAAF,CAAD;EAAA,OAAeA,KAAK,CAAC,eAAD,CAApB;AAAA,CAAsC;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAvFA;AAwFA,SAASF,IAAT,EAAeG,gBAAf;;;;;;;;;;0BA/FMH,I;0BAOAG,gB"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _excluded = [\"value\", \"onChange\", \"options\"],\n    _excluded2 = [\"value\", \"options\", \"className\", \"iconComponent\", \"getIconAspectRatio\", \"arrowComponent\", \"unicodeFlags\"];\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (it) return (it = it.call(o)).next.bind(it);\n\n  if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n    if (it) o = it;\n    var i = 0;\n    return function () {\n      if (i >= o.length) return {\n        done: true\n      };\n      return {\n        done: false,\n        value: o[i++]\n      };\n    };\n  }\n\n  throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React, { useCallback, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport getUnicodeFlagIcon from 'country-flag-icons/unicode';\nexport default function CountrySelect(_ref) {\n  var value = _ref.value,\n      onChange = _ref.onChange,\n      options = _ref.options,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var onChange_ = useCallback(function (event) {\n    var value = event.target.value;\n    onChange(value === 'ZZ' ? undefined : value);\n  }, [onChange]);\n  var selectedOption = useMemo(function () {\n    return getSelectedOption(options, value);\n  }, [options, value]); // \"ZZ\" means \"International\".\n  // (HTML requires each `<option/>` have some string `value`).\n\n  return /*#__PURE__*/React.createElement(\"select\", _extends({}, rest, {\n    value: value || 'ZZ',\n    onChange: onChange_\n  }), options.map(function (_ref2) {\n    var value = _ref2.value,\n        label = _ref2.label,\n        divider = _ref2.divider;\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: divider ? '|' : value || 'ZZ',\n      value: divider ? '|' : value || 'ZZ',\n      disabled: divider ? true : false,\n      style: divider ? DIVIDER_STYLE : undefined\n    }, label);\n  }));\n}\nCountrySelect.propTypes = {\n  /**\r\n   * A two-letter country code.\r\n   * Example: \"US\", \"RU\", etc.\r\n   */\n  value: PropTypes.string,\n\n  /**\r\n   * A function of `value: string`.\r\n   * Updates the `value` property.\r\n   */\n  onChange: PropTypes.func.isRequired,\n  // `<select/>` options.\n  options: PropTypes.arrayOf(PropTypes.shape({\n    value: PropTypes.string,\n    label: PropTypes.string,\n    divider: PropTypes.bool\n  })).isRequired\n};\nvar DIVIDER_STYLE = {\n  fontSize: '1px',\n  backgroundColor: 'currentColor',\n  color: 'inherit'\n};\nexport function CountrySelectWithIcon(_ref3) {\n  var value = _ref3.value,\n      options = _ref3.options,\n      className = _ref3.className,\n      Icon = _ref3.iconComponent,\n      getIconAspectRatio = _ref3.getIconAspectRatio,\n      Arrow = _ref3.arrowComponent,\n      unicodeFlags = _ref3.unicodeFlags,\n      rest = _objectWithoutProperties(_ref3, _excluded2);\n\n  var selectedOption = useMemo(function () {\n    return getSelectedOption(options, value);\n  }, [options, value]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"PhoneInputCountry\"\n  }, /*#__PURE__*/React.createElement(CountrySelect, _extends({}, rest, {\n    value: value,\n    options: options,\n    className: classNames('PhoneInputCountrySelect', className)\n  })), unicodeFlags && value && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"PhoneInputCountryIconUnicode\"\n  }, getUnicodeFlagIcon(value)), !(unicodeFlags && value) && /*#__PURE__*/React.createElement(Icon, {\n    \"aria-hidden\": true,\n    country: value,\n    label: selectedOption && selectedOption.label,\n    aspectRatio: unicodeFlags ? 1 : undefined\n  }), /*#__PURE__*/React.createElement(Arrow, null));\n}\nCountrySelectWithIcon.propTypes = {\n  // Country flag component.\n  iconComponent: PropTypes.elementType,\n  // Select arrow component.\n  arrowComponent: PropTypes.elementType.isRequired,\n  // Set to `true` to render Unicode flag icons instead of SVG images.\n  unicodeFlags: PropTypes.bool\n};\nCountrySelectWithIcon.defaultProps = {\n  arrowComponent: function arrowComponent() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"PhoneInputCountrySelectArrow\"\n    });\n  }\n};\n\nfunction getSelectedOption(options, value) {\n  for (var _iterator = _createForOfIteratorHelperLoose(options), _step; !(_step = _iterator()).done;) {\n    var option = _step.value;\n\n    if (!option.divider && option.value === value) {\n      return option;\n    }\n  }\n}","map":{"version":3,"sources":["../source/CountrySelect.js"],"names":["value","onChange","options","rest","onChange_","useCallback","event","selectedOption","useMemo","getSelectedOption","label","divider","undefined","CountrySelect","PropTypes","bool","isRequired","DIVIDER_STYLE","fontSize","backgroundColor","color","className","iconComponent","Icon","getIconAspectRatio","arrowComponent","Arrow","unicodeFlags","classNames","getUnicodeFlagIcon","CountrySelectWithIcon","option"],"mappings":"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","sourcesContent":["import React, { useCallback, useMemo } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport classNames from 'classnames'\r\nimport getUnicodeFlagIcon from 'country-flag-icons/unicode'\r\n\r\nexport default function CountrySelect({\r\n\tvalue,\r\n\tonChange,\r\n\toptions,\r\n\t...rest\r\n}) {\r\n\tconst onChange_ = useCallback((event) => {\r\n\t\tconst value = event.target.value\r\n\t\tonChange(value === 'ZZ' ? undefined : value)\r\n\t}, [onChange])\r\n\r\n\tconst selectedOption = useMemo(() => {\r\n\t\treturn getSelectedOption(options, value)\r\n\t}, [options, value])\r\n\r\n\t// \"ZZ\" means \"International\".\r\n\t// (HTML requires each `<option/>` have some string `value`).\r\n\treturn (\r\n\t\t<select\r\n\t\t\t{...rest}\r\n\t\t\tvalue={value || 'ZZ'}\r\n\t\t\tonChange={onChange_}>\r\n\t\t\t{options.map(({ value, label, divider }) => (\r\n\t\t\t\t<option\r\n\t\t\t\t\tkey={divider ? '|' : value || 'ZZ'}\r\n\t\t\t\t\tvalue={divider ? '|' : value || 'ZZ'}\r\n\t\t\t\t\tdisabled={divider ? true : false}\r\n\t\t\t\t\tstyle={divider ? DIVIDER_STYLE : undefined}>\r\n\t\t\t\t\t{label}\r\n\t\t\t\t</option>\r\n\t\t\t))}\r\n\t\t</select>\r\n\t)\r\n}\r\n\r\nCountrySelect.propTypes = {\r\n\t/**\r\n\t * A two-letter country code.\r\n\t * Example: \"US\", \"RU\", etc.\r\n\t */\r\n\tvalue: PropTypes.string,\r\n\r\n\t/**\r\n\t * A function of `value: string`.\r\n\t * Updates the `value` property.\r\n\t */\r\n\tonChange: PropTypes.func.isRequired,\r\n\r\n\t// `<select/>` options.\r\n\toptions: PropTypes.arrayOf(PropTypes.shape({\r\n\t\tvalue: PropTypes.string,\r\n\t\tlabel: PropTypes.string,\r\n\t\tdivider: PropTypes.bool\r\n\t})).isRequired\r\n}\r\n\r\nconst DIVIDER_STYLE = {\r\n\tfontSize: '1px',\r\n\tbackgroundColor: 'currentColor',\r\n\tcolor: 'inherit'\r\n}\r\n\r\nexport function CountrySelectWithIcon({\r\n\tvalue,\r\n\toptions,\r\n\tclassName,\r\n\ticonComponent: Icon,\r\n\tgetIconAspectRatio,\r\n\tarrowComponent: Arrow,\r\n\tunicodeFlags,\r\n\t...rest\r\n}) {\r\n\tconst selectedOption = useMemo(() => {\r\n\t\treturn getSelectedOption(options, value)\r\n\t}, [options, value])\r\n\r\n\treturn (\r\n\t\t<div className=\"PhoneInputCountry\">\r\n\t\t\t<CountrySelect\r\n\t\t\t\t{...rest}\r\n\t\t\t\tvalue={value}\r\n\t\t\t\toptions={options}\r\n\t\t\t\tclassName={classNames('PhoneInputCountrySelect', className)}/>\r\n\r\n\t\t\t{/* Either a Unicode flag icon. */}\r\n\t\t\t{(unicodeFlags && value) &&\r\n\t\t\t\t<div className=\"PhoneInputCountryIconUnicode\">\r\n\t\t\t\t\t{getUnicodeFlagIcon(value)}\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\r\n\t\t\t{/* Or an SVG flag icon. */}\r\n\t\t\t{!(unicodeFlags && value) &&\r\n\t\t\t\t<Icon\r\n\t\t\t\t\taria-hidden\r\n\t\t\t\t\tcountry={value}\r\n\t\t\t\t\tlabel={selectedOption && selectedOption.label}\r\n\t\t\t\t\taspectRatio={unicodeFlags ? 1 : undefined}/>\r\n\t\t\t}\r\n\r\n\t\t\t<Arrow/>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nCountrySelectWithIcon.propTypes = {\r\n\t// Country flag component.\r\n\ticonComponent: PropTypes.elementType,\r\n\r\n\t// Select arrow component.\r\n\tarrowComponent: PropTypes.elementType.isRequired,\r\n\r\n\t// Set to `true` to render Unicode flag icons instead of SVG images.\r\n\tunicodeFlags: PropTypes.bool\r\n}\r\n\r\nCountrySelectWithIcon.defaultProps = {\r\n\tarrowComponent: () => <div className=\"PhoneInputCountrySelectArrow\"/>\r\n}\r\n\r\nfunction getSelectedOption(options, value) {\r\n\tfor (const option of options) {\r\n\t\tif (!option.divider && option.value === value) {\r\n\t\t\treturn option\r\n\t\t}\r\n\t}\r\n}"]},"metadata":{},"sourceType":"module"}
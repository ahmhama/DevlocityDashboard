{"ast":null,"code":"(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport actions from './actions';\nconst {\n  taskReadBegin,\n  taskReadSuccess,\n  taskReadErr,\n  starUpdateBegin,\n  starUpdateSuccess,\n  starUpdateErr,\n  completeUpdateBegin,\n  completeUpdateSuccess,\n  completeUpdateErr\n} = actions;\n\nconst taskAddData = data => {\n  return async dispatch => {\n    try {\n      dispatch(taskReadBegin());\n      dispatch(taskReadSuccess(data));\n    } catch (err) {\n      dispatch(taskReadErr(err));\n    }\n  };\n};\n\nconst onStarUpdate = (data, id) => {\n  return async dispatch => {\n    try {\n      dispatch(starUpdateBegin());\n      data.map(item => {\n        if (item.id === id) {\n          const fav = item;\n\n          if (fav.favourite) {\n            item.favourite = false;\n          } else {\n            fav.favourite = true;\n          }\n        }\n\n        return dispatch(starUpdateSuccess(data));\n      });\n    } catch (err) {\n      dispatch(starUpdateErr(err));\n    }\n  };\n};\n\nconst onCompleteUpdate = (data, id) => {\n  return async dispatch => {\n    try {\n      dispatch(completeUpdateBegin());\n      data.map(item => {\n        if (item.id === id) {\n          const complete = item;\n\n          if (complete.completed) {\n            item.completed = false;\n          } else {\n            complete.completed = true;\n          }\n        }\n\n        return dispatch(completeUpdateSuccess(data));\n      });\n    } catch (err) {\n      dispatch(completeUpdateErr(err));\n    }\n  };\n};\n\nconst ontaskDelete = data => {\n  return async dispatch => {\n    try {\n      dispatch(taskReadBegin());\n      dispatch(taskReadSuccess(data));\n    } catch (err) {\n      dispatch(taskReadErr(err));\n    }\n  };\n};\n\nconst ontaskEdit = data => {\n  return async dispatch => {\n    try {\n      dispatch(taskReadBegin());\n      dispatch(taskReadSuccess(data));\n    } catch (err) {\n      dispatch(taskReadErr(err));\n    }\n  };\n};\n\nexport { taskAddData, onStarUpdate, ontaskDelete, onCompleteUpdate, ontaskEdit };\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(taskReadBegin, \"taskReadBegin\", \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\New folder (2)\\\\strikingDash\\\\src\\\\redux\\\\task\\\\actionCreator.js\");\n  reactHotLoader.register(taskReadSuccess, \"taskReadSuccess\", \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\New folder (2)\\\\strikingDash\\\\src\\\\redux\\\\task\\\\actionCreator.js\");\n  reactHotLoader.register(taskReadErr, \"taskReadErr\", \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\New folder (2)\\\\strikingDash\\\\src\\\\redux\\\\task\\\\actionCreator.js\");\n  reactHotLoader.register(starUpdateBegin, \"starUpdateBegin\", \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\New folder (2)\\\\strikingDash\\\\src\\\\redux\\\\task\\\\actionCreator.js\");\n  reactHotLoader.register(starUpdateSuccess, \"starUpdateSuccess\", \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\New folder (2)\\\\strikingDash\\\\src\\\\redux\\\\task\\\\actionCreator.js\");\n  reactHotLoader.register(starUpdateErr, \"starUpdateErr\", \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\New folder (2)\\\\strikingDash\\\\src\\\\redux\\\\task\\\\actionCreator.js\");\n  reactHotLoader.register(completeUpdateBegin, \"completeUpdateBegin\", \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\New folder (2)\\\\strikingDash\\\\src\\\\redux\\\\task\\\\actionCreator.js\");\n  reactHotLoader.register(completeUpdateSuccess, \"completeUpdateSuccess\", \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\New folder (2)\\\\strikingDash\\\\src\\\\redux\\\\task\\\\actionCreator.js\");\n  reactHotLoader.register(completeUpdateErr, \"completeUpdateErr\", \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\New folder (2)\\\\strikingDash\\\\src\\\\redux\\\\task\\\\actionCreator.js\");\n  reactHotLoader.register(taskAddData, \"taskAddData\", \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\New folder (2)\\\\strikingDash\\\\src\\\\redux\\\\task\\\\actionCreator.js\");\n  reactHotLoader.register(onStarUpdate, \"onStarUpdate\", \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\New folder (2)\\\\strikingDash\\\\src\\\\redux\\\\task\\\\actionCreator.js\");\n  reactHotLoader.register(onCompleteUpdate, \"onCompleteUpdate\", \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\New folder (2)\\\\strikingDash\\\\src\\\\redux\\\\task\\\\actionCreator.js\");\n  reactHotLoader.register(ontaskDelete, \"ontaskDelete\", \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\New folder (2)\\\\strikingDash\\\\src\\\\redux\\\\task\\\\actionCreator.js\");\n  reactHotLoader.register(ontaskEdit, \"ontaskEdit\", \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\New folder (2)\\\\strikingDash\\\\src\\\\redux\\\\task\\\\actionCreator.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"names":["actions","taskReadBegin","taskReadSuccess","taskReadErr","starUpdateBegin","starUpdateSuccess","starUpdateErr","completeUpdateBegin","completeUpdateSuccess","completeUpdateErr","taskAddData","data","dispatch","err","onStarUpdate","id","map","item","fav","favourite","onCompleteUpdate","complete","completed","ontaskDelete","ontaskEdit"],"sources":["C:/Users/Lenovo/Desktop/New folder (2)/strikingDash/src/redux/task/actionCreator.js"],"sourcesContent":["import actions from './actions';\r\n\r\nconst {\r\n  taskReadBegin,\r\n  taskReadSuccess,\r\n  taskReadErr,\r\n  starUpdateBegin,\r\n  starUpdateSuccess,\r\n  starUpdateErr,\r\n  completeUpdateBegin,\r\n  completeUpdateSuccess,\r\n  completeUpdateErr,\r\n} = actions;\r\n\r\nconst taskAddData = data => {\r\n  return async dispatch => {\r\n    try {\r\n      dispatch(taskReadBegin());\r\n      dispatch(taskReadSuccess(data));\r\n    } catch (err) {\r\n      dispatch(taskReadErr(err));\r\n    }\r\n  };\r\n};\r\n\r\nconst onStarUpdate = (data, id) => {\r\n  return async dispatch => {\r\n    try {\r\n      dispatch(starUpdateBegin());\r\n\r\n      data.map(item => {\r\n        if (item.id === id) {\r\n          const fav = item;\r\n          if (fav.favourite) {\r\n            item.favourite = false;\r\n          } else {\r\n            fav.favourite = true;\r\n          }\r\n        }\r\n        return dispatch(starUpdateSuccess(data));\r\n      });\r\n    } catch (err) {\r\n      dispatch(starUpdateErr(err));\r\n    }\r\n  };\r\n};\r\n\r\nconst onCompleteUpdate = (data, id) => {\r\n  return async dispatch => {\r\n    try {\r\n      dispatch(completeUpdateBegin());\r\n\r\n      data.map(item => {\r\n        if (item.id === id) {\r\n          const complete = item;\r\n          if (complete.completed) {\r\n            item.completed = false;\r\n          } else {\r\n            complete.completed = true;\r\n          }\r\n        }\r\n        return dispatch(completeUpdateSuccess(data));\r\n      });\r\n    } catch (err) {\r\n      dispatch(completeUpdateErr(err));\r\n    }\r\n  };\r\n};\r\n\r\nconst ontaskDelete = data => {\r\n  return async dispatch => {\r\n    try {\r\n      dispatch(taskReadBegin());\r\n      dispatch(taskReadSuccess(data));\r\n    } catch (err) {\r\n      dispatch(taskReadErr(err));\r\n    }\r\n  };\r\n};\r\n\r\nconst ontaskEdit = data => {\r\n  return async dispatch => {\r\n    try {\r\n      dispatch(taskReadBegin());\r\n      dispatch(taskReadSuccess(data));\r\n    } catch (err) {\r\n      dispatch(taskReadErr(err));\r\n    }\r\n  };\r\n};\r\n\r\nexport { taskAddData, onStarUpdate, ontaskDelete, onCompleteUpdate, ontaskEdit };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
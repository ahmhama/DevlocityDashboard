{"ast":null,"code":"function _createForOfIteratorHelperLoose(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (it) return (it = it.call(o)).next.bind(it);\n\n  if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n    if (it) o = it;\n    var i = 0;\n    return function () {\n      if (i >= o.length) return {\n        done: true\n      };\n      return {\n        done: false,\n        value: o[i++]\n      };\n    };\n  }\n\n  throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nimport { isSupportedCountry } from 'libphonenumber-js/core';\nexport { getCountries } from 'libphonenumber-js/core';\n/**\r\n * Sorts country `<select/>` options.\r\n * Can move some country `<select/>` options\r\n * to the top of the list, for example.\r\n * @param  {object[]} countryOptions — Country `<select/>` options.\r\n * @param  {string[]} [countryOptionsOrder] — Country `<select/>` options order. Example: `[\"US\", \"CA\", \"AU\", \"|\", \"...\"]`.\r\n * @return {object[]}\r\n */\n\nexport function sortCountryOptions(options, order) {\n  if (!order) {\n    return options;\n  }\n\n  var optionsOnTop = [];\n  var optionsOnBottom = [];\n  var appendTo = optionsOnTop;\n\n  for (var _iterator = _createForOfIteratorHelperLoose(order), _step; !(_step = _iterator()).done;) {\n    var element = _step.value;\n\n    if (element === '|') {\n      appendTo.push({\n        divider: true\n      });\n    } else if (element === '...' || element === '…') {\n      appendTo = optionsOnBottom;\n    } else {\n      (function () {\n        var countryCode = void 0;\n\n        if (element === '🌐') {\n          countryCode = undefined;\n        } else {\n          countryCode = element;\n        } // Find the position of the option.\n\n\n        var index = options.indexOf(options.filter(function (option) {\n          return option.value === countryCode;\n        })[0]); // Get the option.\n\n        var option = options[index]; // Remove the option from its default position.\n\n        options.splice(index, 1); // Add the option on top.\n\n        appendTo.push(option);\n      })();\n    }\n  }\n\n  return optionsOnTop.concat(options).concat(optionsOnBottom);\n}\nexport function getSupportedCountryOptions(countryOptions, metadata) {\n  if (countryOptions) {\n    countryOptions = countryOptions.filter(function (option) {\n      switch (option) {\n        case '🌐':\n        case '|':\n        case '...':\n        case '…':\n          return true;\n\n        default:\n          return isCountrySupportedWithError(option, metadata);\n      }\n    });\n\n    if (countryOptions.length > 0) {\n      return countryOptions;\n    }\n  }\n}\nexport function isCountrySupportedWithError(country, metadata) {\n  if (isSupportedCountry(country, metadata)) {\n    return true;\n  } else {\n    console.error(\"Country not found: \".concat(country));\n    return false;\n  }\n}\nexport function getSupportedCountries(countries, metadata) {\n  if (countries) {\n    countries = countries.filter(function (country) {\n      return isCountrySupportedWithError(country, metadata);\n    });\n\n    if (countries.length === 0) {\n      countries = undefined;\n    }\n  }\n\n  return countries;\n}","map":{"version":3,"sources":["../../source/helpers/countries.js"],"names":["optionsOnTop","optionsOnBottom","appendTo","element","divider","countryCode","index","option","options","countryOptions","isCountrySupportedWithError","isSupportedCountry","console","countries"],"mappings":"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","sourcesContent":["import { isSupportedCountry } from 'libphonenumber-js/core'\r\nexport { getCountries } from 'libphonenumber-js/core'\r\n\r\n/**\r\n * Sorts country `<select/>` options.\r\n * Can move some country `<select/>` options\r\n * to the top of the list, for example.\r\n * @param  {object[]} countryOptions — Country `<select/>` options.\r\n * @param  {string[]} [countryOptionsOrder] — Country `<select/>` options order. Example: `[\"US\", \"CA\", \"AU\", \"|\", \"...\"]`.\r\n * @return {object[]}\r\n */\r\nexport function sortCountryOptions(options, order) {\r\n\tif (!order) {\r\n\t\treturn options\r\n\t}\r\n\tconst optionsOnTop = []\r\n\tconst optionsOnBottom = []\r\n\tlet appendTo = optionsOnTop\r\n\tfor (const element of order) {\r\n\t\tif (element === '|') {\r\n\t\t\tappendTo.push({ divider: true })\r\n\t\t} else if (element === '...' || element === '…') {\r\n\t\t\tappendTo = optionsOnBottom\r\n\t\t} else {\r\n\t\t\tlet countryCode\r\n\t\t\tif (element === '🌐') {\r\n\t\t\t\tcountryCode = undefined\r\n\t\t\t} else {\r\n\t\t\t\tcountryCode = element\r\n\t\t\t}\r\n\t\t\t// Find the position of the option.\r\n\t\t\tconst index = options.indexOf(options.filter(option => option.value === countryCode)[0])\r\n\t\t\t// Get the option.\r\n\t\t\tconst option = options[index]\r\n\t\t\t// Remove the option from its default position.\r\n\t\t\toptions.splice(index, 1)\r\n\t\t\t// Add the option on top.\r\n\t\t\tappendTo.push(option)\r\n\t\t}\r\n\t}\r\n\treturn optionsOnTop.concat(options).concat(optionsOnBottom)\r\n}\r\n\r\nexport function getSupportedCountryOptions(countryOptions, metadata) {\r\n\tif (countryOptions) {\r\n\t\tcountryOptions = countryOptions.filter((option) => {\r\n\t\t\tswitch (option) {\r\n\t\t\t\tcase '🌐':\r\n\t\t\t\tcase '|':\r\n\t\t\t\tcase '...':\r\n\t\t\t\tcase '…':\r\n\t\t\t\t\treturn true\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn isCountrySupportedWithError(option, metadata)\r\n\t\t\t}\r\n\t\t})\r\n\t\tif (countryOptions.length > 0) {\r\n\t\t\treturn countryOptions\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport function isCountrySupportedWithError(country, metadata) {\r\n\tif (isSupportedCountry(country, metadata)) {\r\n\t\treturn true\r\n\t} else {\r\n\t\tconsole.error(`Country not found: ${country}`)\r\n\t\treturn false\r\n\t}\r\n}\r\n\r\nexport function getSupportedCountries(countries, metadata) {\r\n\tif (countries) {\r\n\t\tcountries = countries.filter(country => isCountrySupportedWithError(country, metadata))\r\n\t\tif (countries.length === 0) {\r\n\t\t\tcountries = undefined\r\n\t\t}\r\n\t}\r\n\treturn countries\r\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"\"use strict\";\n\nconst LEVELS = ['debug', 'info', 'warn', 'error', 'silent'];\nconst LEVEL_TO_CONSOLE_METHOD = new Map([['debug', 'log'], ['info', 'log'], ['warn', 'log']]);\n\nclass Logger {\n  constructor() {\n    let level = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Logger.defaultLevel;\n    this.activeLevels = new Set();\n    this.setLogLevel(level);\n  }\n\n  setLogLevel(level) {\n    const levelIndex = LEVELS.indexOf(level);\n    if (levelIndex === -1) throw new Error(`Invalid log level \"${level}\". Use one of these: ${LEVELS.join(', ')}`);\n    this.activeLevels.clear();\n\n    for (const [i, level] of LEVELS.entries()) {\n      if (i >= levelIndex) this.activeLevels.add(level);\n    }\n  }\n\n  _log(level) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    console[LEVEL_TO_CONSOLE_METHOD.get(level) || level](...args);\n  }\n\n}\n\nLogger.levels = LEVELS;\nLogger.defaultLevel = 'info';\n;\nLEVELS.forEach(level => {\n  if (level === 'silent') return;\n\n  Logger.prototype[level] = function () {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    if (this.activeLevels.has(level)) this._log(level, ...args);\n  };\n});\nmodule.exports = Logger;","map":{"version":3,"names":["LEVELS","LEVEL_TO_CONSOLE_METHOD","Map","Logger","constructor","level","defaultLevel","activeLevels","Set","setLogLevel","levelIndex","indexOf","Error","join","clear","i","entries","add","_log","args","console","get","levels","forEach","prototype","has","module","exports"],"sources":["C:/Users/Lenovo/Desktop/New folder (2)/strikingDash/node_modules/webpack-bundle-analyzer/lib/Logger.js"],"sourcesContent":["\"use strict\";\n\nconst LEVELS = ['debug', 'info', 'warn', 'error', 'silent'];\nconst LEVEL_TO_CONSOLE_METHOD = new Map([['debug', 'log'], ['info', 'log'], ['warn', 'log']]);\n\nclass Logger {\n  constructor(level = Logger.defaultLevel) {\n    this.activeLevels = new Set();\n    this.setLogLevel(level);\n  }\n\n  setLogLevel(level) {\n    const levelIndex = LEVELS.indexOf(level);\n    if (levelIndex === -1) throw new Error(`Invalid log level \"${level}\". Use one of these: ${LEVELS.join(', ')}`);\n    this.activeLevels.clear();\n\n    for (const [i, level] of LEVELS.entries()) {\n      if (i >= levelIndex) this.activeLevels.add(level);\n    }\n  }\n\n  _log(level, ...args) {\n    console[LEVEL_TO_CONSOLE_METHOD.get(level) || level](...args);\n  }\n\n}\n\nLogger.levels = LEVELS;\nLogger.defaultLevel = 'info';\n;\nLEVELS.forEach(level => {\n  if (level === 'silent') return;\n\n  Logger.prototype[level] = function (...args) {\n    if (this.activeLevels.has(level)) this._log(level, ...args);\n  };\n});\nmodule.exports = Logger;"],"mappings":"AAAA;;AAEA,MAAMA,MAAM,GAAG,CAAC,OAAD,EAAU,MAAV,EAAkB,MAAlB,EAA0B,OAA1B,EAAmC,QAAnC,CAAf;AACA,MAAMC,uBAAuB,GAAG,IAAIC,GAAJ,CAAQ,CAAC,CAAC,OAAD,EAAU,KAAV,CAAD,EAAmB,CAAC,MAAD,EAAS,KAAT,CAAnB,EAAoC,CAAC,MAAD,EAAS,KAAT,CAApC,CAAR,CAAhC;;AAEA,MAAMC,MAAN,CAAa;EACXC,WAAW,GAA8B;IAAA,IAA7BC,KAA6B,uEAArBF,MAAM,CAACG,YAAc;IACvC,KAAKC,YAAL,GAAoB,IAAIC,GAAJ,EAApB;IACA,KAAKC,WAAL,CAAiBJ,KAAjB;EACD;;EAEDI,WAAW,CAACJ,KAAD,EAAQ;IACjB,MAAMK,UAAU,GAAGV,MAAM,CAACW,OAAP,CAAeN,KAAf,CAAnB;IACA,IAAIK,UAAU,KAAK,CAAC,CAApB,EAAuB,MAAM,IAAIE,KAAJ,CAAW,sBAAqBP,KAAM,wBAAuBL,MAAM,CAACa,IAAP,CAAY,IAAZ,CAAkB,EAA/E,CAAN;IACvB,KAAKN,YAAL,CAAkBO,KAAlB;;IAEA,KAAK,MAAM,CAACC,CAAD,EAAIV,KAAJ,CAAX,IAAyBL,MAAM,CAACgB,OAAP,EAAzB,EAA2C;MACzC,IAAID,CAAC,IAAIL,UAAT,EAAqB,KAAKH,YAAL,CAAkBU,GAAlB,CAAsBZ,KAAtB;IACtB;EACF;;EAEDa,IAAI,CAACb,KAAD,EAAiB;IAAA,kCAANc,IAAM;MAANA,IAAM;IAAA;;IACnBC,OAAO,CAACnB,uBAAuB,CAACoB,GAAxB,CAA4BhB,KAA5B,KAAsCA,KAAvC,CAAP,CAAqD,GAAGc,IAAxD;EACD;;AAlBU;;AAsBbhB,MAAM,CAACmB,MAAP,GAAgBtB,MAAhB;AACAG,MAAM,CAACG,YAAP,GAAsB,MAAtB;AACA;AACAN,MAAM,CAACuB,OAAP,CAAelB,KAAK,IAAI;EACtB,IAAIA,KAAK,KAAK,QAAd,EAAwB;;EAExBF,MAAM,CAACqB,SAAP,CAAiBnB,KAAjB,IAA0B,YAAmB;IAAA,mCAANc,IAAM;MAANA,IAAM;IAAA;;IAC3C,IAAI,KAAKZ,YAAL,CAAkBkB,GAAlB,CAAsBpB,KAAtB,CAAJ,EAAkC,KAAKa,IAAL,CAAUb,KAAV,EAAiB,GAAGc,IAApB;EACnC,CAFD;AAGD,CAND;AAOAO,MAAM,CAACC,OAAP,GAAiBxB,MAAjB"},"metadata":{},"sourceType":"script"}
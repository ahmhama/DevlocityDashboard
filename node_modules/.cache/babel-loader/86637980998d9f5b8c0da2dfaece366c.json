{"ast":null,"code":"import { isSafari, isFirefox } from './BrowserDetector';\nimport MonotonicInterpolant from './MonotonicInterpolant';\nvar ELEMENT_NODE = 1;\nexport function getNodeClientOffset(node) {\n  var el = node.nodeType === ELEMENT_NODE ? node : node.parentElement;\n\n  if (!el) {\n    return null;\n  }\n\n  var _el$getBoundingClient = el.getBoundingClientRect(),\n      top = _el$getBoundingClient.top,\n      left = _el$getBoundingClient.left;\n\n  return {\n    x: left,\n    y: top\n  };\n}\nexport function getEventClientOffset(e) {\n  return {\n    x: e.clientX,\n    y: e.clientY\n  };\n}\n\nfunction isImageNode(node) {\n  return node.nodeName === 'IMG' && (isFirefox() || !document.documentElement.contains(node));\n}\n\nfunction getDragPreviewSize(isImage, dragPreview, sourceWidth, sourceHeight) {\n  var dragPreviewWidth = isImage ? dragPreview.width : sourceWidth;\n  var dragPreviewHeight = isImage ? dragPreview.height : sourceHeight; // Work around @2x coordinate discrepancies in browsers\n\n  if (isSafari() && isImage) {\n    dragPreviewHeight /= window.devicePixelRatio;\n    dragPreviewWidth /= window.devicePixelRatio;\n  }\n\n  return {\n    dragPreviewWidth: dragPreviewWidth,\n    dragPreviewHeight: dragPreviewHeight\n  };\n}\n\nexport function getDragPreviewOffset(sourceNode, dragPreview, clientOffset, anchorPoint, offsetPoint) {\n  // The browsers will use the image intrinsic size under different conditions.\n  // Firefox only cares if it's an image, but WebKit also wants it to be detached.\n  var isImage = isImageNode(dragPreview);\n  var dragPreviewNode = isImage ? sourceNode : dragPreview;\n  var dragPreviewNodeOffsetFromClient = getNodeClientOffset(dragPreviewNode);\n  var offsetFromDragPreview = {\n    x: clientOffset.x - dragPreviewNodeOffsetFromClient.x,\n    y: clientOffset.y - dragPreviewNodeOffsetFromClient.y\n  };\n  var sourceWidth = sourceNode.offsetWidth,\n      sourceHeight = sourceNode.offsetHeight;\n  var anchorX = anchorPoint.anchorX,\n      anchorY = anchorPoint.anchorY;\n\n  var _getDragPreviewSize = getDragPreviewSize(isImage, dragPreview, sourceWidth, sourceHeight),\n      dragPreviewWidth = _getDragPreviewSize.dragPreviewWidth,\n      dragPreviewHeight = _getDragPreviewSize.dragPreviewHeight;\n\n  var calculateYOffset = function calculateYOffset() {\n    var interpolantY = new MonotonicInterpolant([0, 0.5, 1], [// Dock to the top\n    offsetFromDragPreview.y, // Align at the center\n    offsetFromDragPreview.y / sourceHeight * dragPreviewHeight, // Dock to the bottom\n    offsetFromDragPreview.y + dragPreviewHeight - sourceHeight]);\n    var y = interpolantY.interpolate(anchorY); // Work around Safari 8 positioning bug\n\n    if (isSafari() && isImage) {\n      // We'll have to wait for @3x to see if this is entirely correct\n      y += (window.devicePixelRatio - 1) * dragPreviewHeight;\n    }\n\n    return y;\n  };\n\n  var calculateXOffset = function calculateXOffset() {\n    // Interpolate coordinates depending on anchor point\n    // If you know a simpler way to do this, let me know\n    var interpolantX = new MonotonicInterpolant([0, 0.5, 1], [// Dock to the left\n    offsetFromDragPreview.x, // Align at the center\n    offsetFromDragPreview.x / sourceWidth * dragPreviewWidth, // Dock to the right\n    offsetFromDragPreview.x + dragPreviewWidth - sourceWidth]);\n    return interpolantX.interpolate(anchorX);\n  }; // Force offsets if specified in the options.\n\n\n  var offsetX = offsetPoint.offsetX,\n      offsetY = offsetPoint.offsetY;\n  var isManualOffsetX = offsetX === 0 || offsetX;\n  var isManualOffsetY = offsetY === 0 || offsetY;\n  return {\n    x: isManualOffsetX ? offsetX : calculateXOffset(),\n    y: isManualOffsetY ? offsetY : calculateYOffset()\n  };\n}","map":{"version":3,"names":["isSafari","isFirefox","MonotonicInterpolant","ELEMENT_NODE","getNodeClientOffset","node","el","nodeType","parentElement","_el$getBoundingClient","getBoundingClientRect","top","left","x","y","getEventClientOffset","e","clientX","clientY","isImageNode","nodeName","document","documentElement","contains","getDragPreviewSize","isImage","dragPreview","sourceWidth","sourceHeight","dragPreviewWidth","width","dragPreviewHeight","height","window","devicePixelRatio","getDragPreviewOffset","sourceNode","clientOffset","anchorPoint","offsetPoint","dragPreviewNode","dragPreviewNodeOffsetFromClient","offsetFromDragPreview","offsetWidth","offsetHeight","anchorX","anchorY","_getDragPreviewSize","calculateYOffset","interpolantY","interpolate","calculateXOffset","interpolantX","offsetX","offsetY","isManualOffsetX","isManualOffsetY"],"sources":["C:/Users/Lenovo/Desktop/New folder (2)/strikingDash/node_modules/react-dnd-html5-backend/dist/esm/OffsetUtils.js"],"sourcesContent":["import { isSafari, isFirefox } from './BrowserDetector';\nimport MonotonicInterpolant from './MonotonicInterpolant';\nvar ELEMENT_NODE = 1;\nexport function getNodeClientOffset(node) {\n  var el = node.nodeType === ELEMENT_NODE ? node : node.parentElement;\n\n  if (!el) {\n    return null;\n  }\n\n  var _el$getBoundingClient = el.getBoundingClientRect(),\n      top = _el$getBoundingClient.top,\n      left = _el$getBoundingClient.left;\n\n  return {\n    x: left,\n    y: top\n  };\n}\nexport function getEventClientOffset(e) {\n  return {\n    x: e.clientX,\n    y: e.clientY\n  };\n}\n\nfunction isImageNode(node) {\n  return node.nodeName === 'IMG' && (isFirefox() || !document.documentElement.contains(node));\n}\n\nfunction getDragPreviewSize(isImage, dragPreview, sourceWidth, sourceHeight) {\n  var dragPreviewWidth = isImage ? dragPreview.width : sourceWidth;\n  var dragPreviewHeight = isImage ? dragPreview.height : sourceHeight; // Work around @2x coordinate discrepancies in browsers\n\n  if (isSafari() && isImage) {\n    dragPreviewHeight /= window.devicePixelRatio;\n    dragPreviewWidth /= window.devicePixelRatio;\n  }\n\n  return {\n    dragPreviewWidth: dragPreviewWidth,\n    dragPreviewHeight: dragPreviewHeight\n  };\n}\n\nexport function getDragPreviewOffset(sourceNode, dragPreview, clientOffset, anchorPoint, offsetPoint) {\n  // The browsers will use the image intrinsic size under different conditions.\n  // Firefox only cares if it's an image, but WebKit also wants it to be detached.\n  var isImage = isImageNode(dragPreview);\n  var dragPreviewNode = isImage ? sourceNode : dragPreview;\n  var dragPreviewNodeOffsetFromClient = getNodeClientOffset(dragPreviewNode);\n  var offsetFromDragPreview = {\n    x: clientOffset.x - dragPreviewNodeOffsetFromClient.x,\n    y: clientOffset.y - dragPreviewNodeOffsetFromClient.y\n  };\n  var sourceWidth = sourceNode.offsetWidth,\n      sourceHeight = sourceNode.offsetHeight;\n  var anchorX = anchorPoint.anchorX,\n      anchorY = anchorPoint.anchorY;\n\n  var _getDragPreviewSize = getDragPreviewSize(isImage, dragPreview, sourceWidth, sourceHeight),\n      dragPreviewWidth = _getDragPreviewSize.dragPreviewWidth,\n      dragPreviewHeight = _getDragPreviewSize.dragPreviewHeight;\n\n  var calculateYOffset = function calculateYOffset() {\n    var interpolantY = new MonotonicInterpolant([0, 0.5, 1], [// Dock to the top\n    offsetFromDragPreview.y, // Align at the center\n    offsetFromDragPreview.y / sourceHeight * dragPreviewHeight, // Dock to the bottom\n    offsetFromDragPreview.y + dragPreviewHeight - sourceHeight]);\n    var y = interpolantY.interpolate(anchorY); // Work around Safari 8 positioning bug\n\n    if (isSafari() && isImage) {\n      // We'll have to wait for @3x to see if this is entirely correct\n      y += (window.devicePixelRatio - 1) * dragPreviewHeight;\n    }\n\n    return y;\n  };\n\n  var calculateXOffset = function calculateXOffset() {\n    // Interpolate coordinates depending on anchor point\n    // If you know a simpler way to do this, let me know\n    var interpolantX = new MonotonicInterpolant([0, 0.5, 1], [// Dock to the left\n    offsetFromDragPreview.x, // Align at the center\n    offsetFromDragPreview.x / sourceWidth * dragPreviewWidth, // Dock to the right\n    offsetFromDragPreview.x + dragPreviewWidth - sourceWidth]);\n    return interpolantX.interpolate(anchorX);\n  }; // Force offsets if specified in the options.\n\n\n  var offsetX = offsetPoint.offsetX,\n      offsetY = offsetPoint.offsetY;\n  var isManualOffsetX = offsetX === 0 || offsetX;\n  var isManualOffsetY = offsetY === 0 || offsetY;\n  return {\n    x: isManualOffsetX ? offsetX : calculateXOffset(),\n    y: isManualOffsetY ? offsetY : calculateYOffset()\n  };\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}
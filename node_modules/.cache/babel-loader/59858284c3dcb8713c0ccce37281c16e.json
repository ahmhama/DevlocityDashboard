{"ast":null,"code":"'use strict';\n\nclass Hoopy extends Array {\n  constructor(size) {\n    let index, isIndexOverflowed;\n\n    if (!isPositiveInteger(size)) {\n      throw new TypeError('Argument `size` must be a positive integer.');\n    }\n\n    super(size);\n\n    this.grow = by => {\n      if (!isPositiveInteger(by)) {\n        throw new TypeError('Argument `by` must be a positive integer.');\n      }\n\n      let i;\n      const newSize = size + by;\n\n      for (i = size; i < newSize; ++i) {\n        this[i] = undefined;\n      }\n\n      if (isIndexOverflowed) {\n        for (i = 0; i <= index; ++i) {\n          let j = size + i;\n\n          if (j >= newSize) {\n            j %= newSize;\n          }\n\n          this[j] = this[i];\n          this[i] = undefined;\n        }\n      }\n\n      size = newSize;\n    };\n\n    return new Proxy(this, {\n      get(target, key) {\n        if (isInteger(key)) {\n          return target[getIndex(key, size)];\n        }\n\n        return target[key];\n      },\n\n      set(target, key, value) {\n        if (isInteger(key)) {\n          index = getIndex(key, size);\n          target[index] = value;\n\n          if (Math.abs(key) >= size) {\n            isIndexOverflowed = true;\n          } else {\n            isIndexOverflowed = false;\n          }\n        } else {\n          target[key] = value;\n        }\n\n        return true;\n      }\n\n    });\n  }\n\n}\n\nfunction isPositiveInteger(thing) {\n  return isInteger(thing) && thing > 0;\n}\n\nfunction isInteger(thing) {\n  try {\n    return +thing % 1 === 0;\n  } catch (error) {// Coercing symbols to numbers throws an error\n  }\n\n  return false;\n}\n\nfunction getIndex(key, size) {\n  if (key === 0) {\n    return 0;\n  }\n\n  if (key < 0) {\n    return (size - Math.abs(key)) % size;\n  }\n\n  return key % size;\n}\n\nfunction nop() {\n  throw new Error('Not implemented');\n}\n\nHoopy.prototype.push = nop;\nHoopy.prototype.pop = nop;\nHoopy.prototype.shift = nop;\nHoopy.prototype.unshift = nop;\nmodule.exports = Hoopy;","map":{"version":3,"names":["Hoopy","Array","constructor","size","index","isIndexOverflowed","isPositiveInteger","TypeError","grow","by","i","newSize","undefined","j","Proxy","get","target","key","isInteger","getIndex","set","value","Math","abs","thing","error","nop","Error","prototype","push","pop","shift","unshift","module","exports"],"sources":["C:/Users/Lenovo/Desktop/New folder (2)/strikingDash/node_modules/hoopy/index.js"],"sourcesContent":["'use strict'\n\nclass Hoopy extends Array {\n  constructor (size) {\n    let index, isIndexOverflowed\n\n    if (! isPositiveInteger(size)) {\n      throw new TypeError('Argument `size` must be a positive integer.')\n    }\n\n    super(size)\n\n    this.grow = by => {\n      if (! isPositiveInteger(by)) {\n        throw new TypeError('Argument `by` must be a positive integer.')\n      }\n\n      let i\n      const newSize = size + by\n\n      for (i = size; i < newSize; ++i) {\n        this[i] = undefined\n      }\n\n      if (isIndexOverflowed) {\n        for (i = 0; i <= index; ++i) {\n          let j = size + i\n          if (j >= newSize) {\n            j %= newSize\n          }\n          this[j] = this[i]\n          this[i] = undefined\n        }\n      }\n\n      size = newSize\n    }\n\n    return new Proxy(this, {\n      get (target, key) {\n        if (isInteger(key)) {\n          return target[getIndex(key, size)]\n        }\n\n        return target[key]\n      },\n\n      set (target, key, value) {\n        if (isInteger(key)) {\n          index = getIndex(key, size)\n          target[index] = value\n\n          if (Math.abs(key) >= size) {\n            isIndexOverflowed = true\n          } else {\n            isIndexOverflowed = false\n          }\n        } else {\n          target[key] = value\n        }\n        return true\n      }\n    })\n  }\n}\n\nfunction isPositiveInteger (thing) {\n  return isInteger(thing) && thing > 0\n}\n\nfunction isInteger (thing) {\n  try {\n    return +thing % 1 === 0\n  } catch (error) {\n    // Coercing symbols to numbers throws an error\n  }\n\n  return false\n}\n\nfunction getIndex (key, size) {\n  if (key === 0) {\n    return 0\n  }\n\n  if (key < 0) {\n    return (size - Math.abs(key)) % size\n  }\n\n  return key % size\n}\n\nfunction nop () {\n  throw new Error('Not implemented')\n}\n\nHoopy.prototype.push = nop\nHoopy.prototype.pop = nop\nHoopy.prototype.shift = nop\nHoopy.prototype.unshift = nop\n\nmodule.exports = Hoopy\n\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}
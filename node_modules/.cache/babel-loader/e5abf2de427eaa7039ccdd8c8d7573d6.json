{"ast":null,"code":"const path = require('path');\n\nconst {\n  getOptions\n} = require('loader-utils');\n\nconst validateOptions = require('schema-utils');\n\nconst postcss = require('postcss');\n\nconst postcssrc = require('postcss-load-config');\n\nconst Warning = require('./Warning.js');\n\nconst SyntaxError = require('./Error.js');\n\nconst parseOptions = require('./options.js');\n/**\n * **PostCSS Loader**\n *\n * Loads && processes CSS with [PostCSS](https://github.com/postcss/postcss)\n *\n * @method loader\n *\n * @param {String} css Source\n * @param {Object} map Source Map\n *\n * @return {cb} cb Result\n */\n\n\nfunction loader(css, map, meta) {\n  const options = Object.assign({}, getOptions(this));\n  validateOptions(require('./options.json'), options, 'PostCSS Loader');\n  const cb = this.async();\n  const file = this.resourcePath;\n  const sourceMap = options.sourceMap;\n  Promise.resolve().then(() => {\n    const length = Object.keys(options).filter(option => {\n      switch (option) {\n        // case 'exec':\n        case 'ident':\n        case 'config':\n        case 'sourceMap':\n          return;\n\n        default:\n          return option;\n      }\n    }).length;\n\n    if (length) {\n      return parseOptions.call(this, options);\n    }\n\n    const rc = {\n      path: path.dirname(file),\n      ctx: {\n        file: {\n          extname: path.extname(file),\n          dirname: path.dirname(file),\n          basename: path.basename(file)\n        },\n        options: {}\n      }\n    };\n\n    if (options.config) {\n      if (options.config.path) {\n        rc.path = path.resolve(options.config.path);\n      }\n\n      if (options.config.ctx) {\n        rc.ctx.options = options.config.ctx;\n      }\n    }\n\n    rc.ctx.webpack = this;\n    return postcssrc(rc.ctx, rc.path);\n  }).then(config => {\n    if (!config) {\n      config = {};\n    }\n\n    if (config.file) {\n      this.addDependency(config.file);\n    } // Disable override `to` option from `postcss.config.js`\n\n\n    if (config.options.to) {\n      delete config.options.to;\n    } // Disable override `from` option from `postcss.config.js`\n\n\n    if (config.options.from) {\n      delete config.options.from;\n    }\n\n    let plugins = config.plugins || [];\n    let options = Object.assign({\n      from: file,\n      map: sourceMap ? sourceMap === 'inline' ? {\n        inline: true,\n        annotation: false\n      } : {\n        inline: false,\n        annotation: false\n      } : false\n    }, config.options); // Loader Exec (Deprecated)\n    // https://webpack.js.org/api/loaders/#deprecated-context-properties\n\n    if (options.parser === 'postcss-js') {\n      css = this.exec(css, this.resource);\n    }\n\n    if (typeof options.parser === 'string') {\n      options.parser = require(options.parser);\n    }\n\n    if (typeof options.syntax === 'string') {\n      options.syntax = require(options.syntax);\n    }\n\n    if (typeof options.stringifier === 'string') {\n      options.stringifier = require(options.stringifier);\n    } // Loader API Exec (Deprecated)\n    // https://webpack.js.org/api/loaders/#deprecated-context-properties\n\n\n    if (config.exec) {\n      css = this.exec(css, this.resource);\n    }\n\n    if (sourceMap && typeof map === 'string') {\n      map = JSON.parse(map);\n    }\n\n    if (sourceMap && map) {\n      options.map.prev = map;\n    }\n\n    return postcss(plugins).process(css, options).then(result => {\n      let {\n        css,\n        map,\n        root,\n        processor,\n        messages\n      } = result;\n      result.warnings().forEach(warning => {\n        this.emitWarning(new Warning(warning));\n      });\n      messages.forEach(msg => {\n        if (msg.type === 'dependency') {\n          this.addDependency(msg.file);\n        }\n      });\n      map = map ? map.toJSON() : null;\n\n      if (map) {\n        map.file = path.resolve(map.file);\n        map.sources = map.sources.map(src => path.resolve(src));\n      }\n\n      if (!meta) {\n        meta = {};\n      }\n\n      const ast = {\n        type: 'postcss',\n        version: processor.version,\n        root\n      };\n      meta.ast = ast;\n      meta.messages = messages;\n\n      if (this.loaderIndex === 0) {\n        /**\n         * @memberof loader\n         * @callback cb\n         *\n         * @param {Object} null Error\n         * @param {String} css  Result (JS Module)\n         * @param {Object} map  Source Map\n         */\n        cb(null, `module.exports = ${JSON.stringify(css)}`, map);\n        return null;\n      }\n      /**\n       * @memberof loader\n       * @callback cb\n       *\n       * @param {Object} null Error\n       * @param {String} css  Result (Raw Module)\n       * @param {Object} map  Source Map\n       */\n\n\n      cb(null, css, map, meta);\n      return null;\n    });\n  }).catch(err => {\n    if (err.file) {\n      this.addDependency(err.file);\n    }\n\n    return err.name === 'CssSyntaxError' ? cb(new SyntaxError(err)) : cb(err);\n  });\n}\n/**\n * @author Andrey Sitnik (@ai) <andrey@sitnik.ru>\n *\n * @license MIT\n * @version 3.0.0\n *\n * @module postcss-loader\n *\n * @requires path\n *\n * @requires loader-utils\n * @requires schema-utils\n *\n * @requires postcss\n * @requires postcss-load-config\n *\n * @requires ./options.js\n * @requires ./Warning.js\n * @requires ./SyntaxError.js\n */\n\n\nmodule.exports = loader;","map":{"version":3,"names":["path","require","getOptions","validateOptions","postcss","postcssrc","Warning","SyntaxError","parseOptions","loader","css","map","meta","options","Object","assign","cb","async","file","resourcePath","sourceMap","Promise","resolve","then","length","keys","filter","option","call","rc","dirname","ctx","extname","basename","config","webpack","addDependency","to","from","plugins","inline","annotation","parser","exec","resource","syntax","stringifier","JSON","parse","prev","process","result","root","processor","messages","warnings","forEach","warning","emitWarning","msg","type","toJSON","sources","src","ast","version","loaderIndex","stringify","catch","err","name","module","exports"],"sources":["C:/Users/Lenovo/Desktop/New folder (2)/strikingDash/node_modules/postcss-loader/src/index.js"],"sourcesContent":["const path = require('path')\n\nconst { getOptions } = require('loader-utils')\nconst validateOptions = require('schema-utils')\n\nconst postcss = require('postcss')\nconst postcssrc = require('postcss-load-config')\n\nconst Warning = require('./Warning.js')\nconst SyntaxError = require('./Error.js')\nconst parseOptions = require('./options.js')\n\n/**\n * **PostCSS Loader**\n *\n * Loads && processes CSS with [PostCSS](https://github.com/postcss/postcss)\n *\n * @method loader\n *\n * @param {String} css Source\n * @param {Object} map Source Map\n *\n * @return {cb} cb Result\n */\nfunction loader (css, map, meta) {\n  const options = Object.assign({}, getOptions(this))\n\n  validateOptions(require('./options.json'), options, 'PostCSS Loader')\n\n  const cb = this.async()\n  const file = this.resourcePath\n\n  const sourceMap = options.sourceMap\n\n  Promise.resolve().then(() => {\n    const length = Object.keys(options)\n      .filter((option) => {\n        switch (option) {\n          // case 'exec':\n          case 'ident':\n          case 'config':\n          case 'sourceMap':\n            return\n          default:\n            return option\n        }\n      })\n      .length\n\n    if (length) {\n      return parseOptions.call(this, options)\n    }\n\n    const rc = {\n      path: path.dirname(file),\n      ctx: {\n        file: {\n          extname: path.extname(file),\n          dirname: path.dirname(file),\n          basename: path.basename(file)\n        },\n        options: {}\n      }\n    }\n\n    if (options.config) {\n      if (options.config.path) {\n        rc.path = path.resolve(options.config.path)\n      }\n\n      if (options.config.ctx) {\n        rc.ctx.options = options.config.ctx\n      }\n    }\n\n    rc.ctx.webpack = this\n\n    return postcssrc(rc.ctx, rc.path)\n  }).then((config) => {\n    if (!config) {\n      config = {}\n    }\n\n    if (config.file) {\n      this.addDependency(config.file)\n    }\n\n    // Disable override `to` option from `postcss.config.js`\n    if (config.options.to) {\n      delete config.options.to\n    }\n    // Disable override `from` option from `postcss.config.js`\n    if (config.options.from) {\n      delete config.options.from\n    }\n\n    let plugins = config.plugins || []\n\n    let options = Object.assign({\n      from: file,\n      map: sourceMap\n        ? sourceMap === 'inline'\n          ? { inline: true, annotation: false }\n          : { inline: false, annotation: false }\n        : false\n    }, config.options)\n\n    // Loader Exec (Deprecated)\n    // https://webpack.js.org/api/loaders/#deprecated-context-properties\n    if (options.parser === 'postcss-js') {\n      css = this.exec(css, this.resource)\n    }\n\n    if (typeof options.parser === 'string') {\n      options.parser = require(options.parser)\n    }\n\n    if (typeof options.syntax === 'string') {\n      options.syntax = require(options.syntax)\n    }\n\n    if (typeof options.stringifier === 'string') {\n      options.stringifier = require(options.stringifier)\n    }\n\n    // Loader API Exec (Deprecated)\n    // https://webpack.js.org/api/loaders/#deprecated-context-properties\n    if (config.exec) {\n      css = this.exec(css, this.resource)\n    }\n\n    if (sourceMap && typeof map === 'string') {\n      map = JSON.parse(map)\n    }\n\n    if (sourceMap && map) {\n      options.map.prev = map\n    }\n\n    return postcss(plugins)\n      .process(css, options)\n      .then((result) => {\n        let { css, map, root, processor, messages } = result\n\n        result.warnings().forEach((warning) => {\n          this.emitWarning(new Warning(warning))\n        })\n\n        messages.forEach((msg) => {\n          if (msg.type === 'dependency') {\n            this.addDependency(msg.file)\n          }\n        })\n\n        map = map ? map.toJSON() : null\n\n        if (map) {\n          map.file = path.resolve(map.file)\n          map.sources = map.sources.map((src) => path.resolve(src))\n        }\n\n        if (!meta) {\n          meta = {}\n        }\n\n        const ast = {\n          type: 'postcss',\n          version: processor.version,\n          root\n        }\n\n        meta.ast = ast\n        meta.messages = messages\n\n        if (this.loaderIndex === 0) {\n          /**\n           * @memberof loader\n           * @callback cb\n           *\n           * @param {Object} null Error\n           * @param {String} css  Result (JS Module)\n           * @param {Object} map  Source Map\n           */\n          cb(null, `module.exports = ${JSON.stringify(css)}`, map)\n\n          return null\n        }\n\n        /**\n         * @memberof loader\n         * @callback cb\n         *\n         * @param {Object} null Error\n         * @param {String} css  Result (Raw Module)\n         * @param {Object} map  Source Map\n         */\n        cb(null, css, map, meta)\n\n        return null\n      })\n  }).catch((err) => {\n    if (err.file) {\n      this.addDependency(err.file)\n    }\n\n    return err.name === 'CssSyntaxError'\n      ? cb(new SyntaxError(err))\n      : cb(err)\n  })\n}\n\n/**\n * @author Andrey Sitnik (@ai) <andrey@sitnik.ru>\n *\n * @license MIT\n * @version 3.0.0\n *\n * @module postcss-loader\n *\n * @requires path\n *\n * @requires loader-utils\n * @requires schema-utils\n *\n * @requires postcss\n * @requires postcss-load-config\n *\n * @requires ./options.js\n * @requires ./Warning.js\n * @requires ./SyntaxError.js\n */\nmodule.exports = loader\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}
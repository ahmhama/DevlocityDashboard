{"ast":null,"code":"'use strict';\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\n/**\n * The CSSCore module specifies the API (and implements most of the methods)\n * that should be used when dealing with the display of elements (via their\n * CSS classes and visibility on screen. It is an API focused on mutating the\n * display and not reading it as no logical state should be encoded in the\n * display of elements.\n */\n\nvar CSSCore = {\n  /**\n   * Adds the class passed in to the element if it doesn't already have it.\n   *\n   * @param {DOMElement} element the element to set the class on\n   * @param {string} className the CSS className\n   * @return {DOMElement} the element passed in\n   */\n  addClass: function addClass(element, className) {\n    if (className) {\n      if (element.classList) {\n        element.classList.add(className);\n      } else if (!CSSCore.hasClass(element, className)) {\n        element.className = element.className + ' ' + className;\n      }\n    }\n\n    return element;\n  },\n\n  /**\n   * Removes the class passed in from the element\n   *\n   * @param {DOMElement} element the element to set the class on\n   * @param {string} className the CSS className\n   * @return {DOMElement} the element passed in\n   */\n  removeClass: function removeClass(element, className) {\n    if (className) {\n      if (element.classList) {\n        element.classList.remove(className);\n      } else if (CSSCore.hasClass(element, className)) {\n        element.className = element.className.replace(new RegExp('(^|\\\\s)' + className + '(?:\\\\s|$)', 'g'), '$1').replace(/\\s+/g, ' ') // multiple spaces to one\n        .replace(/^\\s*|\\s*$/g, ''); // trim the ends\n      }\n    }\n\n    return element;\n  },\n\n  /**\n   * Tests whether the element has the class specified.\n   *\n   * @param {DOMNode|DOMWindow} element the element to check the class on\n   * @param {string} className the CSS className\n   * @return {boolean} true if the element has the class, false if not\n   */\n  hasClass: function hasClass(element, className) {\n    if (element.classList) {\n      return !!className && element.classList.contains(className);\n    }\n\n    return (' ' + element.className + ' ').indexOf(' ' + className + ' ') > -1;\n  }\n};\nmodule.exports = CSSCore;","map":{"version":3,"names":["CSSCore","addClass","element","className","classList","add","hasClass","removeClass","remove","replace","RegExp","contains","indexOf","module","exports"],"sources":["C:/Users/Lenovo/Desktop/New folder (2)/strikingDash/node_modules/auth0-lock/lib/CSSCore.js"],"sourcesContent":["'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\n/**\n * The CSSCore module specifies the API (and implements most of the methods)\n * that should be used when dealing with the display of elements (via their\n * CSS classes and visibility on screen. It is an API focused on mutating the\n * display and not reading it as no logical state should be encoded in the\n * display of elements.\n */\n\nvar CSSCore = {\n  /**\n   * Adds the class passed in to the element if it doesn't already have it.\n   *\n   * @param {DOMElement} element the element to set the class on\n   * @param {string} className the CSS className\n   * @return {DOMElement} the element passed in\n   */\n  addClass: function addClass(element, className) {\n    if (className) {\n      if (element.classList) {\n        element.classList.add(className);\n      } else if (!CSSCore.hasClass(element, className)) {\n        element.className = element.className + ' ' + className;\n      }\n    }\n    return element;\n  },\n\n  /**\n   * Removes the class passed in from the element\n   *\n   * @param {DOMElement} element the element to set the class on\n   * @param {string} className the CSS className\n   * @return {DOMElement} the element passed in\n   */\n  removeClass: function removeClass(element, className) {\n    if (className) {\n      if (element.classList) {\n        element.classList.remove(className);\n      } else if (CSSCore.hasClass(element, className)) {\n        element.className = element.className.replace(new RegExp('(^|\\\\s)' + className + '(?:\\\\s|$)', 'g'), '$1').replace(/\\s+/g, ' ') // multiple spaces to one\n        .replace(/^\\s*|\\s*$/g, ''); // trim the ends\n      }\n    }\n    return element;\n  },\n\n  /**\n   * Tests whether the element has the class specified.\n   *\n   * @param {DOMNode|DOMWindow} element the element to check the class on\n   * @param {string} className the CSS className\n   * @return {boolean} true if the element has the class, false if not\n   */\n  hasClass: function hasClass(element, className) {\n    if (element.classList) {\n      return !!className && element.classList.contains(className);\n    }\n    return (' ' + element.className + ' ').indexOf(' ' + className + ' ') > -1;\n  }\n};\n\nmodule.exports = CSSCore;\n"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIA,OAAO,GAAG;EACZ;AACF;AACA;AACA;AACA;AACA;AACA;EACEC,QAAQ,EAAE,SAASA,QAAT,CAAkBC,OAAlB,EAA2BC,SAA3B,EAAsC;IAC9C,IAAIA,SAAJ,EAAe;MACb,IAAID,OAAO,CAACE,SAAZ,EAAuB;QACrBF,OAAO,CAACE,SAAR,CAAkBC,GAAlB,CAAsBF,SAAtB;MACD,CAFD,MAEO,IAAI,CAACH,OAAO,CAACM,QAAR,CAAiBJ,OAAjB,EAA0BC,SAA1B,CAAL,EAA2C;QAChDD,OAAO,CAACC,SAAR,GAAoBD,OAAO,CAACC,SAAR,GAAoB,GAApB,GAA0BA,SAA9C;MACD;IACF;;IACD,OAAOD,OAAP;EACD,CAjBW;;EAmBZ;AACF;AACA;AACA;AACA;AACA;AACA;EACEK,WAAW,EAAE,SAASA,WAAT,CAAqBL,OAArB,EAA8BC,SAA9B,EAAyC;IACpD,IAAIA,SAAJ,EAAe;MACb,IAAID,OAAO,CAACE,SAAZ,EAAuB;QACrBF,OAAO,CAACE,SAAR,CAAkBI,MAAlB,CAAyBL,SAAzB;MACD,CAFD,MAEO,IAAIH,OAAO,CAACM,QAAR,CAAiBJ,OAAjB,EAA0BC,SAA1B,CAAJ,EAA0C;QAC/CD,OAAO,CAACC,SAAR,GAAoBD,OAAO,CAACC,SAAR,CAAkBM,OAAlB,CAA0B,IAAIC,MAAJ,CAAW,YAAYP,SAAZ,GAAwB,WAAnC,EAAgD,GAAhD,CAA1B,EAAgF,IAAhF,EAAsFM,OAAtF,CAA8F,MAA9F,EAAsG,GAAtG,EAA2G;QAA3G,CACnBA,OADmB,CACX,YADW,EACG,EADH,CAApB,CAD+C,CAEnB;MAC7B;IACF;;IACD,OAAOP,OAAP;EACD,CApCW;;EAsCZ;AACF;AACA;AACA;AACA;AACA;AACA;EACEI,QAAQ,EAAE,SAASA,QAAT,CAAkBJ,OAAlB,EAA2BC,SAA3B,EAAsC;IAC9C,IAAID,OAAO,CAACE,SAAZ,EAAuB;MACrB,OAAO,CAAC,CAACD,SAAF,IAAeD,OAAO,CAACE,SAAR,CAAkBO,QAAlB,CAA2BR,SAA3B,CAAtB;IACD;;IACD,OAAO,CAAC,MAAMD,OAAO,CAACC,SAAd,GAA0B,GAA3B,EAAgCS,OAAhC,CAAwC,MAAMT,SAAN,GAAkB,GAA1D,IAAiE,CAAC,CAAzE;EACD;AAlDW,CAAd;AAqDAU,MAAM,CAACC,OAAP,GAAiBd,OAAjB"},"metadata":{},"sourceType":"script"}
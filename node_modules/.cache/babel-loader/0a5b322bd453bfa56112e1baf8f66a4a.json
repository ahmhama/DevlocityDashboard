{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n}; // TODO: this module should depend from social stuff\n\n\nexports.hasFreeSubscription = hasFreeSubscription;\nexports.connection = connection;\nexports.initClient = initClient;\nexports.clientConnections = clientConnections;\n\nvar _immutable = require('immutable');\n\nvar _immutable2 = _interopRequireDefault(_immutable);\n\nvar _auth0PasswordPolicies = require('auth0-password-policies');\n\nvar _auth0PasswordPolicies2 = _interopRequireDefault(_auth0PasswordPolicies);\n\nvar _data_utils = require('../../utils/data_utils');\n\nvar _index = require('../../connection/social/index');\n\nvar _enterprise = require('../../connection/enterprise');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar _dataFns = (0, _data_utils.dataFns)(['client']),\n    initNS = _dataFns.initNS,\n    get = _dataFns.get;\n\nvar DEFAULT_CONNECTION_VALIDATION = {\n  username: {\n    min: 1,\n    max: 15\n  }\n};\n\nfunction hasFreeSubscription(m) {\n  return ['free', 'dev'].indexOf(get(m, ['tenant', 'subscription'])) > -1;\n}\n\nfunction connection(m, strategyName, name) {\n  // TODO: this function should take a client, not a map with a client\n  // key.\n  var connections = strategy(m, strategyName).get('connections', (0, _immutable.List)());\n  return connections.find(withName(name)) || (0, _immutable.Map)();\n}\n\nfunction strategy(m, name) {\n  // TODO: this function should take a client, not a map with a client\n  // key.\n  return m.getIn(['client', 'strategies'], (0, _immutable.List)()).find(withName(name)) || (0, _immutable.Map)();\n}\n\nfunction withName(name) {\n  return function (x) {\n    return x.get('name') === name;\n  };\n}\n\nfunction strategyNameToConnectionType(str) {\n  if (str === 'auth0') {\n    return 'database';\n  } else if (str === 'email' || str === 'sms') {\n    return 'passwordless';\n  } else if (_index.STRATEGIES[str]) {\n    return 'social';\n  } else if (_enterprise.STRATEGIES[str]) {\n    return 'enterprise';\n  } else if (['oauth1', 'oauth2'].indexOf(str) !== -1) {\n    return 'social';\n  } else {\n    return 'unknown';\n  }\n}\n\nfunction formatConnectionValidation() {\n  var connectionValidation = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  if (connectionValidation.username == null) {\n    return null;\n  }\n\n  var validation = _extends({}, DEFAULT_CONNECTION_VALIDATION, connectionValidation);\n\n  var defaultMin = DEFAULT_CONNECTION_VALIDATION.username.min;\n  var defaultMax = DEFAULT_CONNECTION_VALIDATION.username.max;\n  validation.username.min = parseInt(validation.username.min, 10) || defaultMin;\n  validation.username.max = parseInt(validation.username.max, 10) || defaultMax;\n\n  if (validation.username.min > validation.username.max) {\n    validation.username.min = defaultMin;\n    validation.username.max = defaultMax;\n  }\n\n  return validation;\n}\n\nvar emptyConnections = _immutable2.default.fromJS({\n  database: [],\n  enterprise: [],\n  passwordless: [],\n  social: [],\n  unknown: [] // TODO: should be oauth2\n\n});\n\nfunction initClient(m, client) {\n  return initNS(m, formatClient(client));\n}\n\nfunction formatClient(o) {\n  return new _immutable2.default.fromJS({\n    id: o.id,\n    tenant: {\n      name: o.tenant,\n      subscription: o.subscription\n    },\n    connections: formatClientConnections(o)\n  });\n}\n\nfunction formatClientConnections(o) {\n  var result = emptyConnections.toJS();\n\n  var _loop = function _loop() {\n    var _result$connectionTyp;\n\n    var strategy = o.strategies[i];\n    var connectionType = strategyNameToConnectionType(strategy.name);\n    var connections = strategy.connections.map(function (connection) {\n      return formatClientConnection(connectionType, strategy.name, connection);\n    });\n\n    (_result$connectionTyp = result[connectionType]).push.apply(_result$connectionTyp, connections);\n  };\n\n  for (var i = 0; i < (o.strategies || []).length; i++) {\n    _loop();\n  }\n\n  return result;\n}\n\nfunction formatClientConnection(connectionType, strategyName, connection) {\n  var result = {\n    name: connection.name,\n    strategy: strategyName,\n    type: connectionType,\n    displayName: connection.display_name\n  };\n\n  if (connectionType === 'database') {\n    result.passwordPolicy = _auth0PasswordPolicies2.default[connection.passwordPolicy || 'none'];\n\n    if (connection.password_complexity_options && connection.password_complexity_options.min_length) {\n      result.passwordPolicy.length.minLength = connection.password_complexity_options.min_length;\n    }\n\n    result.allowSignup = typeof connection.showSignup === 'boolean' ? connection.showSignup : true;\n    result.allowForgot = typeof connection.showForgot === 'boolean' ? connection.showForgot : true;\n    result.requireUsername = typeof connection.requires_username === 'boolean' ? connection.requires_username : false;\n    result.validation = formatConnectionValidation(connection.validation);\n  }\n\n  if (connectionType === 'enterprise') {\n    var domains = connection.domain_aliases || [];\n\n    if (connection.domain) {\n      domains.unshift(connection.domain);\n    }\n\n    result.domains = domains;\n  }\n\n  return result;\n}\n\nfunction clientConnections(m) {\n  return get(m, 'connections', emptyConnections);\n}","map":{"version":3,"names":["exports","__esModule","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","hasFreeSubscription","connection","initClient","clientConnections","_immutable","require","_immutable2","_interopRequireDefault","_auth0PasswordPolicies","_auth0PasswordPolicies2","_data_utils","_index","_enterprise","obj","default","_dataFns","dataFns","initNS","get","DEFAULT_CONNECTION_VALIDATION","username","min","max","m","indexOf","strategyName","name","connections","strategy","List","find","withName","Map","getIn","x","strategyNameToConnectionType","str","STRATEGIES","formatConnectionValidation","connectionValidation","undefined","validation","defaultMin","defaultMax","parseInt","emptyConnections","fromJS","database","enterprise","passwordless","social","unknown","client","formatClient","o","id","tenant","subscription","formatClientConnections","result","toJS","_loop","_result$connectionTyp","strategies","connectionType","map","formatClientConnection","push","apply","type","displayName","display_name","passwordPolicy","password_complexity_options","min_length","minLength","allowSignup","showSignup","allowForgot","showForgot","requireUsername","requires_username","domains","domain_aliases","domain","unshift"],"sources":["C:/Users/Lenovo/Desktop/New folder (2)/strikingDash/node_modules/auth0-lock/lib/core/client/index.js"],"sourcesContent":["'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n// TODO: this module should depend from social stuff\n\n\nexports.hasFreeSubscription = hasFreeSubscription;\nexports.connection = connection;\nexports.initClient = initClient;\nexports.clientConnections = clientConnections;\n\nvar _immutable = require('immutable');\n\nvar _immutable2 = _interopRequireDefault(_immutable);\n\nvar _auth0PasswordPolicies = require('auth0-password-policies');\n\nvar _auth0PasswordPolicies2 = _interopRequireDefault(_auth0PasswordPolicies);\n\nvar _data_utils = require('../../utils/data_utils');\n\nvar _index = require('../../connection/social/index');\n\nvar _enterprise = require('../../connection/enterprise');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _dataFns = (0, _data_utils.dataFns)(['client']),\n    initNS = _dataFns.initNS,\n    get = _dataFns.get;\n\nvar DEFAULT_CONNECTION_VALIDATION = { username: { min: 1, max: 15 } };\n\nfunction hasFreeSubscription(m) {\n  return ['free', 'dev'].indexOf(get(m, ['tenant', 'subscription'])) > -1;\n}\n\nfunction connection(m, strategyName, name) {\n  // TODO: this function should take a client, not a map with a client\n  // key.\n  var connections = strategy(m, strategyName).get('connections', (0, _immutable.List)());\n  return connections.find(withName(name)) || (0, _immutable.Map)();\n}\n\nfunction strategy(m, name) {\n  // TODO: this function should take a client, not a map with a client\n  // key.\n  return m.getIn(['client', 'strategies'], (0, _immutable.List)()).find(withName(name)) || (0, _immutable.Map)();\n}\n\nfunction withName(name) {\n  return function (x) {\n    return x.get('name') === name;\n  };\n}\n\nfunction strategyNameToConnectionType(str) {\n  if (str === 'auth0') {\n    return 'database';\n  } else if (str === 'email' || str === 'sms') {\n    return 'passwordless';\n  } else if (_index.STRATEGIES[str]) {\n    return 'social';\n  } else if (_enterprise.STRATEGIES[str]) {\n    return 'enterprise';\n  } else if (['oauth1', 'oauth2'].indexOf(str) !== -1) {\n    return 'social';\n  } else {\n    return 'unknown';\n  }\n}\n\nfunction formatConnectionValidation() {\n  var connectionValidation = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  if (connectionValidation.username == null) {\n    return null;\n  }\n\n  var validation = _extends({}, DEFAULT_CONNECTION_VALIDATION, connectionValidation);\n  var defaultMin = DEFAULT_CONNECTION_VALIDATION.username.min;\n  var defaultMax = DEFAULT_CONNECTION_VALIDATION.username.max;\n\n  validation.username.min = parseInt(validation.username.min, 10) || defaultMin;\n  validation.username.max = parseInt(validation.username.max, 10) || defaultMax;\n\n  if (validation.username.min > validation.username.max) {\n    validation.username.min = defaultMin;\n    validation.username.max = defaultMax;\n  }\n\n  return validation;\n}\n\nvar emptyConnections = _immutable2.default.fromJS({\n  database: [],\n  enterprise: [],\n  passwordless: [],\n  social: [],\n  unknown: [] // TODO: should be oauth2\n});\n\nfunction initClient(m, client) {\n  return initNS(m, formatClient(client));\n}\n\nfunction formatClient(o) {\n  return new _immutable2.default.fromJS({\n    id: o.id,\n    tenant: {\n      name: o.tenant,\n      subscription: o.subscription\n    },\n    connections: formatClientConnections(o)\n  });\n}\n\nfunction formatClientConnections(o) {\n  var result = emptyConnections.toJS();\n\n  var _loop = function _loop() {\n    var _result$connectionTyp;\n\n    var strategy = o.strategies[i];\n    var connectionType = strategyNameToConnectionType(strategy.name);\n\n    var connections = strategy.connections.map(function (connection) {\n      return formatClientConnection(connectionType, strategy.name, connection);\n    });\n    (_result$connectionTyp = result[connectionType]).push.apply(_result$connectionTyp, connections);\n  };\n\n  for (var i = 0; i < (o.strategies || []).length; i++) {\n    _loop();\n  }\n\n  return result;\n}\n\nfunction formatClientConnection(connectionType, strategyName, connection) {\n  var result = {\n    name: connection.name,\n    strategy: strategyName,\n    type: connectionType,\n    displayName: connection.display_name\n  };\n\n  if (connectionType === 'database') {\n    result.passwordPolicy = _auth0PasswordPolicies2.default[connection.passwordPolicy || 'none'];\n    if (connection.password_complexity_options && connection.password_complexity_options.min_length) {\n      result.passwordPolicy.length.minLength = connection.password_complexity_options.min_length;\n    }\n    result.allowSignup = typeof connection.showSignup === 'boolean' ? connection.showSignup : true;\n    result.allowForgot = typeof connection.showForgot === 'boolean' ? connection.showForgot : true;\n    result.requireUsername = typeof connection.requires_username === 'boolean' ? connection.requires_username : false;\n    result.validation = formatConnectionValidation(connection.validation);\n  }\n\n  if (connectionType === 'enterprise') {\n    var domains = connection.domain_aliases || [];\n    if (connection.domain) {\n      domains.unshift(connection.domain);\n    }\n    result.domains = domains;\n  }\n\n  return result;\n}\n\nfunction clientConnections(m) {\n  return get(m, 'connections', emptyConnections);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}
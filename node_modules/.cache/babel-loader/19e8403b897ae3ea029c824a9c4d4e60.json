{"ast":null,"code":"import \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nvar _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\New folder (2)\\\\strikingDash\\\\src\\\\container\\\\advertisement\\\\EditAdvertisement.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useParams } from 'react-router-dom/cjs/react-router-dom.min';\nimport { PageHeader } from '../../components/page-headers/page-headers';\nimport { Main } from '../styled';\n\nconst EditAdvertisement = () => {\n  const {\n    adsId\n  } = useParams();\n  console.log(adsId);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(PageHeader, {\n    ghost: true,\n    title: \"Edit Advertisement\",\n    buttons: [/*#__PURE__*/React.createElement(_Button, {\n      className: \"btn-add_new\",\n      size: \"default\",\n      type: \"primary\",\n      key: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/admin/listAdvertisement\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 25\n      }\n    }, \"List Advertisement\"))],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }));\n};\n\n__signature__(EditAdvertisement, \"useParams{{ adsId }}\", () => [useParams]);\n\nconst _default = EditAdvertisement;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(EditAdvertisement, \"EditAdvertisement\", \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\New folder (2)\\\\strikingDash\\\\src\\\\container\\\\advertisement\\\\EditAdvertisement.js\");\n  reactHotLoader.register(_default, \"default\", \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\New folder (2)\\\\strikingDash\\\\src\\\\container\\\\advertisement\\\\EditAdvertisement.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"names":["React","Link","useParams","PageHeader","Main","EditAdvertisement","adsId","console","log"],"sources":["C:/Users/Lenovo/Desktop/New folder (2)/strikingDash/src/container/advertisement/EditAdvertisement.js"],"sourcesContent":["/* eslint-disable prettier/prettier */\r\nimport { Button, Row, Col } from 'antd';\r\n\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useParams } from 'react-router-dom/cjs/react-router-dom.min';\r\n\r\nimport { PageHeader } from '../../components/page-headers/page-headers';\r\nimport { Main } from '../styled';\r\n\r\n\r\nconst EditAdvertisement = () => {\r\n    const { adsId } = useParams();\r\n    console.log(adsId);\r\n    return (\r\n        <>\r\n            <PageHeader\r\n                ghost\r\n                title=\"Edit Advertisement\"\r\n                buttons={[\r\n                    <Button className=\"btn-add_new\" size=\"default\" type=\"primary\" key=\"1\">\r\n                        <Link to=\"/admin/listAdvertisement\">List Advertisement</Link>\r\n                    </Button>\r\n                ]} />\r\n            {/* \r\n            <Main>\r\n                <Row gutter={25}>\r\n                    <Col xs={24}>\r\n                        <FormValidationWrap>\r\n                            <VerticalFormStyleWrap>\r\n                                <Cards title=\"Custom Styles\">\r\n                                    <Form name=\"sDash_validation-form\" form={form} layout=\"vertical\" onFinish={getvalue}>\r\n                                        <Row gutter={30}>\r\n                                            <Col md={8} xs={24}>\r\n                                                <Form.Item name=\"typeSelect\" label=\"Ad Type\" rules={[{ required: true, message: 'Ad Type required!' }]}>\r\n                                                    <Select size=\"large\" className=\"sDash_fullwidth-select\" placeholder=\"Select Type\"\r\n                                                        onChange={(value) => {\r\n                                                            setClick(value);\r\n                                                        }}\r\n                                                    >\r\n                                                        <Option value=\"Date\" >Date</Option>\r\n                                                        <Option value=\"Impression\">Impression</Option>\r\n                                                        <Option value=\"Click\">Click</Option>\r\n                                                    </Select>\r\n                                                </Form.Item>\r\n                                            </Col>\r\n                                            <Col md={8} xs={24}>\r\n                                                <Form.Item name=\"viewMode\" label=\"View Mode\" rules={[{ required: true, message: 'View Mode required!' }]}>\r\n                                                    <Select size=\"large\" className=\"sDash_fullwidth-select\" placeholder=\"View Mode\">\r\n                                                        <Option value=\"Mobile\" >Mobile</Option>\r\n                                                        <Option value=\"Desktop\">Desktop</Option>\r\n                                                    </Select>\r\n                                                </Form.Item>\r\n                                            </Col>\r\n\r\n                                            <Col md={8} xs={24}>\r\n                                                <Form.Item\r\n                                                    name=\"title\"\r\n                                                    label=\"Title\"\r\n                                                    rules={[\r\n                                                        { required: true, message: 'First Name required!' },\r\n                                                        { min: 10, message: 'must be at least 10 characters!' }\r\n                                                    ]}\r\n                                                >\r\n                                                    <Input placeholder=\"Enter title\" />\r\n                                                </Form.Item>\r\n                                            </Col>\r\n                                            {click === \"Date\" &&\r\n                                                <>\r\n                                                    <Col md={8} xs={24}>\r\n                                                        <FormWrapperNoMargin>\r\n                                                            <HorizontalFormStyleWrap className=\"sDash_input-form\">\r\n                                                                <Form.Item name=\"startdate\"\r\n                                                                    label=\"Start Date\"\r\n                                                                    rules={[{ required: true, message: 'Start Date required!' }]}>\r\n                                                                    <DatePicker placeholder='Start Date' />\r\n                                                                </Form.Item>\r\n                                                            </HorizontalFormStyleWrap>\r\n                                                        </FormWrapperNoMargin>\r\n                                                    </Col>\r\n\r\n\r\n                                                    <Col md={8} xs={24}>\r\n                                                        <FormWrapperNoMargin>\r\n                                                            <HorizontalFormStyleWrap className=\"sDash_input-form\">\r\n                                                                <Form.Item name=\"enddate\"\r\n                                                                    label=\"End Date\"\r\n                                                                    rules={[{ required: true, message: 'End Date required!' }]}>\r\n                                                                    <DatePicker placeholder='End Date' />\r\n                                                                </Form.Item>\r\n                                                            </HorizontalFormStyleWrap>\r\n                                                        </FormWrapperNoMargin>\r\n                                                    </Col> </>}\r\n                                            {click === \"Impression\" &&\r\n                                                <Col md={8} xs={24}>\r\n                                                    <Form.Item\r\n                                                        name=\"impressionLimit\"\r\n                                                        label=\"Impression Limit\"\r\n                                                        rules={[\r\n                                                            { required: true, message: 'Impression Limit required!' },\r\n                                                            { pattern: /^[0-9]*$/, message: 'must be a number!' },\r\n                                                        ]}\r\n                                                    >\r\n                                                        <Input placeholder=\"Impression Limit\" />\r\n                                                    </Form.Item>\r\n                                                </Col>}\r\n\r\n                                            {click === \"Click\" && <Col md={8} xs={24}>\r\n                                                <Form.Item\r\n                                                    name=\"clickLimit\"\r\n                                                    label=\"Click Limit\"\r\n                                                    rules={[\r\n                                                        { required: true, message: 'click limit required!' },\r\n                                                        { pattern: /^[0-9]*$/, message: 'must be a number!' },\r\n                                                    ]}\r\n                                                >\r\n                                                    <Input placeholder=\"Enter Click Limit\" />\r\n                                                </Form.Item>\r\n                                            </Col>}\r\n\r\n\r\n\r\n                                            <Col md={8} xs={24}>\r\n                                                <Form.Item name=\"positionSelect\" label=\"Ad Position\" rules={[{ required: true, message: 'Ad Position required!' }]}>\r\n                                                    <Select size=\"large\" className=\"sDash_fullwidth-select\" placeholder=\"Select Position\" >\r\n                                                        <Option value=\"Home\" >Home</Option>\r\n                                                        <Option value=\"Token\">Token</Option>\r\n                                                    </Select>\r\n                                                </Form.Item>\r\n                                            </Col>\r\n\r\n\r\n\r\n                                            <Col md={8} xs={24}>\r\n                                                <Form.Item\r\n                                                    name=\"AdURL\"\r\n                                                    label=\"Ad URL\"\r\n                                                    rules={[{ required: true, message: 'Ad URL required!' },\r\n                                                    ]}>\r\n                                                    <Input placeholder=\"Enter Ad URL\" />\r\n                                                </Form.Item>\r\n                                            </Col>\r\n\r\n                                        </Row>\r\n                                        <Row gutter={30}>\r\n                                            <Col md={8} xs={24}>\r\n                                                <Form.Item\r\n                                                    name=\"avatar\"\r\n                                                    rules={[{ required: true, message: 'Ad Image required!' }]}\r\n                                                >\r\n                                                    <Upload\r\n                                                        name=\"avatar\"\r\n                                                        beforeUpload={() => false}\r\n                                                        className=\"sDash_upload-basic\"\r\n                                                        accept=\"image/*\"\r\n                                                        maxCount={1}\r\n                                                    >\r\n                                                        <span className=\"sDash_upload-text\">Select File</span>\r\n                                                        <Link to=\"#\" className=\"sDash_upload-browse\">\r\n                                                            Browse\r\n                                                        </Link>\r\n                                                    </Upload>\r\n                                                </Form.Item>\r\n                                            </Col>\r\n                                        </Row>\r\n\r\n                                        <div className=\"sDash_agree-check\">\r\n                                            <Form.Item name=\"description\" label=\"Description\" rules={[{ required: true, message: 'Description required!' }, { min: 10, message: 'must be at least 10 characters!' }]}>\r\n                                                <TextArea className=\"sDash_unresizable\" placeholder='Enter Description' />\r\n                                            </Form.Item>\r\n                                        </div>\r\n\r\n                                        <div className=\"sDash_form-action mt-20\">\r\n                                            <Button htmlType=\"submit\" type=\"primary\" size=\"large\">\r\n                                                {loading ? \"loading...\" : \"Submit Form\"}\r\n                                            </Button>\r\n                                        </div>\r\n                                    </Form>\r\n                                </Cards>\r\n                            </VerticalFormStyleWrap>\r\n                        </FormValidationWrap>\r\n                    </Col>\r\n                </Row>\r\n            </Main> */}\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default EditAdvertisement;\r\n"],"mappings":";;;;;;;;;;;;;AAGA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,SAAT,QAA0B,2CAA1B;AAEA,SAASC,UAAT,QAA2B,4CAA3B;AACA,SAASC,IAAT,QAAqB,WAArB;;AAGA,MAAMC,iBAAiB,GAAG,MAAM;EAC5B,MAAM;IAAEC;EAAF,IAAYJ,SAAS,EAA3B;EACAK,OAAO,CAACC,GAAR,CAAYF,KAAZ;EACA,oBACI,uDACI,oBAAC,UAAD;IACI,KAAK,MADT;IAEI,KAAK,EAAC,oBAFV;IAGI,OAAO,EAAE,cACL;MAAQ,SAAS,EAAC,aAAlB;MAAgC,IAAI,EAAC,SAArC;MAA+C,IAAI,EAAC,SAApD;MAA8D,GAAG,EAAC,GAAlE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACI,oBAAC,IAAD;MAAM,EAAE,EAAC,0BAAT;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,wBADJ,CADK,CAHb;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADJ,CADJ;AA6KH,CAhLD;;cAAMD,iB,iCACgBH,S;;iBAiLPG,iB;AAAf;;;;;;;;;;0BAlLMA,iB"},"metadata":{},"sourceType":"module"}
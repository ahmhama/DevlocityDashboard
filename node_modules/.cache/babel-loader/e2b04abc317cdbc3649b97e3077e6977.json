{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst mm = require(\"micromatch\");\n\nconst HarmonyExportImportedSpecifierDependency = require(\"../dependencies/HarmonyExportImportedSpecifierDependency\");\n\nconst HarmonyImportSideEffectDependency = require(\"../dependencies/HarmonyImportSideEffectDependency\");\n\nconst HarmonyImportSpecifierDependency = require(\"../dependencies/HarmonyImportSpecifierDependency\");\n/** @typedef {import(\"../Module\")} Module */\n\n/** @typedef {import(\"../Dependency\")} Dependency */\n\n/**\n * @typedef {Object} ExportInModule\n * @property {Module} module the module\n * @property {string} exportName the name of the export\n */\n\n\nclass SideEffectsFlagPlugin {\n  apply(compiler) {\n    compiler.hooks.normalModuleFactory.tap(\"SideEffectsFlagPlugin\", nmf => {\n      nmf.hooks.module.tap(\"SideEffectsFlagPlugin\", (module, data) => {\n        const resolveData = data.resourceResolveData;\n\n        if (resolveData && resolveData.descriptionFileData && resolveData.relativePath) {\n          const sideEffects = resolveData.descriptionFileData.sideEffects;\n          const hasSideEffects = SideEffectsFlagPlugin.moduleHasSideEffects(resolveData.relativePath, sideEffects);\n\n          if (!hasSideEffects) {\n            module.factoryMeta.sideEffectFree = true;\n          }\n        }\n\n        return module;\n      });\n      nmf.hooks.module.tap(\"SideEffectsFlagPlugin\", (module, data) => {\n        if (data.settings.sideEffects === false) {\n          module.factoryMeta.sideEffectFree = true;\n        } else if (data.settings.sideEffects === true) {\n          module.factoryMeta.sideEffectFree = false;\n        }\n      });\n    });\n    compiler.hooks.compilation.tap(\"SideEffectsFlagPlugin\", compilation => {\n      compilation.hooks.optimizeDependencies.tap(\"SideEffectsFlagPlugin\", modules => {\n        /** @type {Map<Module, Map<string, ExportInModule>>} */\n        const reexportMaps = new Map(); // Capture reexports of sideEffectFree modules\n\n        for (const module of modules) {\n          /** @type {Dependency[]} */\n          const removeDependencies = [];\n\n          for (const dep of module.dependencies) {\n            if (dep instanceof HarmonyImportSideEffectDependency) {\n              if (dep.module && dep.module.factoryMeta.sideEffectFree) {\n                removeDependencies.push(dep);\n              }\n            } else if (dep instanceof HarmonyExportImportedSpecifierDependency) {\n              if (module.factoryMeta.sideEffectFree) {\n                const mode = dep.getMode(true);\n\n                if (mode.type === \"safe-reexport\") {\n                  let map = reexportMaps.get(module);\n\n                  if (!map) {\n                    reexportMaps.set(module, map = new Map());\n                  }\n\n                  for (const pair of mode.map) {\n                    map.set(pair[0], {\n                      module: mode.module,\n                      exportName: pair[1]\n                    });\n                  }\n                }\n              }\n            }\n          }\n        } // Flatten reexports\n\n\n        for (const map of reexportMaps.values()) {\n          for (const pair of map) {\n            let mapping = pair[1];\n\n            while (mapping) {\n              const innerMap = reexportMaps.get(mapping.module);\n              if (!innerMap) break;\n              const newMapping = innerMap.get(mapping.exportName);\n\n              if (newMapping) {\n                map.set(pair[0], newMapping);\n              }\n\n              mapping = newMapping;\n            }\n          }\n        } // Update imports along the reexports from sideEffectFree modules\n\n\n        for (const pair of reexportMaps) {\n          const module = pair[0];\n          const map = pair[1];\n          let newReasons = undefined;\n\n          for (let i = 0; i < module.reasons.length; i++) {\n            const reason = module.reasons[i];\n            const dep = reason.dependency;\n\n            if (dep instanceof HarmonyExportImportedSpecifierDependency || dep instanceof HarmonyImportSpecifierDependency && !dep.namespaceObjectAsContext) {\n              const mapping = map.get(dep._id);\n\n              if (mapping) {\n                dep.redirectedModule = mapping.module;\n                dep.redirectedId = mapping.exportName;\n                mapping.module.addReason(reason.module, dep, reason.explanation ? reason.explanation + \" (skipped side-effect-free modules)\" : \"(skipped side-effect-free modules)\"); // removing the currect reason, by not adding it to the newReasons array\n                // lazily create the newReasons array\n\n                if (newReasons === undefined) {\n                  newReasons = i === 0 ? [] : module.reasons.slice(0, i);\n                }\n\n                continue;\n              }\n            }\n\n            if (newReasons !== undefined) newReasons.push(reason);\n          }\n\n          if (newReasons !== undefined) {\n            module.reasons = newReasons;\n          }\n        }\n      });\n    });\n  }\n\n  static moduleHasSideEffects(moduleName, flagValue) {\n    switch (typeof flagValue) {\n      case \"undefined\":\n        return true;\n\n      case \"boolean\":\n        return flagValue;\n\n      case \"string\":\n        if (process.platform === \"win32\") {\n          flagValue = flagValue.replace(/\\\\/g, \"/\");\n        }\n\n        return mm.isMatch(moduleName, flagValue, {\n          matchBase: true\n        });\n\n      case \"object\":\n        return flagValue.some(glob => SideEffectsFlagPlugin.moduleHasSideEffects(moduleName, glob));\n    }\n  }\n\n}\n\nmodule.exports = SideEffectsFlagPlugin;","map":{"version":3,"names":["mm","require","HarmonyExportImportedSpecifierDependency","HarmonyImportSideEffectDependency","HarmonyImportSpecifierDependency","SideEffectsFlagPlugin","apply","compiler","hooks","normalModuleFactory","tap","nmf","module","data","resolveData","resourceResolveData","descriptionFileData","relativePath","sideEffects","hasSideEffects","moduleHasSideEffects","factoryMeta","sideEffectFree","settings","compilation","optimizeDependencies","modules","reexportMaps","Map","removeDependencies","dep","dependencies","push","mode","getMode","type","map","get","set","pair","exportName","values","mapping","innerMap","newMapping","newReasons","undefined","i","reasons","length","reason","dependency","namespaceObjectAsContext","_id","redirectedModule","redirectedId","addReason","explanation","slice","moduleName","flagValue","process","platform","replace","isMatch","matchBase","some","glob","exports"],"sources":["C:/Users/Lenovo/Desktop/New folder (2)/strikingDash/node_modules/webpack/lib/optimize/SideEffectsFlagPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst mm = require(\"micromatch\");\nconst HarmonyExportImportedSpecifierDependency = require(\"../dependencies/HarmonyExportImportedSpecifierDependency\");\nconst HarmonyImportSideEffectDependency = require(\"../dependencies/HarmonyImportSideEffectDependency\");\nconst HarmonyImportSpecifierDependency = require(\"../dependencies/HarmonyImportSpecifierDependency\");\n\n/** @typedef {import(\"../Module\")} Module */\n/** @typedef {import(\"../Dependency\")} Dependency */\n\n/**\n * @typedef {Object} ExportInModule\n * @property {Module} module the module\n * @property {string} exportName the name of the export\n */\n\nclass SideEffectsFlagPlugin {\n\tapply(compiler) {\n\t\tcompiler.hooks.normalModuleFactory.tap(\"SideEffectsFlagPlugin\", nmf => {\n\t\t\tnmf.hooks.module.tap(\"SideEffectsFlagPlugin\", (module, data) => {\n\t\t\t\tconst resolveData = data.resourceResolveData;\n\t\t\t\tif (\n\t\t\t\t\tresolveData &&\n\t\t\t\t\tresolveData.descriptionFileData &&\n\t\t\t\t\tresolveData.relativePath\n\t\t\t\t) {\n\t\t\t\t\tconst sideEffects = resolveData.descriptionFileData.sideEffects;\n\t\t\t\t\tconst hasSideEffects = SideEffectsFlagPlugin.moduleHasSideEffects(\n\t\t\t\t\t\tresolveData.relativePath,\n\t\t\t\t\t\tsideEffects\n\t\t\t\t\t);\n\t\t\t\t\tif (!hasSideEffects) {\n\t\t\t\t\t\tmodule.factoryMeta.sideEffectFree = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn module;\n\t\t\t});\n\t\t\tnmf.hooks.module.tap(\"SideEffectsFlagPlugin\", (module, data) => {\n\t\t\t\tif (data.settings.sideEffects === false) {\n\t\t\t\t\tmodule.factoryMeta.sideEffectFree = true;\n\t\t\t\t} else if (data.settings.sideEffects === true) {\n\t\t\t\t\tmodule.factoryMeta.sideEffectFree = false;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t\tcompiler.hooks.compilation.tap(\"SideEffectsFlagPlugin\", compilation => {\n\t\t\tcompilation.hooks.optimizeDependencies.tap(\n\t\t\t\t\"SideEffectsFlagPlugin\",\n\t\t\t\tmodules => {\n\t\t\t\t\t/** @type {Map<Module, Map<string, ExportInModule>>} */\n\t\t\t\t\tconst reexportMaps = new Map();\n\n\t\t\t\t\t// Capture reexports of sideEffectFree modules\n\t\t\t\t\tfor (const module of modules) {\n\t\t\t\t\t\t/** @type {Dependency[]} */\n\t\t\t\t\t\tconst removeDependencies = [];\n\t\t\t\t\t\tfor (const dep of module.dependencies) {\n\t\t\t\t\t\t\tif (dep instanceof HarmonyImportSideEffectDependency) {\n\t\t\t\t\t\t\t\tif (dep.module && dep.module.factoryMeta.sideEffectFree) {\n\t\t\t\t\t\t\t\t\tremoveDependencies.push(dep);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\t\tdep instanceof HarmonyExportImportedSpecifierDependency\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tif (module.factoryMeta.sideEffectFree) {\n\t\t\t\t\t\t\t\t\tconst mode = dep.getMode(true);\n\t\t\t\t\t\t\t\t\tif (mode.type === \"safe-reexport\") {\n\t\t\t\t\t\t\t\t\t\tlet map = reexportMaps.get(module);\n\t\t\t\t\t\t\t\t\t\tif (!map) {\n\t\t\t\t\t\t\t\t\t\t\treexportMaps.set(module, (map = new Map()));\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tfor (const pair of mode.map) {\n\t\t\t\t\t\t\t\t\t\t\tmap.set(pair[0], {\n\t\t\t\t\t\t\t\t\t\t\t\tmodule: mode.module,\n\t\t\t\t\t\t\t\t\t\t\t\texportName: pair[1]\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Flatten reexports\n\t\t\t\t\tfor (const map of reexportMaps.values()) {\n\t\t\t\t\t\tfor (const pair of map) {\n\t\t\t\t\t\t\tlet mapping = pair[1];\n\t\t\t\t\t\t\twhile (mapping) {\n\t\t\t\t\t\t\t\tconst innerMap = reexportMaps.get(mapping.module);\n\t\t\t\t\t\t\t\tif (!innerMap) break;\n\t\t\t\t\t\t\t\tconst newMapping = innerMap.get(mapping.exportName);\n\t\t\t\t\t\t\t\tif (newMapping) {\n\t\t\t\t\t\t\t\t\tmap.set(pair[0], newMapping);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tmapping = newMapping;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Update imports along the reexports from sideEffectFree modules\n\t\t\t\t\tfor (const pair of reexportMaps) {\n\t\t\t\t\t\tconst module = pair[0];\n\t\t\t\t\t\tconst map = pair[1];\n\t\t\t\t\t\tlet newReasons = undefined;\n\t\t\t\t\t\tfor (let i = 0; i < module.reasons.length; i++) {\n\t\t\t\t\t\t\tconst reason = module.reasons[i];\n\t\t\t\t\t\t\tconst dep = reason.dependency;\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tdep instanceof HarmonyExportImportedSpecifierDependency ||\n\t\t\t\t\t\t\t\t(dep instanceof HarmonyImportSpecifierDependency &&\n\t\t\t\t\t\t\t\t\t!dep.namespaceObjectAsContext)\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tconst mapping = map.get(dep._id);\n\t\t\t\t\t\t\t\tif (mapping) {\n\t\t\t\t\t\t\t\t\tdep.redirectedModule = mapping.module;\n\t\t\t\t\t\t\t\t\tdep.redirectedId = mapping.exportName;\n\t\t\t\t\t\t\t\t\tmapping.module.addReason(\n\t\t\t\t\t\t\t\t\t\treason.module,\n\t\t\t\t\t\t\t\t\t\tdep,\n\t\t\t\t\t\t\t\t\t\treason.explanation\n\t\t\t\t\t\t\t\t\t\t\t? reason.explanation +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\" (skipped side-effect-free modules)\"\n\t\t\t\t\t\t\t\t\t\t\t: \"(skipped side-effect-free modules)\"\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t// removing the currect reason, by not adding it to the newReasons array\n\t\t\t\t\t\t\t\t\t// lazily create the newReasons array\n\t\t\t\t\t\t\t\t\tif (newReasons === undefined) {\n\t\t\t\t\t\t\t\t\t\tnewReasons = i === 0 ? [] : module.reasons.slice(0, i);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (newReasons !== undefined) newReasons.push(reason);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (newReasons !== undefined) {\n\t\t\t\t\t\t\tmodule.reasons = newReasons;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\t}\n\n\tstatic moduleHasSideEffects(moduleName, flagValue) {\n\t\tswitch (typeof flagValue) {\n\t\t\tcase \"undefined\":\n\t\t\t\treturn true;\n\t\t\tcase \"boolean\":\n\t\t\t\treturn flagValue;\n\t\t\tcase \"string\":\n\t\t\t\tif (process.platform === \"win32\") {\n\t\t\t\t\tflagValue = flagValue.replace(/\\\\/g, \"/\");\n\t\t\t\t}\n\t\t\t\treturn mm.isMatch(moduleName, flagValue, {\n\t\t\t\t\tmatchBase: true\n\t\t\t\t});\n\t\t\tcase \"object\":\n\t\t\t\treturn flagValue.some(glob =>\n\t\t\t\t\tSideEffectsFlagPlugin.moduleHasSideEffects(moduleName, glob)\n\t\t\t\t);\n\t\t}\n\t}\n}\nmodule.exports = SideEffectsFlagPlugin;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}
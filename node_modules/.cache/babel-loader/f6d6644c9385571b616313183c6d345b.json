{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _parser = _interopRequireDefault(require(\"./parser\"));\n\nvar _input = _interopRequireDefault(require(\"./input\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction parse(css, opts) {\n  var input = new _input.default(css, opts);\n  var parser = new _parser.default(input);\n\n  try {\n    parser.parse();\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (e.name === 'CssSyntaxError' && opts && opts.from) {\n        if (/\\.scss$/i.test(opts.from)) {\n          e.message += '\\nYou tried to parse SCSS with ' + 'the standard CSS parser; ' + 'try again with the postcss-scss parser';\n        } else if (/\\.sass/i.test(opts.from)) {\n          e.message += '\\nYou tried to parse Sass with ' + 'the standard CSS parser; ' + 'try again with the postcss-sass parser';\n        } else if (/\\.less$/i.test(opts.from)) {\n          e.message += '\\nYou tried to parse Less with ' + 'the standard CSS parser; ' + 'try again with the postcss-less parser';\n        }\n      }\n    }\n\n    throw e;\n  }\n\n  return parser.root;\n}\n\nvar _default = parse;\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"sources":["parse.es6"],"names":["input","Input","parser","Parser","process","e","opts","parse"],"mappings":";;;;;AAAA,IAAA,OAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,UAAA,CAAA,CAAA;;AACA,IAAA,MAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,SAAA,CAAA,CAAA;;;;;;;;AAEA,SAAA,KAAA,CAAA,GAAA,EAAA,IAAA,EAA2B;EACzB,IAAIA,KAAK,GAAG,IAAIC,MAAAA,CAAJ,OAAA,CAAA,GAAA,EAAZ,IAAY,CAAZ;EACA,IAAIC,MAAM,GAAG,IAAIC,OAAAA,CAAJ,OAAA,CAAb,KAAa,CAAb;;EACA,IAAI;IACFD,MAAM,CAANA,KAAAA;EADF,CAAA,CAEE,OAAA,CAAA,EAAU;IACV,IAAIE,OAAO,CAAPA,GAAAA,CAAAA,QAAAA,KAAJ,YAAA,EAA2C;MACzC,IAAIC,CAAC,CAADA,IAAAA,KAAAA,gBAAAA,IAAAA,IAAAA,IAAuCC,IAAI,CAA/C,IAAA,EAAsD;QACpD,IAAI,WAAA,IAAA,CAAgBA,IAAI,CAAxB,IAAI,CAAJ,EAAgC;UAC9BD,CAAC,CAADA,OAAAA,IAAa,oCAAA,2BAAA,GAAbA,wCAAAA;QADF,CAAA,MAIO,IAAI,UAAA,IAAA,CAAeC,IAAI,CAAvB,IAAI,CAAJ,EAA+B;UACpCD,CAAC,CAADA,OAAAA,IAAa,oCAAA,2BAAA,GAAbA,wCAAAA;QADK,CAAA,MAIA,IAAI,WAAA,IAAA,CAAgBC,IAAI,CAAxB,IAAI,CAAJ,EAAgC;UACrCD,CAAC,CAADA,OAAAA,IAAa,oCAAA,2BAAA,GAAbA,wCAAAA;QAGD;MACF;IACF;;IACD,MAAA,CAAA;EACD;;EAED,OAAOH,MAAM,CAAb,IAAA;AACD;;eAEcK,K","sourcesContent":["import Parser from './parser'\nimport Input from './input'\n\nfunction parse (css, opts) {\n  let input = new Input(css, opts)\n  let parser = new Parser(input)\n  try {\n    parser.parse()\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (e.name === 'CssSyntaxError' && opts && opts.from) {\n        if (/\\.scss$/i.test(opts.from)) {\n          e.message += '\\nYou tried to parse SCSS with ' +\n                       'the standard CSS parser; ' +\n                       'try again with the postcss-scss parser'\n        } else if (/\\.sass/i.test(opts.from)) {\n          e.message += '\\nYou tried to parse Sass with ' +\n                       'the standard CSS parser; ' +\n                       'try again with the postcss-sass parser'\n        } else if (/\\.less$/i.test(opts.from)) {\n          e.message += '\\nYou tried to parse Less with ' +\n                       'the standard CSS parser; ' +\n                       'try again with the postcss-less parser'\n        }\n      }\n    }\n    throw e\n  }\n\n  return parser.root\n}\n\nexport default parse\n"]},"metadata":{},"sourceType":"script"}
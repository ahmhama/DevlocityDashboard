{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\New folder (2)\\\\strikingDash\\\\src\\\\components\\\\charts\\\\google-chart.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\n/* eslint-disable react/forbid-prop-types */\nimport React from 'react';\nimport { Chart } from 'react-google-charts';\nimport PropTypes from 'prop-types';\n\nconst GoogleBasicBarChart = props => {\n  const {\n    width,\n    height,\n    data,\n    title,\n    chartArea\n  } = props;\n  return /*#__PURE__*/React.createElement(Chart, {\n    width: width,\n    height: height,\n    chartType: \"BarChart\",\n    loader: /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 15\n      }\n    }, \"Loading Chart\"),\n    data: data,\n    options: {\n      title,\n      chartArea: {\n        width: chartArea\n      },\n      hAxis: {\n        title: 'Total',\n        minValue: 0\n      },\n      vAxis: {\n        title: 'City'\n      }\n    } // For tests\n    ,\n    rootProps: {\n      'data-testid': '1'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  });\n};\n\nGoogleBasicBarChart.propTypes = {\n  width: PropTypes.string.isRequired,\n  height: PropTypes.string.isRequired,\n  data: PropTypes.array,\n  title: PropTypes.string.isRequired,\n  chartArea: PropTypes.string.isRequired\n};\n\nconst GoogleMaterialBarChart = props => {\n  const {\n    width,\n    height,\n    data,\n    title,\n    subtitle\n  } = props;\n  return /*#__PURE__*/React.createElement(Chart, {\n    width: width,\n    height: height,\n    chartType: \"Bar\",\n    loader: /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 15\n      }\n    }, \"Loading Chart\"),\n    data: data,\n    options: {\n      chart: {\n        title,\n        subtitle\n      }\n    } // For tests\n    ,\n    rootProps: {\n      'data-testid': '2'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  });\n};\n\nGoogleMaterialBarChart.propTypes = {\n  width: PropTypes.string.isRequired,\n  height: PropTypes.string.isRequired,\n  data: PropTypes.array.isRequired,\n  title: PropTypes.string.isRequired,\n  subtitle: PropTypes.string.isRequired\n};\n\nconst GoogleStackedChart = props => {\n  const {\n    width,\n    height,\n    data,\n    title,\n    chartArea\n  } = props;\n  return /*#__PURE__*/React.createElement(Chart, {\n    width: width,\n    height: height,\n    chartType: \"BarChart\",\n    loader: /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 15\n      }\n    }, \"Loading Chart\"),\n    data: data,\n    options: {\n      title,\n      chartArea: {\n        width: chartArea\n      },\n      isStacked: true,\n      hAxis: {\n        title: 'Total',\n        minValue: 0\n      },\n      vAxis: {\n        title: 'City'\n      }\n    } // For tests\n    ,\n    rootProps: {\n      'data-testid': '3'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  });\n};\n\nGoogleStackedChart.propTypes = {\n  width: PropTypes.string.isRequired,\n  height: PropTypes.string.isRequired,\n  data: PropTypes.array.isRequired,\n  title: PropTypes.string.isRequired,\n  chartArea: PropTypes.string.isRequired\n};\n\nconst GoogleCustomColorChart = props => {\n  const {\n    width,\n    height,\n    data,\n    title,\n    chartArea,\n    colors\n  } = props;\n  return /*#__PURE__*/React.createElement(Chart, {\n    width: width,\n    height: height,\n    chartType: \"BarChart\",\n    loader: /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 15\n      }\n    }, \"Loading Chart\"),\n    data: data,\n    options: {\n      title,\n      chartArea: {\n        width: chartArea\n      },\n      colors,\n      hAxis: {\n        title: 'Total',\n        minValue: 0\n      },\n      vAxis: {\n        title: 'City'\n      }\n    } // For tests\n    ,\n    rootProps: {\n      'data-testid': '4'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }\n  });\n};\n\nGoogleCustomColorChart.propTypes = {\n  width: PropTypes.string.isRequired,\n  height: PropTypes.string.isRequired,\n  data: PropTypes.array.isRequired,\n  title: PropTypes.string.isRequired,\n  chartArea: PropTypes.string.isRequired,\n  colors: PropTypes.array.isRequired\n};\n\nconst GoogleComboChart = props => {\n  const {\n    width,\n    height,\n    data,\n    title,\n    chartArea,\n    colors\n  } = props;\n  return /*#__PURE__*/React.createElement(Chart, {\n    width: width,\n    height: height,\n    chartType: \"ComboChart\",\n    loader: /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 15\n      }\n    }, \"Loading Chart\"),\n    data: data,\n    options: {\n      title,\n      chartArea: {\n        width: chartArea\n      },\n      colors,\n      seriesType: 'bars',\n      series: {\n        5: {\n          type: 'line'\n        }\n      }\n    } // For tests\n    ,\n    rootProps: {\n      'data-testid': '5'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 5\n    }\n  });\n};\n\nGoogleComboChart.propTypes = {\n  width: PropTypes.string.isRequired,\n  height: PropTypes.string.isRequired,\n  data: PropTypes.array.isRequired,\n  title: PropTypes.string.isRequired,\n  chartArea: PropTypes.string.isRequired,\n  colors: PropTypes.array.isRequired\n};\n\nconst GoogleLineChart = props => {\n  const {\n    width,\n    height,\n    data\n  } = props;\n  return /*#__PURE__*/React.createElement(Chart, {\n    width: width,\n    height: height,\n    chartType: \"LineChart\",\n    loader: /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 15\n      }\n    }, \"Loading Chart\"),\n    data: data,\n    options: {\n      hAxis: {\n        title: 'Time'\n      },\n      vAxis: {\n        title: 'Popularity'\n      }\n    } // For tests\n    ,\n    rootProps: {\n      'data-testid': '6'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 5\n    }\n  });\n};\n\nGoogleLineChart.propTypes = {\n  width: PropTypes.string.isRequired,\n  height: PropTypes.string.isRequired,\n  data: PropTypes.array.isRequired\n};\n\nconst GoogleMultiLineChart = props => {\n  const {\n    width,\n    height,\n    data\n  } = props;\n  return /*#__PURE__*/React.createElement(Chart, {\n    width: width,\n    height: height,\n    chartType: \"LineChart\",\n    loader: /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 15\n      }\n    }, \"Loading Chart\"),\n    data: data,\n    options: {\n      hAxis: {\n        title: 'Time'\n      },\n      vAxis: {\n        title: 'Popularity'\n      },\n      series: {\n        0: {\n          curveType: 'function'\n        },\n        1: {\n          curveType: 'function'\n        }\n      }\n    } // For tests\n    ,\n    rootProps: {\n      'data-testid': '7'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 5\n    }\n  });\n};\n\nGoogleMultiLineChart.propTypes = {\n  width: PropTypes.string.isRequired,\n  height: PropTypes.string.isRequired,\n  data: PropTypes.array.isRequired\n};\n\nconst GoogleOrgChart = props => {\n  const {\n    width,\n    height,\n    data,\n    chartArea\n  } = props;\n  return /*#__PURE__*/React.createElement(Chart, {\n    width: width,\n    height: height,\n    chartType: \"OrgChart\",\n    loader: /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 15\n      }\n    }, \"Loading Chart\"),\n    data: data,\n    options: {\n      chartArea: {\n        width: chartArea\n      },\n      allowHtml: true\n    } // For tests\n    ,\n    rootProps: {\n      'data-testid': '8'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 5\n    }\n  });\n};\n\nGoogleOrgChart.propTypes = {\n  width: PropTypes.string.isRequired,\n  height: PropTypes.string.isRequired,\n  data: PropTypes.array.isRequired,\n  chartArea: PropTypes.string.isRequired\n};\n\nconst GoogleBasicPieChart = props => {\n  const {\n    width,\n    height,\n    data,\n    chartArea,\n    title\n  } = props;\n  return /*#__PURE__*/React.createElement(Chart, {\n    width: width,\n    height: height,\n    chartType: \"PieChart\",\n    loader: /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 15\n      }\n    }, \"Loading Chart\"),\n    data: data,\n    options: {\n      title,\n      chartArea: {\n        width: chartArea\n      }\n    } // For tests\n    ,\n    rootProps: {\n      'data-testid': '9'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 5\n    }\n  });\n};\n\nGoogleBasicPieChart.propTypes = {\n  width: PropTypes.string.isRequired,\n  height: PropTypes.string.isRequired,\n  data: PropTypes.array.isRequired,\n  title: PropTypes.string.isRequired,\n  chartArea: PropTypes.string.isRequired\n};\n\nconst Google3dPieChart = props => {\n  const {\n    width,\n    height,\n    data,\n    chartArea,\n    title\n  } = props;\n  return /*#__PURE__*/React.createElement(Chart, {\n    width: width,\n    height: height,\n    chartType: \"PieChart\",\n    loader: /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 15\n      }\n    }, \"Loading Chart\"),\n    data: data,\n    options: {\n      title,\n      chartArea: {\n        width: chartArea\n      },\n      is3D: true\n    } // For tests\n    ,\n    rootProps: {\n      'data-testid': '9'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 5\n    }\n  });\n};\n\nGoogle3dPieChart.propTypes = {\n  width: PropTypes.string.isRequired,\n  height: PropTypes.string.isRequired,\n  data: PropTypes.array.isRequired,\n  title: PropTypes.string.isRequired,\n  chartArea: PropTypes.string.isRequired\n};\nexport { Google3dPieChart, GoogleBasicPieChart, GoogleOrgChart, GoogleMultiLineChart, GoogleLineChart, GoogleComboChart, GoogleCustomColorChart, GoogleStackedChart, GoogleMaterialBarChart, GoogleBasicBarChart };\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(GoogleBasicBarChart, \"GoogleBasicBarChart\", \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\New folder (2)\\\\strikingDash\\\\src\\\\components\\\\charts\\\\google-chart.js\");\n  reactHotLoader.register(GoogleMaterialBarChart, \"GoogleMaterialBarChart\", \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\New folder (2)\\\\strikingDash\\\\src\\\\components\\\\charts\\\\google-chart.js\");\n  reactHotLoader.register(GoogleStackedChart, \"GoogleStackedChart\", \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\New folder (2)\\\\strikingDash\\\\src\\\\components\\\\charts\\\\google-chart.js\");\n  reactHotLoader.register(GoogleCustomColorChart, \"GoogleCustomColorChart\", \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\New folder (2)\\\\strikingDash\\\\src\\\\components\\\\charts\\\\google-chart.js\");\n  reactHotLoader.register(GoogleComboChart, \"GoogleComboChart\", \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\New folder (2)\\\\strikingDash\\\\src\\\\components\\\\charts\\\\google-chart.js\");\n  reactHotLoader.register(GoogleLineChart, \"GoogleLineChart\", \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\New folder (2)\\\\strikingDash\\\\src\\\\components\\\\charts\\\\google-chart.js\");\n  reactHotLoader.register(GoogleMultiLineChart, \"GoogleMultiLineChart\", \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\New folder (2)\\\\strikingDash\\\\src\\\\components\\\\charts\\\\google-chart.js\");\n  reactHotLoader.register(GoogleOrgChart, \"GoogleOrgChart\", \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\New folder (2)\\\\strikingDash\\\\src\\\\components\\\\charts\\\\google-chart.js\");\n  reactHotLoader.register(GoogleBasicPieChart, \"GoogleBasicPieChart\", \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\New folder (2)\\\\strikingDash\\\\src\\\\components\\\\charts\\\\google-chart.js\");\n  reactHotLoader.register(Google3dPieChart, \"Google3dPieChart\", \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\New folder (2)\\\\strikingDash\\\\src\\\\components\\\\charts\\\\google-chart.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"names":["React","Chart","PropTypes","GoogleBasicBarChart","props","width","height","data","title","chartArea","hAxis","minValue","vAxis","propTypes","string","isRequired","array","GoogleMaterialBarChart","subtitle","chart","GoogleStackedChart","isStacked","GoogleCustomColorChart","colors","GoogleComboChart","seriesType","series","type","GoogleLineChart","GoogleMultiLineChart","curveType","GoogleOrgChart","allowHtml","GoogleBasicPieChart","Google3dPieChart","is3D"],"sources":["C:/Users/Lenovo/Desktop/New folder (2)/strikingDash/src/components/charts/google-chart.js"],"sourcesContent":["/* eslint-disable react/forbid-prop-types */\r\nimport React from 'react';\r\nimport { Chart } from 'react-google-charts';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst GoogleBasicBarChart = props => {\r\n  const { width, height, data, title, chartArea } = props;\r\n  return (\r\n    <Chart\r\n      width={width}\r\n      height={height}\r\n      chartType=\"BarChart\"\r\n      loader={<div>Loading Chart</div>}\r\n      data={data}\r\n      options={{\r\n        title,\r\n        chartArea: { width: chartArea },\r\n        hAxis: {\r\n          title: 'Total',\r\n          minValue: 0,\r\n        },\r\n        vAxis: {\r\n          title: 'City',\r\n        },\r\n      }}\r\n      // For tests\r\n      rootProps={{ 'data-testid': '1' }}\r\n    />\r\n  );\r\n};\r\n\r\nGoogleBasicBarChart.propTypes = {\r\n  width: PropTypes.string.isRequired,\r\n  height: PropTypes.string.isRequired,\r\n  data: PropTypes.array,\r\n  title: PropTypes.string.isRequired,\r\n  chartArea: PropTypes.string.isRequired,\r\n};\r\n\r\nconst GoogleMaterialBarChart = props => {\r\n  const { width, height, data, title, subtitle } = props;\r\n  return (\r\n    <Chart\r\n      width={width}\r\n      height={height}\r\n      chartType=\"Bar\"\r\n      loader={<div>Loading Chart</div>}\r\n      data={data}\r\n      options={{\r\n        chart: {\r\n          title,\r\n          subtitle,\r\n        },\r\n      }}\r\n      // For tests\r\n      rootProps={{ 'data-testid': '2' }}\r\n    />\r\n  );\r\n};\r\n\r\nGoogleMaterialBarChart.propTypes = {\r\n  width: PropTypes.string.isRequired,\r\n  height: PropTypes.string.isRequired,\r\n  data: PropTypes.array.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  subtitle: PropTypes.string.isRequired,\r\n};\r\n\r\nconst GoogleStackedChart = props => {\r\n  const { width, height, data, title, chartArea } = props;\r\n  return (\r\n    <Chart\r\n      width={width}\r\n      height={height}\r\n      chartType=\"BarChart\"\r\n      loader={<div>Loading Chart</div>}\r\n      data={data}\r\n      options={{\r\n        title,\r\n        chartArea: { width: chartArea },\r\n        isStacked: true,\r\n        hAxis: {\r\n          title: 'Total',\r\n          minValue: 0,\r\n        },\r\n        vAxis: {\r\n          title: 'City',\r\n        },\r\n      }}\r\n      // For tests\r\n      rootProps={{ 'data-testid': '3' }}\r\n    />\r\n  );\r\n};\r\n\r\nGoogleStackedChart.propTypes = {\r\n  width: PropTypes.string.isRequired,\r\n  height: PropTypes.string.isRequired,\r\n  data: PropTypes.array.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  chartArea: PropTypes.string.isRequired,\r\n};\r\n\r\nconst GoogleCustomColorChart = props => {\r\n  const { width, height, data, title, chartArea, colors } = props;\r\n  return (\r\n    <Chart\r\n      width={width}\r\n      height={height}\r\n      chartType=\"BarChart\"\r\n      loader={<div>Loading Chart</div>}\r\n      data={data}\r\n      options={{\r\n        title,\r\n        chartArea: { width: chartArea },\r\n        colors,\r\n        hAxis: {\r\n          title: 'Total',\r\n          minValue: 0,\r\n        },\r\n        vAxis: {\r\n          title: 'City',\r\n        },\r\n      }}\r\n      // For tests\r\n      rootProps={{ 'data-testid': '4' }}\r\n    />\r\n  );\r\n};\r\n\r\nGoogleCustomColorChart.propTypes = {\r\n  width: PropTypes.string.isRequired,\r\n  height: PropTypes.string.isRequired,\r\n  data: PropTypes.array.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  chartArea: PropTypes.string.isRequired,\r\n  colors: PropTypes.array.isRequired,\r\n};\r\n\r\nconst GoogleComboChart = props => {\r\n  const { width, height, data, title, chartArea, colors } = props;\r\n  return (\r\n    <Chart\r\n      width={width}\r\n      height={height}\r\n      chartType=\"ComboChart\"\r\n      loader={<div>Loading Chart</div>}\r\n      data={data}\r\n      options={{\r\n        title,\r\n        chartArea: { width: chartArea },\r\n        colors,\r\n        seriesType: 'bars',\r\n        series: { 5: { type: 'line' } },\r\n      }}\r\n      // For tests\r\n      rootProps={{ 'data-testid': '5' }}\r\n    />\r\n  );\r\n};\r\n\r\nGoogleComboChart.propTypes = {\r\n  width: PropTypes.string.isRequired,\r\n  height: PropTypes.string.isRequired,\r\n  data: PropTypes.array.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  chartArea: PropTypes.string.isRequired,\r\n  colors: PropTypes.array.isRequired,\r\n};\r\n\r\nconst GoogleLineChart = props => {\r\n  const { width, height, data } = props;\r\n  return (\r\n    <Chart\r\n      width={width}\r\n      height={height}\r\n      chartType=\"LineChart\"\r\n      loader={<div>Loading Chart</div>}\r\n      data={data}\r\n      options={{\r\n        hAxis: {\r\n          title: 'Time',\r\n        },\r\n        vAxis: {\r\n          title: 'Popularity',\r\n        },\r\n      }}\r\n      // For tests\r\n      rootProps={{ 'data-testid': '6' }}\r\n    />\r\n  );\r\n};\r\n\r\nGoogleLineChart.propTypes = {\r\n  width: PropTypes.string.isRequired,\r\n  height: PropTypes.string.isRequired,\r\n  data: PropTypes.array.isRequired,\r\n};\r\n\r\nconst GoogleMultiLineChart = props => {\r\n  const { width, height, data } = props;\r\n  return (\r\n    <Chart\r\n      width={width}\r\n      height={height}\r\n      chartType=\"LineChart\"\r\n      loader={<div>Loading Chart</div>}\r\n      data={data}\r\n      options={{\r\n        hAxis: {\r\n          title: 'Time',\r\n        },\r\n        vAxis: {\r\n          title: 'Popularity',\r\n        },\r\n        series: {\r\n          0: { curveType: 'function' },\r\n          1: { curveType: 'function' },\r\n        },\r\n      }}\r\n      // For tests\r\n      rootProps={{ 'data-testid': '7' }}\r\n    />\r\n  );\r\n};\r\n\r\nGoogleMultiLineChart.propTypes = {\r\n  width: PropTypes.string.isRequired,\r\n  height: PropTypes.string.isRequired,\r\n  data: PropTypes.array.isRequired,\r\n};\r\n\r\nconst GoogleOrgChart = props => {\r\n  const { width, height, data, chartArea } = props;\r\n  return (\r\n    <Chart\r\n      width={width}\r\n      height={height}\r\n      chartType=\"OrgChart\"\r\n      loader={<div>Loading Chart</div>}\r\n      data={data}\r\n      options={{\r\n        chartArea: { width: chartArea },\r\n        allowHtml: true,\r\n      }}\r\n      // For tests\r\n      rootProps={{ 'data-testid': '8' }}\r\n    />\r\n  );\r\n};\r\n\r\nGoogleOrgChart.propTypes = {\r\n  width: PropTypes.string.isRequired,\r\n  height: PropTypes.string.isRequired,\r\n  data: PropTypes.array.isRequired,\r\n  chartArea: PropTypes.string.isRequired,\r\n};\r\n\r\nconst GoogleBasicPieChart = props => {\r\n  const { width, height, data, chartArea, title } = props;\r\n  return (\r\n    <Chart\r\n      width={width}\r\n      height={height}\r\n      chartType=\"PieChart\"\r\n      loader={<div>Loading Chart</div>}\r\n      data={data}\r\n      options={{\r\n        title,\r\n        chartArea: { width: chartArea },\r\n      }}\r\n      // For tests\r\n      rootProps={{ 'data-testid': '9' }}\r\n    />\r\n  );\r\n};\r\n\r\nGoogleBasicPieChart.propTypes = {\r\n  width: PropTypes.string.isRequired,\r\n  height: PropTypes.string.isRequired,\r\n  data: PropTypes.array.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  chartArea: PropTypes.string.isRequired,\r\n};\r\n\r\nconst Google3dPieChart = props => {\r\n  const { width, height, data, chartArea, title } = props;\r\n  return (\r\n    <Chart\r\n      width={width}\r\n      height={height}\r\n      chartType=\"PieChart\"\r\n      loader={<div>Loading Chart</div>}\r\n      data={data}\r\n      options={{\r\n        title,\r\n        chartArea: { width: chartArea },\r\n        is3D: true,\r\n      }}\r\n      // For tests\r\n      rootProps={{ 'data-testid': '9' }}\r\n    />\r\n  );\r\n};\r\n\r\nGoogle3dPieChart.propTypes = {\r\n  width: PropTypes.string.isRequired,\r\n  height: PropTypes.string.isRequired,\r\n  data: PropTypes.array.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  chartArea: PropTypes.string.isRequired,\r\n};\r\n\r\nexport {\r\n  Google3dPieChart,\r\n  GoogleBasicPieChart,\r\n  GoogleOrgChart,\r\n  GoogleMultiLineChart,\r\n  GoogleLineChart,\r\n  GoogleComboChart,\r\n  GoogleCustomColorChart,\r\n  GoogleStackedChart,\r\n  GoogleMaterialBarChart,\r\n  GoogleBasicBarChart,\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
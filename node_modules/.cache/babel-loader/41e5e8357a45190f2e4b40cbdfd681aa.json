{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\n\nimport parsePhoneNumber from 'libphonenumber-js/core';\n/**\r\n * Formats a phone number.\r\n * Is a proxy for `libphonenumber-js`'s `.format()` function of a parsed `PhoneNumber`.\r\n * @param  {string} value\r\n * @param  {string} [format]\r\n * @param  {object} metadata\r\n * @return {string}\r\n */\n\nexport default function formatPhoneNumber(value, format, metadata) {\n  if (!metadata) {\n    if (_typeof(format) === 'object') {\n      metadata = format;\n      format = 'NATIONAL';\n    }\n  }\n\n  if (!value) {\n    return '';\n  }\n\n  var phoneNumber = parsePhoneNumber(value, metadata);\n\n  if (!phoneNumber) {\n    return '';\n  } // Deprecated.\n  // Legacy `format`s.\n\n\n  switch (format) {\n    case 'National':\n      format = 'NATIONAL';\n      break;\n\n    case 'International':\n      format = 'INTERNATIONAL';\n      break;\n  }\n\n  return phoneNumber.format(format);\n}\nexport function formatPhoneNumberIntl(value, metadata) {\n  return formatPhoneNumber(value, 'INTERNATIONAL', metadata);\n}","map":{"version":3,"sources":["../../source/libphonenumber/formatPhoneNumber.js"],"names":["metadata","format","phoneNumber","parsePhoneNumber","formatPhoneNumber"],"mappings":";;;;;;;;;;AAAA,OAAA,gBAAA,MAAA,wBAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAAA,iBAAA,CAAA,KAAA,EAAA,MAAA,EAAA,QAAA,EAAoD;EAClE,IAAI,CAAJ,QAAA,EAAe;IACd,IAAI,OAAA,CAAA,MAAA,CAAA,KAAJ,QAAA,EAAgC;MAC/BA,QAAQ,GAARA,MAAAA;MACAC,MAAM,GAANA,UAAAA;IACA;EACD;;EACD,IAAI,CAAJ,KAAA,EAAY;IACX,OAAA,EAAA;EACA;;EACD,IAAMC,WAAW,GAAGC,gBAAgB,CAAA,KAAA,EAApC,QAAoC,CAApC;;EACA,IAAI,CAAJ,WAAA,EAAkB;IACjB,OAAA,EAAA;EAZiE,CAAA,CAclE;EACA;;;EACA,QAAA,MAAA;IACC,KAAA,UAAA;MACCF,MAAM,GAANA,UAAAA;MACA;;IACD,KAAA,eAAA;MACCA,MAAM,GAANA,eAAAA;MACA;EANF;;EAQA,OAAOC,WAAW,CAAXA,MAAAA,CAAP,MAAOA,CAAP;AACA;AAED,OAAO,SAAA,qBAAA,CAAA,KAAA,EAAA,QAAA,EAAgD;EACtD,OAAOE,iBAAiB,CAAA,KAAA,EAAA,eAAA,EAAxB,QAAwB,CAAxB;AACA","sourcesContent":["import parsePhoneNumber from 'libphonenumber-js/core'\r\n\r\n/**\r\n * Formats a phone number.\r\n * Is a proxy for `libphonenumber-js`'s `.format()` function of a parsed `PhoneNumber`.\r\n * @param  {string} value\r\n * @param  {string} [format]\r\n * @param  {object} metadata\r\n * @return {string}\r\n */\r\nexport default function formatPhoneNumber(value, format, metadata) {\r\n\tif (!metadata) {\r\n\t\tif (typeof format === 'object') {\r\n\t\t\tmetadata = format\r\n\t\t\tformat = 'NATIONAL'\r\n\t\t}\r\n\t}\r\n\tif (!value) {\r\n\t\treturn ''\r\n\t}\r\n\tconst phoneNumber = parsePhoneNumber(value, metadata)\r\n\tif (!phoneNumber) {\r\n\t\treturn ''\r\n\t}\r\n\t// Deprecated.\r\n\t// Legacy `format`s.\r\n\tswitch (format) {\r\n\t\tcase 'National':\r\n\t\t\tformat = 'NATIONAL'\r\n\t\t\tbreak\r\n\t\tcase 'International':\r\n\t\t\tformat = 'INTERNATIONAL'\r\n\t\t\tbreak\r\n\t}\r\n\treturn phoneNumber.format(format)\r\n}\r\n\r\nexport function formatPhoneNumberIntl(value, metadata) {\r\n\treturn formatPhoneNumber(value, 'INTERNATIONAL', metadata)\r\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"\"use strict\";\n\nconst fs = require('fs');\n\nconst _ = require('lodash');\n\nconst acorn = require('acorn');\n\nconst walk = require('acorn-walk');\n\nmodule.exports = {\n  parseBundle\n};\n\nfunction parseBundle(bundlePath) {\n  const content = fs.readFileSync(bundlePath, 'utf8');\n  const ast = acorn.parse(content, {\n    sourceType: 'script',\n    // I believe in a bright future of ECMAScript!\n    // Actually, it's set to `2050` to support the latest ECMAScript version that currently exists.\n    // Seems like `acorn` supports such weird option value.\n    ecmaVersion: 2050\n  });\n  const walkState = {\n    locations: null\n  };\n  walk.recursive(ast, walkState, {\n    AssignmentExpression(node, state) {\n      if (state.locations) return; // Modules are stored in exports.modules:\n      // exports.modules = {};\n\n      const {\n        left,\n        right\n      } = node;\n\n      if (left && left.object && left.object.name === 'exports' && left.property && left.property.name === 'modules' && isModulesHash(right)) {\n        state.locations = getModulesLocations(right);\n      }\n    },\n\n    CallExpression(node, state, c) {\n      if (state.locations) return;\n      const args = node.arguments; // Main chunk with webpack loader.\n      // Modules are stored in first argument:\n      // (function (...) {...})(<modules>)\n\n      if (node.callee.type === 'FunctionExpression' && !node.callee.id && args.length === 1 && isSimpleModulesList(args[0])) {\n        state.locations = getModulesLocations(args[0]);\n        return;\n      } // Async Webpack < v4 chunk without webpack loader.\n      // webpackJsonp([<chunks>], <modules>, ...)\n      // As function name may be changed with `output.jsonpFunction` option we can't rely on it's default name.\n\n\n      if (node.callee.type === 'Identifier' && mayBeAsyncChunkArguments(args) && isModulesList(args[1])) {\n        state.locations = getModulesLocations(args[1]);\n        return;\n      } // Async Webpack v4 chunk without webpack loader.\n      // (window.webpackJsonp=window.webpackJsonp||[]).push([[<chunks>], <modules>, ...]);\n      // As function name may be changed with `output.jsonpFunction` option we can't rely on it's default name.\n\n\n      if (isAsyncChunkPushExpression(node)) {\n        state.locations = getModulesLocations(args[0].elements[1]);\n        return;\n      } // Webpack v4 WebWorkerChunkTemplatePlugin\n      // globalObject.chunkCallbackName([<chunks>],<modules>, ...);\n      // Both globalObject and chunkCallbackName can be changed through the config, so we can't check them.\n\n\n      if (isAsyncWebWorkerChunkExpression(node)) {\n        state.locations = getModulesLocations(args[1]);\n        return;\n      } // Walking into arguments because some of plugins (e.g. `DedupePlugin`) or some Webpack\n      // features (e.g. `umd` library output) can wrap modules list into additional IIFE.\n\n\n      _.each(args, arg => c(arg, state));\n    }\n\n  });\n  let modules;\n\n  if (walkState.locations) {\n    modules = _.mapValues(walkState.locations, loc => content.slice(loc.start, loc.end));\n  } else {\n    modules = {};\n  }\n\n  return {\n    src: content,\n    modules\n  };\n}\n\nfunction isModulesList(node) {\n  return isSimpleModulesList(node) || // Modules are contained in expression `Array([minimum ID]).concat([<module>, <module>, ...])`\n  isOptimizedModulesArray(node);\n}\n\nfunction isSimpleModulesList(node) {\n  return (// Modules are contained in hash. Keys are module ids.\n    isModulesHash(node) || // Modules are contained in array. Indexes are module ids.\n    isModulesArray(node)\n  );\n}\n\nfunction isModulesHash(node) {\n  return node.type === 'ObjectExpression' && _(node.properties).map('value').every(isModuleWrapper);\n}\n\nfunction isModulesArray(node) {\n  return node.type === 'ArrayExpression' && _.every(node.elements, elem => // Some of array items may be skipped because there is no module with such id\n  !elem || isModuleWrapper(elem));\n}\n\nfunction isOptimizedModulesArray(node) {\n  // Checking whether modules are contained in `Array(<minimum ID>).concat(...modules)` array:\n  // https://github.com/webpack/webpack/blob/v1.14.0/lib/Template.js#L91\n  // The `<minimum ID>` + array indexes are module ids\n  return node.type === 'CallExpression' && node.callee.type === 'MemberExpression' && // Make sure the object called is `Array(<some number>)`\n  node.callee.object.type === 'CallExpression' && node.callee.object.callee.type === 'Identifier' && node.callee.object.callee.name === 'Array' && node.callee.object.arguments.length === 1 && isNumericId(node.callee.object.arguments[0]) && // Make sure the property X called for `Array(<some number>).X` is `concat`\n  node.callee.property.type === 'Identifier' && node.callee.property.name === 'concat' && // Make sure exactly one array is passed in to `concat`\n  node.arguments.length === 1 && isModulesArray(node.arguments[0]);\n}\n\nfunction isModuleWrapper(node) {\n  return (// It's an anonymous function expression that wraps module\n    (node.type === 'FunctionExpression' || node.type === 'ArrowFunctionExpression') && !node.id || // If `DedupePlugin` is used it can be an ID of duplicated module...\n    isModuleId(node) || // or an array of shape [<module_id>, ...args]\n    node.type === 'ArrayExpression' && node.elements.length > 1 && isModuleId(node.elements[0])\n  );\n}\n\nfunction isModuleId(node) {\n  return node.type === 'Literal' && (isNumericId(node) || typeof node.value === 'string');\n}\n\nfunction isNumericId(node) {\n  return node.type === 'Literal' && Number.isInteger(node.value) && node.value >= 0;\n}\n\nfunction isChunkIds(node) {\n  // Array of numeric or string ids. Chunk IDs are strings when NamedChunksPlugin is used\n  return node.type === 'ArrayExpression' && _.every(node.elements, isModuleId);\n}\n\nfunction isAsyncChunkPushExpression(node) {\n  const {\n    callee,\n    arguments: args\n  } = node;\n  return callee.type === 'MemberExpression' && callee.property.name === 'push' && callee.object.type === 'AssignmentExpression' && args.length === 1 && args[0].type === 'ArrayExpression' && mayBeAsyncChunkArguments(args[0].elements) && isModulesList(args[0].elements[1]);\n}\n\nfunction mayBeAsyncChunkArguments(args) {\n  return args.length >= 2 && isChunkIds(args[0]);\n}\n\nfunction isAsyncWebWorkerChunkExpression(node) {\n  const {\n    callee,\n    type,\n    arguments: args\n  } = node;\n  return type === 'CallExpression' && callee.type === 'MemberExpression' && args.length === 2 && isChunkIds(args[0]) && isModulesList(args[1]);\n}\n\nfunction getModulesLocations(node) {\n  if (node.type === 'ObjectExpression') {\n    // Modules hash\n    const modulesNodes = node.properties;\n    return _.transform(modulesNodes, (result, moduleNode) => {\n      const moduleId = moduleNode.key.name || moduleNode.key.value;\n      result[moduleId] = getModuleLocation(moduleNode.value);\n    }, {});\n  }\n\n  const isOptimizedArray = node.type === 'CallExpression';\n\n  if (node.type === 'ArrayExpression' || isOptimizedArray) {\n    // Modules array or optimized array\n    const minId = isOptimizedArray ? // Get the [minId] value from the Array() call first argument literal value\n    node.callee.object.arguments[0].value : // `0` for simple array\n    0;\n    const modulesNodes = isOptimizedArray ? // The modules reside in the `concat()` function call arguments\n    node.arguments[0].elements : node.elements;\n    return _.transform(modulesNodes, (result, moduleNode, i) => {\n      if (!moduleNode) return;\n      result[i + minId] = getModuleLocation(moduleNode);\n    }, {});\n  }\n\n  return {};\n}\n\nfunction getModuleLocation(node) {\n  return {\n    start: node.start,\n    end: node.end\n  };\n}","map":{"version":3,"names":["fs","require","_","acorn","walk","module","exports","parseBundle","bundlePath","content","readFileSync","ast","parse","sourceType","ecmaVersion","walkState","locations","recursive","AssignmentExpression","node","state","left","right","object","name","property","isModulesHash","getModulesLocations","CallExpression","c","args","arguments","callee","type","id","length","isSimpleModulesList","mayBeAsyncChunkArguments","isModulesList","isAsyncChunkPushExpression","elements","isAsyncWebWorkerChunkExpression","each","arg","modules","mapValues","loc","slice","start","end","src","isOptimizedModulesArray","isModulesArray","properties","map","every","isModuleWrapper","elem","isNumericId","isModuleId","value","Number","isInteger","isChunkIds","modulesNodes","transform","result","moduleNode","moduleId","key","getModuleLocation","isOptimizedArray","minId","i"],"sources":["C:/Users/Lenovo/Desktop/New folder (2)/strikingDash/node_modules/webpack-bundle-analyzer/lib/parseUtils.js"],"sourcesContent":["\"use strict\";\n\nconst fs = require('fs');\n\nconst _ = require('lodash');\n\nconst acorn = require('acorn');\n\nconst walk = require('acorn-walk');\n\nmodule.exports = {\n  parseBundle\n};\n\nfunction parseBundle(bundlePath) {\n  const content = fs.readFileSync(bundlePath, 'utf8');\n  const ast = acorn.parse(content, {\n    sourceType: 'script',\n    // I believe in a bright future of ECMAScript!\n    // Actually, it's set to `2050` to support the latest ECMAScript version that currently exists.\n    // Seems like `acorn` supports such weird option value.\n    ecmaVersion: 2050\n  });\n  const walkState = {\n    locations: null\n  };\n  walk.recursive(ast, walkState, {\n    AssignmentExpression(node, state) {\n      if (state.locations) return; // Modules are stored in exports.modules:\n      // exports.modules = {};\n\n      const {\n        left,\n        right\n      } = node;\n\n      if (left && left.object && left.object.name === 'exports' && left.property && left.property.name === 'modules' && isModulesHash(right)) {\n        state.locations = getModulesLocations(right);\n      }\n    },\n\n    CallExpression(node, state, c) {\n      if (state.locations) return;\n      const args = node.arguments; // Main chunk with webpack loader.\n      // Modules are stored in first argument:\n      // (function (...) {...})(<modules>)\n\n      if (node.callee.type === 'FunctionExpression' && !node.callee.id && args.length === 1 && isSimpleModulesList(args[0])) {\n        state.locations = getModulesLocations(args[0]);\n        return;\n      } // Async Webpack < v4 chunk without webpack loader.\n      // webpackJsonp([<chunks>], <modules>, ...)\n      // As function name may be changed with `output.jsonpFunction` option we can't rely on it's default name.\n\n\n      if (node.callee.type === 'Identifier' && mayBeAsyncChunkArguments(args) && isModulesList(args[1])) {\n        state.locations = getModulesLocations(args[1]);\n        return;\n      } // Async Webpack v4 chunk without webpack loader.\n      // (window.webpackJsonp=window.webpackJsonp||[]).push([[<chunks>], <modules>, ...]);\n      // As function name may be changed with `output.jsonpFunction` option we can't rely on it's default name.\n\n\n      if (isAsyncChunkPushExpression(node)) {\n        state.locations = getModulesLocations(args[0].elements[1]);\n        return;\n      } // Webpack v4 WebWorkerChunkTemplatePlugin\n      // globalObject.chunkCallbackName([<chunks>],<modules>, ...);\n      // Both globalObject and chunkCallbackName can be changed through the config, so we can't check them.\n\n\n      if (isAsyncWebWorkerChunkExpression(node)) {\n        state.locations = getModulesLocations(args[1]);\n        return;\n      } // Walking into arguments because some of plugins (e.g. `DedupePlugin`) or some Webpack\n      // features (e.g. `umd` library output) can wrap modules list into additional IIFE.\n\n\n      _.each(args, arg => c(arg, state));\n    }\n\n  });\n  let modules;\n\n  if (walkState.locations) {\n    modules = _.mapValues(walkState.locations, loc => content.slice(loc.start, loc.end));\n  } else {\n    modules = {};\n  }\n\n  return {\n    src: content,\n    modules\n  };\n}\n\nfunction isModulesList(node) {\n  return isSimpleModulesList(node) || // Modules are contained in expression `Array([minimum ID]).concat([<module>, <module>, ...])`\n  isOptimizedModulesArray(node);\n}\n\nfunction isSimpleModulesList(node) {\n  return (// Modules are contained in hash. Keys are module ids.\n    isModulesHash(node) || // Modules are contained in array. Indexes are module ids.\n    isModulesArray(node)\n  );\n}\n\nfunction isModulesHash(node) {\n  return node.type === 'ObjectExpression' && _(node.properties).map('value').every(isModuleWrapper);\n}\n\nfunction isModulesArray(node) {\n  return node.type === 'ArrayExpression' && _.every(node.elements, elem => // Some of array items may be skipped because there is no module with such id\n  !elem || isModuleWrapper(elem));\n}\n\nfunction isOptimizedModulesArray(node) {\n  // Checking whether modules are contained in `Array(<minimum ID>).concat(...modules)` array:\n  // https://github.com/webpack/webpack/blob/v1.14.0/lib/Template.js#L91\n  // The `<minimum ID>` + array indexes are module ids\n  return node.type === 'CallExpression' && node.callee.type === 'MemberExpression' && // Make sure the object called is `Array(<some number>)`\n  node.callee.object.type === 'CallExpression' && node.callee.object.callee.type === 'Identifier' && node.callee.object.callee.name === 'Array' && node.callee.object.arguments.length === 1 && isNumericId(node.callee.object.arguments[0]) && // Make sure the property X called for `Array(<some number>).X` is `concat`\n  node.callee.property.type === 'Identifier' && node.callee.property.name === 'concat' && // Make sure exactly one array is passed in to `concat`\n  node.arguments.length === 1 && isModulesArray(node.arguments[0]);\n}\n\nfunction isModuleWrapper(node) {\n  return (// It's an anonymous function expression that wraps module\n    (node.type === 'FunctionExpression' || node.type === 'ArrowFunctionExpression') && !node.id || // If `DedupePlugin` is used it can be an ID of duplicated module...\n    isModuleId(node) || // or an array of shape [<module_id>, ...args]\n    node.type === 'ArrayExpression' && node.elements.length > 1 && isModuleId(node.elements[0])\n  );\n}\n\nfunction isModuleId(node) {\n  return node.type === 'Literal' && (isNumericId(node) || typeof node.value === 'string');\n}\n\nfunction isNumericId(node) {\n  return node.type === 'Literal' && Number.isInteger(node.value) && node.value >= 0;\n}\n\nfunction isChunkIds(node) {\n  // Array of numeric or string ids. Chunk IDs are strings when NamedChunksPlugin is used\n  return node.type === 'ArrayExpression' && _.every(node.elements, isModuleId);\n}\n\nfunction isAsyncChunkPushExpression(node) {\n  const {\n    callee,\n    arguments: args\n  } = node;\n  return callee.type === 'MemberExpression' && callee.property.name === 'push' && callee.object.type === 'AssignmentExpression' && args.length === 1 && args[0].type === 'ArrayExpression' && mayBeAsyncChunkArguments(args[0].elements) && isModulesList(args[0].elements[1]);\n}\n\nfunction mayBeAsyncChunkArguments(args) {\n  return args.length >= 2 && isChunkIds(args[0]);\n}\n\nfunction isAsyncWebWorkerChunkExpression(node) {\n  const {\n    callee,\n    type,\n    arguments: args\n  } = node;\n  return type === 'CallExpression' && callee.type === 'MemberExpression' && args.length === 2 && isChunkIds(args[0]) && isModulesList(args[1]);\n}\n\nfunction getModulesLocations(node) {\n  if (node.type === 'ObjectExpression') {\n    // Modules hash\n    const modulesNodes = node.properties;\n    return _.transform(modulesNodes, (result, moduleNode) => {\n      const moduleId = moduleNode.key.name || moduleNode.key.value;\n      result[moduleId] = getModuleLocation(moduleNode.value);\n    }, {});\n  }\n\n  const isOptimizedArray = node.type === 'CallExpression';\n\n  if (node.type === 'ArrayExpression' || isOptimizedArray) {\n    // Modules array or optimized array\n    const minId = isOptimizedArray ? // Get the [minId] value from the Array() call first argument literal value\n    node.callee.object.arguments[0].value : // `0` for simple array\n    0;\n    const modulesNodes = isOptimizedArray ? // The modules reside in the `concat()` function call arguments\n    node.arguments[0].elements : node.elements;\n    return _.transform(modulesNodes, (result, moduleNode, i) => {\n      if (!moduleNode) return;\n      result[i + minId] = getModuleLocation(moduleNode);\n    }, {});\n  }\n\n  return {};\n}\n\nfunction getModuleLocation(node) {\n  return {\n    start: node.start,\n    end: node.end\n  };\n}"],"mappings":"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"},"metadata":{},"sourceType":"script"}